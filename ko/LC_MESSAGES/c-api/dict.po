# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Thomas Sungjin Kang <potopro@gmail.com>, 2019
# BJ Jang <jangbi882@gmail.com>, 2019
# Byeonghyeon Lee <inr1319@gmail.com>, 2019
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-16 16:41+0000\n"
"PO-Revision-Date: 2019-09-01 03:39+0000\n"
"Last-Translator: Byeonghyeon Lee <inr1319@gmail.com>, 2019\n"
"Language-Team: Korean (https://app.transifex.com/python-doc/teams/5390/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:6
msgid "Dictionary Objects"
msgstr "딕셔너리 (Dictionary) 객체"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:13
msgid ""
"This subtype of :c:type:`PyObject` represents a Python dictionary object."
msgstr ""
"이  :c:type:`PyObject` 의 파생 타입은 파이썬 딕셔너리 객체를 나타냅니다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python dictionary "
"type.  This is the same object as :class:`dict` in the Python layer."
msgstr ""
"이 :c:type:`PyTypeObject` 의 인스턴스는 파이썬 딕셔너리 타입을 나타냅니다. 이"
"것은 파이썬 레이어의 :class:`dict` 와 동일한 객체입니다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:24
msgid ""
"Return true if *p* is a dict object or an instance of a subtype of the dict "
"type."
msgstr ""
"만약 *p* 가 dict 객체이거나 dict 타입의 서브타입의 인스턴스라면 ture를 반환합"
"니다. "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:30
msgid ""
"Return true if *p* is a dict object, but not an instance of a subtype of the "
"dict type."
msgstr ""
"만약 *p* 가 dict 객체이면 true를 반환합니다. 하지만, dict 타입의 서브타입의 "
"인스턴스라면 false를 반환합니다. "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:36
msgid "Return a new empty dictionary, or ``NULL`` on failure."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:41
msgid ""
"Return a :class:`types.MappingProxyType` object for a mapping which enforces "
"read-only behavior.  This is normally used to create a view to prevent "
"modification of the dictionary for non-dynamic class types."
msgstr ""
"강제 읽기전용 동작으로 매핑을 위한 :class:`types.MappingProxyType` 객체를 반"
"환합니다. 이것은 일반적으로 비동적 클래스 타입을 위한 딕셔너리의 변경을 막기 "
"위해 view를 만드는데 사용됩니다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:48
msgid "Empty an existing dictionary of all key-value pairs."
msgstr "기존 딕셔너리의 모든 키-값 쌍을 비웁니다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:53
msgid ""
"Determine if dictionary *p* contains *key*.  If an item in *p* is matches "
"*key*, return ``1``, otherwise return ``0``.  On error, return ``-1``. This "
"is equivalent to the Python expression ``key in p``."
msgstr ""
"딕셔너리 *p*가 *key*를 포함하고 있는지 확인합니다. 만약 딕셔너리 *p*에 *key*"
"와 일치하는 항목이 있다면, \"1\"을 반환하고, 그렇지 않으면 \"0\"을 반환합니"
"다. 에러가 발생했다면, \"-1\"을 반환합니다. 이것은 Python 표현인 \"key in "
"p\"와 동일합니다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:60
msgid "Return a new dictionary that contains the same key-value pairs as *p*."
msgstr "딕셔너리 *p*와 동일한 키-값 쌍을 갖는 새로운 딕셔너리를 반환합니다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:65
msgid ""
"Insert *value* into the dictionary *p* with a key of *key*.  *key* must be :"
"term:`hashable`; if it isn't, :exc:`TypeError` will be raised. Return ``0`` "
"on success or ``-1`` on failure."
msgstr ""
"*key*라는 키를 가진 딕셔너리 *p*에 *value*를 집어넣습니다. *key*는 반드시 :"
"term:`hashable`이여야만 합니다. 그렇지 않으면, :exc:`TypeError` 에러가 발생합"
"니다. 성공시에는 \"0\"을 반환하며, 실패했을 시에는 \"-1\"을 반환합니다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:74
msgid ""
"Insert *value* into the dictionary *p* using *key* as a key. *key* should be "
"a :c:type:`const char\\*`.  The key object is created using "
"``PyUnicode_FromString(key)``.  Return ``0`` on success or ``-1`` on failure."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:82
msgid ""
"Remove the entry in dictionary *p* with key *key*. *key* must be hashable; "
"if it isn't, :exc:`TypeError` is raised.  Return ``0`` on success or ``-1`` "
"on failure."
msgstr ""
"*key*라는 키를 가진 딕셔너리 *p*에 등록된 값을 제거합니다. *key*는 반드시 "
"hashable이여야만 합니다. 그렇지 않으면 :exc:`TypeError`를 반환합니다. 성공시"
"에는 \"0\"을 반환하며, 실패했을 시에는 \"-1\"을 반환합니다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:89
msgid ""
"Remove the entry in dictionary *p* which has a key specified by the string "
"*key*.  Return ``0`` on success or ``-1`` on failure."
msgstr ""
"딕셔너리 *p* 에서 문자열 *key* 를 키로 사용하는 항목을 제거합니다. 성공했을 "
"경우에는 ``0`` 을 실패한 경우에는 ``-1`` 을 반환합니다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:95
msgid ""
"Return the object from dictionary *p* which has a key *key*.  Return "
"``NULL`` if the key *key* is not present, but *without* setting an exception."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:98
msgid ""
"Note that exceptions which occur while calling :meth:`__hash__` and :meth:"
"`__eq__` methods will get suppressed. To get error reporting use :c:func:"
"`PyDict_GetItemWithError()` instead."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:105
msgid ""
"Variant of :c:func:`PyDict_GetItem` that does not suppress exceptions. "
"Return ``NULL`` **with** an exception set if an exception occurred.  Return "
"``NULL`` **without** an exception set if the key wasn't present."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:113
msgid ""
"This is the same as :c:func:`PyDict_GetItem`, but *key* is specified as a :c:"
"type:`const char\\*`, rather than a :c:type:`PyObject\\*`."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:116
msgid ""
"Note that exceptions which occur while calling :meth:`__hash__` and :meth:"
"`__eq__` methods and creating a temporary string object will get suppressed. "
"To get error reporting use :c:func:`PyDict_GetItemWithError()` instead."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:124
msgid ""
"This is the same as the Python-level :meth:`dict.setdefault`.  If present, "
"it returns the value corresponding to *key* from the dictionary *p*.  If the "
"key is not in the dict, it is inserted with value *defaultobj* and "
"*defaultobj* is returned.  This function evaluates the hash function of "
"*key* only once, instead of evaluating it independently for the lookup and "
"the insertion."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:134
msgid ""
"Return a :c:type:`PyListObject` containing all the items from the dictionary."
msgstr ""
"딕셔너리에서 모든 아이템을 포함하는 :c:type:`PyListObject` 를 반환합니다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:139
msgid ""
"Return a :c:type:`PyListObject` containing all the keys from the dictionary."
msgstr ""
"딕셔너리에서 모든 아이템을 포함하는 :c:type:`PyListObject` 를 반환합니다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:144
msgid ""
"Return a :c:type:`PyListObject` containing all the values from the "
"dictionary *p*."
msgstr ""
"딕셔너리 *p* 에서 모든 아이템을 포함하는 :c:type:`PyListObject` 를 반환합니"
"다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:152
msgid ""
"Return the number of items in the dictionary.  This is equivalent to "
"``len(p)`` on a dictionary."
msgstr ""
"딕셔너리에 있는 아이템 수를 반환합니다. 이건 딕셔너리에서 ``len(p)`` 를 한 것"
"과 동일합니다."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:158
msgid ""
"Iterate over all key-value pairs in the dictionary *p*.  The :c:type:"
"`Py_ssize_t` referred to by *ppos* must be initialized to ``0`` prior to the "
"first call to this function to start the iteration; the function returns "
"true for each pair in the dictionary, and false once all pairs have been "
"reported.  The parameters *pkey* and *pvalue* should either point to :c:type:"
"`PyObject\\*` variables that will be filled in with each key and value, "
"respectively, or may be ``NULL``.  Any references returned through them are "
"borrowed.  *ppos* should not be altered during iteration. Its value "
"represents offsets within the internal dictionary structure, and since the "
"structure is sparse, the offsets are not consecutive."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:169
msgid "For example::"
msgstr "예제:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:179
msgid ""
"The dictionary *p* should not be mutated during iteration.  It is safe to "
"modify the values of the keys as you iterate over the dictionary, but only "
"so long as the set of keys does not change.  For example::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:204
msgid ""
"Iterate over mapping object *b* adding key-value pairs to dictionary *a*. "
"*b* may be a dictionary, or any object supporting :c:func:`PyMapping_Keys` "
"and :c:func:`PyObject_GetItem`. If *override* is true, existing pairs in *a* "
"will be replaced if a matching key is found in *b*, otherwise pairs will "
"only be added if there is not a matching key in *a*. Return ``0`` on success "
"or ``-1`` if an exception was raised."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:214
msgid ""
"This is the same as ``PyDict_Merge(a, b, 1)`` in C, and is similar to ``a."
"update(b)`` in Python except that :c:func:`PyDict_Update` doesn't fall back "
"to the iterating over a sequence of key value pairs if the second argument "
"has no \"keys\" attribute.  Return ``0`` on success or ``-1`` if an "
"exception was raised."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:223
msgid ""
"Update or merge into dictionary *a*, from the key-value pairs in *seq2*. "
"*seq2* must be an iterable object producing iterable objects of length 2, "
"viewed as key-value pairs.  In case of duplicate keys, the last wins if "
"*override* is true, else the first wins. Return ``0`` on success or ``-1`` "
"if an exception was raised. Equivalent Python (except for the return value)::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/dict.rst:238
msgid "Clear the free list. Return the total number of freed items."
msgstr ""
