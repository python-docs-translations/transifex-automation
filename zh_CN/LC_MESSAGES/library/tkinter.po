# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# cdarlint <cdarling@126.com>, 2020
# dannyvi <dannyvis@icloud.com>, 2020
# 1lin24 <1lin24@sina.com>, 2020
# oneTaken <pengxiaoping1993@gmail.com>, 2020
# Menghua Xiao <arieshout@gmail.com>, 2020
# ailin zhang <zhangailin@gmail.com>, 2020
# Alpha Du <alphanow@gmail.com>, 2020
# ppcfish <ppcfish@gmail.com>, 2020
# 钢 彭 <szhairui@gmail.com>, 2020
# Leo Li <foxleoly@hotmail.com>, 2020
# Alex Ding <dxtfz@foxmail.com>, 2020
# Y. Z. Chen <754097987@qq.com>, 2021
# Dai Xu <daixu61@hotmail.com>, 2022
# Freesand Leo <yuqinju@163.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-02 14:43+0000\n"
"PO-Revision-Date: 2020-05-30 12:12+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2022\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/tkinter.rst:2
msgid ":mod:`tkinter` --- Python interface to Tcl/Tk"
msgstr ":mod:`tkinter` --- Tcl/Tk的Python接口"

#: ../../library/tkinter.rst:9
msgid "**Source code:** :source:`Lib/tkinter/__init__.py`"
msgstr "**源代码:** :source:`Lib/tkinter/__init__.py`"

#: ../../library/tkinter.rst:13
msgid ""
"The :mod:`tkinter` package (\"Tk interface\") is the standard Python "
"interface to the Tk GUI toolkit.  Both Tk and :mod:`tkinter` are available "
"on most Unix platforms, as well as on Windows systems.  (Tk itself is not "
"part of Python; it is maintained at ActiveState.)"
msgstr ""
" :mod:`tkinter` 包（“Tk interface”）是 Python 使用 Tk GUI 工具包的标准接口。Tk 和 "
":mod:`tkinter` 在大多数 Unix 平台和 Windows 系统上可用。（Tk 本身不是 Python 的一部分；它现在由 "
"ActiveState 维护。）"

#: ../../library/tkinter.rst:18
msgid ""
"Running ``python -m tkinter`` from the command line should open a window "
"demonstrating a simple Tk interface, letting you know that :mod:`tkinter` is"
" properly installed on your system, and also showing what version of Tcl/Tk "
"is installed, so you can read the Tcl/Tk documentation specific to that "
"version."
msgstr ""
"在命令行中运行 ``python -m tkinter``，应该会弹出一个Tk界面的窗口，表明 :mod:`tkinter` 包已经正确安装，而且告诉你"
" Tcl/Tk 的版本号，通过这个版本号，你就可以参考对应的 Tcl/Tk 文档了。"

#: ../../library/tkinter.rst:25
msgid "Tkinter documentation:"
msgstr "Tkinter文档："

#: ../../library/tkinter.rst:29
msgid "`Python Tkinter Resources <https://wiki.python.org/moin/TkInter>`_"
msgstr "`Python Tkinter 资源 <https://wiki.python.org/moin/TkInter>`_"

#: ../../library/tkinter.rst:28
msgid ""
"The Python Tkinter Topic Guide provides a great deal of information on using"
" Tk from Python and links to other sources of information on Tk."
msgstr ""
"The Python Tkinter Topic Guide 提供了在 Python 中使用 Tk 的很多信息， 同时包含了Tk其他信息的链接。"

#: ../../library/tkinter.rst:32
msgid "`TKDocs <http://www.tkdocs.com/>`_"
msgstr "`TKDocs <http://www.tkdocs.com/>`_"

#: ../../library/tkinter.rst:32
msgid ""
"Extensive tutorial plus friendlier widget pages for some of the widgets."
msgstr "大量的教程，部分可视化组件的介绍说明。"

#: ../../library/tkinter.rst:35
msgid ""
"`Tkinter 8.5 reference: a GUI for Python <https://www.tkdocs.com/shipman/>`_"
msgstr "`Tkinter 8.5 参考：一个Python图形用户界面 <https://www.tkdocs.com/shipman/>`_"

#: ../../library/tkinter.rst:35
msgid "On-line reference material."
msgstr "在线参考资料。"

#: ../../library/tkinter.rst:38
msgid "`Tkinter docs from effbot <http://effbot.org/tkinterbook/>`_"
msgstr "`Tkinter docs from effbot <http://effbot.org/tkinterbook/>`_"

#: ../../library/tkinter.rst:38
msgid "Online reference for tkinter supported by effbot.org."
msgstr "effbot.org 提供的 tkinter 在线参考资料。"

#: ../../library/tkinter.rst:41
msgid "`Programming Python <http://learning-python.com/about-pp4e.html>`_"
msgstr "`使用 Python 编程 <http://learning-python.com/about-pp4e.html>`_"

#: ../../library/tkinter.rst:41
msgid "Book by Mark Lutz, has excellent coverage of Tkinter."
msgstr "由 Mark Lutz 所著的书籍，对 Tkinter 进行了完美的介绍。"

#: ../../library/tkinter.rst:44
msgid ""
"`Modern Tkinter for Busy Python Developers <https://www.amazon.com/Modern-"
"Tkinter-Python-Developers-ebook/dp/B0071QDNLO/>`_"
msgstr ""
"`为繁忙的 Python 开发者所准备的现代 Tkinter <https://www.amazon.com/Modern-Tkinter-"
"Python-Developers-ebook/dp/B0071QDNLO/>`_"

#: ../../library/tkinter.rst:44
msgid ""
"Book by Mark Roseman about building attractive and modern graphical user "
"interfaces with Python and Tkinter."
msgstr "由 Mark Rozerman 所著的关于如何使用 Python 和 Tkinter 来搭建有吸引力的和现代化的图形用户界面的书籍"

#: ../../library/tkinter.rst:47
msgid ""
"`Python and Tkinter Programming <https://www.manning.com/books/python-and-"
"tkinter-programming>`_"
msgstr ""
"`Python 和 Tkinter 编程 <https://www.manning.com/books/python-and-tkinter-"
"programming>`_"

#: ../../library/tkinter.rst:47
msgid "Book by John Grayson (ISBN 1-884777-81-3)."
msgstr "作者： John Grayson (ISBN 1-884777-81-3)."

#: ../../library/tkinter.rst:49
msgid "Tcl/Tk documentation:"
msgstr "Tcl/Tk 文档:"

#: ../../library/tkinter.rst:53
msgid "`Tk commands <https://www.tcl.tk/man/tcl8.6/TkCmd/contents.htm>`_"
msgstr "`Tk 命令 <https://www.tcl.tk/man/tcl8.6/TkCmd/contents.htm>`_"

#: ../../library/tkinter.rst:52
msgid ""
"Most commands are available as :mod:`tkinter` or :mod:`tkinter.ttk` classes."
" Change '8.6' to match the version of your Tcl/Tk installation."
msgstr ""
"多数命令以 :mod:`tkinter` 或者 :mod:`tkinter.ttk` 类的形式存在。改变 '8.6' 以匹配所安装的 Tcl/Tk "
"版本。"

#: ../../library/tkinter.rst:56
msgid "`Tcl/Tk recent man pages <https://www.tcl.tk/doc/>`_"
msgstr "`Tcl/Tk 最新手册页面 <https://www.tcl.tk/doc/>`_"

#: ../../library/tkinter.rst:56
msgid "Recent Tcl/Tk manuals on www.tcl.tk."
msgstr "www.tcl.tk 上面最新的 Tcl/Tk 手册。"

#: ../../library/tkinter.rst:59
msgid "`ActiveState Tcl Home Page <https://tcl.tk>`_"
msgstr "`ActiveState Tcl 主页 <https://tcl.tk>`_"

#: ../../library/tkinter.rst:59
msgid "The Tk/Tcl development is largely taking place at ActiveState."
msgstr "Tk/Tcl 的多数开发工作发生在 ActiveState 。"

#: ../../library/tkinter.rst:62
msgid ""
"`Tcl and the Tk Toolkit "
"<https://www.amazon.com/exec/obidos/ASIN/020163337X>`_"
msgstr "`Tcl 及 Tk 工具集 <https://www.amazon.com/exec/obidos/ASIN/020163337X>`_"

#: ../../library/tkinter.rst:62
msgid "Book by John Ousterhout, the inventor of Tcl."
msgstr "由 Tcl 发明者 John Ousterhout 所著的书籍。"

#: ../../library/tkinter.rst:64
msgid "`Practical Programming in Tcl and Tk <http://www.beedub.com/book/>`_"
msgstr "` Tcl 和 Tk 编程实战 <http://www.beedub.com/book/>`_"

#: ../../library/tkinter.rst:65
msgid "Brent Welch's encyclopedic book."
msgstr "Brent Welch 所著的百科全局式书籍。"

#: ../../library/tkinter.rst:69
msgid "Tkinter Modules"
msgstr "Tkinter 模块"

#: ../../library/tkinter.rst:71
msgid ""
"Most of the time, :mod:`tkinter` is all you really need, but a number of "
"additional modules are available as well.  The Tk interface is located in a "
"binary module named :mod:`_tkinter`. This module contains the low-level "
"interface to Tk, and should never be used directly by application "
"programmers. It is usually a shared library (or DLL), but might in some "
"cases be statically linked with the Python interpreter."
msgstr ""
"在大多数时候你只需要 :mod:`tkinter` 就足够了，但也有一些额外的模块可供使用。Tk 接口位于一个名字 :mod:`_tkinter` "
"的二进制模块当中。此模块包含了低层级的 Tk 接口，它不应该被应用程序员所直接使用。它通常是一个共享库（或 DLL），但在某些情况下也可能被静态链接到 "
"Python 解释器。"

#: ../../library/tkinter.rst:78
msgid ""
"In addition to the Tk interface module, :mod:`tkinter` includes a number of "
"Python modules, :mod:`tkinter.constants` being one of the most important. "
"Importing :mod:`tkinter` will automatically import :mod:`tkinter.constants`,"
" so, usually, to use Tkinter all you need is a simple import statement::"
msgstr ""
"除了Tk接口， :mod:`tkinter` 也包含了若干 Python 模块，:mod:`tkinter.constants` 是其中最重要的。导入 "
":mod:`tkinter` 会自动导入 :mod:`tkinter.constants` ，所以，要使用 Tkinter 通常你只需要一条简单的 "
"import 语句::"

#: ../../library/tkinter.rst:85
msgid "Or, more often::"
msgstr "或者更常用的::"

#: ../../library/tkinter.rst:92
msgid ""
"The :class:`Tk` class is instantiated without arguments. This creates a "
"toplevel widget of Tk which usually is the main window of an application. "
"Each instance has its own associated Tcl interpreter."
msgstr ""
":class:`Tk` 类被初始化时无参数。此时会创建一个 Tk 顶级控件，通常是应用程序的主窗口。每个实例都有自己关联的 Tcl 解释器。"

#: ../../library/tkinter.rst:101
msgid ""
"The :func:`Tcl` function is a factory function which creates an object much "
"like that created by the :class:`Tk` class, except that it does not "
"initialize the Tk subsystem.  This is most often useful when driving the Tcl"
" interpreter in an environment where one doesn't want to create extraneous "
"toplevel windows, or where one cannot (such as Unix/Linux systems without an"
" X server).  An object created by the :func:`Tcl` object can have a Toplevel"
" window created (and the Tk subsystem initialized) by calling its "
":meth:`loadtk` method."
msgstr ""
":func:`Tcl` 函数是一个工厂函数，它创建的对象与 :class:`Tk` 类创建的对象非常相似，只是它不初始化 Tk 子系统。 "
"在不想创建或无法创建（如没有 X Server 的 Unix/Linux 系统）额外的顶层窗口的环境中驱动 Tcl 解释器时，这一点非常有用。 由 "
":func:`Tcl` 对象创建的对象可以通过调用其 :meth:`loadtk` 方法来创建顶层窗口（并初始化 Tk 子系统）。"

#: ../../library/tkinter.rst:110
msgid "Other modules that provide Tk support include:"
msgstr "提供Tk支持的其他模块包括："

#: ../../library/tkinter.rst:113
msgid ":mod:`tkinter.scrolledtext`"
msgstr ":mod:`tkinter.scrolledtext`"

#: ../../library/tkinter.rst:113
msgid "Text widget with a vertical scroll bar built in."
msgstr "内置纵向滚动条的文本组件。"

#: ../../library/tkinter.rst:116
msgid ":mod:`tkinter.colorchooser`"
msgstr ":mod:`tkinter.colorchooser`"

#: ../../library/tkinter.rst:116
msgid "Dialog to let the user choose a color."
msgstr "让用户选择颜色的对话框。"

#: ../../library/tkinter.rst:119
msgid ":mod:`tkinter.commondialog`"
msgstr ":mod:`tkinter.commondialog`"

#: ../../library/tkinter.rst:119
msgid "Base class for the dialogs defined in the other modules listed here."
msgstr "在此处列出的其他模块中定义的对话框的基类。"

#: ../../library/tkinter.rst:122
msgid ":mod:`tkinter.filedialog`"
msgstr ":mod:`tkinter.filedialog`"

#: ../../library/tkinter.rst:122
msgid "Common dialogs to allow the user to specify a file to open or save."
msgstr "允许用户指定文件的通用对话框，用于打开或保存文件。"

#: ../../library/tkinter.rst:125
msgid ":mod:`tkinter.font`"
msgstr ":mod:`tkinter.font`"

#: ../../library/tkinter.rst:125
msgid "Utilities to help work with fonts."
msgstr "帮助操作字体的工具。"

#: ../../library/tkinter.rst:128
msgid ":mod:`tkinter.messagebox`"
msgstr ":mod:`tkinter.messagebox`"

#: ../../library/tkinter.rst:128
msgid "Access to standard Tk dialog boxes."
msgstr "访问标准的 Tk 对话框。"

#: ../../library/tkinter.rst:131
msgid ":mod:`tkinter.simpledialog`"
msgstr ":mod:`tkinter.simpledialog`"

#: ../../library/tkinter.rst:131
msgid "Basic dialogs and convenience functions."
msgstr "基础对话框和便捷功能。"

#: ../../library/tkinter.rst:135
msgid ":mod:`tkinter.dnd`"
msgstr ":mod:`tkinter.dnd`"

#: ../../library/tkinter.rst:134
msgid ""
"Drag-and-drop support for :mod:`tkinter`. This is experimental and should "
"become deprecated when it is replaced  with the Tk DND."
msgstr "为 :mod:`tkinter` 提供拖放支持。这是实验性功能，当被 Tk DND 取代时应被废弃。"

#: ../../library/tkinter.rst:139
msgid ":mod:`turtle`"
msgstr ":mod:`turtle`"

#: ../../library/tkinter.rst:138
msgid "Turtle graphics in a Tk window."
msgstr "Tk 窗口中的海龟绘图库。"

#: ../../library/tkinter.rst:142
msgid "Tkinter Life Preserver"
msgstr "Tkinter 拾遗"

#: ../../library/tkinter.rst:147
msgid ""
"This section is not designed to be an exhaustive tutorial on either Tk or "
"Tkinter.  Rather, it is intended as a stop gap, providing some introductory "
"orientation on the system."
msgstr "本节不应作为 Tk 或 Tkinter 的详尽教程。而只是一个补充，提供一些系统指南。"

#: ../../library/tkinter.rst:151
msgid "Credits:"
msgstr "致谢："

#: ../../library/tkinter.rst:153
msgid "Tk was written by John Ousterhout while at Berkeley."
msgstr "Tk 是 John Ousterhout 在伯克利大学时写的。"

#: ../../library/tkinter.rst:155
msgid "Tkinter was written by Steen Lumholt and Guido van Rossum."
msgstr "Tkinter 是由 Steen Lumholt 和 Guido van Rossum 编写的。"

#: ../../library/tkinter.rst:157
msgid ""
"This Life Preserver was written by Matt Conway at the University of "
"Virginia."
msgstr "本拾遗由弗吉尼亚大学的 Matt Conway 撰写。"

#: ../../library/tkinter.rst:159
msgid ""
"The HTML rendering, and some liberal editing, was produced from a FrameMaker"
" version by Ken Manheimer."
msgstr "HTML 渲染和一些自由编辑功能，是由 Ken Manheimer 根据 FrameMaker 创建的。"

#: ../../library/tkinter.rst:162
msgid ""
"Fredrik Lundh elaborated and revised the class interface descriptions, to "
"get them current with Tk 4.2."
msgstr "Fredrik Lundh 认真研究并修改了类的接口描述，使其与 Tk 4.2 保持一致。"

#: ../../library/tkinter.rst:165
msgid ""
"Mike Clarkson converted the documentation to LaTeX, and compiled the  User "
"Interface chapter of the reference manual."
msgstr "Mike Clarkson 将文档转换为 LaTeX 格式，并编写了参考手册的用户界面章节。"

#: ../../library/tkinter.rst:170
msgid "How To Use This Section"
msgstr "本节内容的用法"

#: ../../library/tkinter.rst:172
msgid ""
"This section is designed in two parts: the first half (roughly) covers "
"background material, while the second half can be taken to the keyboard as a"
" handy reference."
msgstr "本节分为两部分：前半部分（大致）涵盖了背景材料，后半部分可以作为手头的参考手册。"

#: ../../library/tkinter.rst:176
msgid ""
"When trying to answer questions of the form \"how do I do blah\", it is "
"often best to find out how to do \"blah\" in straight Tk, and then convert "
"this back into the corresponding :mod:`tkinter` call. Python programmers can"
" often guess at the correct Python command by looking at the Tk "
"documentation. This means that in order to use Tkinter, you will have to "
"know a little bit about Tk. This document can't fulfill that role, so the "
"best we can do is point you to the best documentation that exists. Here are "
"some hints:"
msgstr ""
"当试图回答“如何才能怎么怎么”这种问题时，通常最好是弄清楚如何直接在 Tk 中实现，然后转换回相应的 :mod:`tkinter` 调用。Python "
"程序员通常可查看 Tk 文档来猜测正确的 Python 命令。这意味着要用好 Tkinter，必须对 Tk "
"有一定的了解。本文无法完成这个任务，所以最好的做法就是给出目前最好的文档。下面给出一些小提示："

#: ../../library/tkinter.rst:184
msgid ""
"The authors strongly suggest getting a copy of the Tk man pages. "
"Specifically, the man pages in the ``manN`` directory are most useful. The "
"``man3`` man pages describe the C interface to the Tk library and thus are "
"not especially helpful for script writers."
msgstr ""
"作者强烈建议用户先拿到一份 Tk 手册。具体来说，``manN`` 目录下的 man 文档是最有用的。``man3`` 的 man 文档描述了 Tk "
"库的 C 接口，因此对脚本编写人员没有什么特别的帮助。"

#: ../../library/tkinter.rst:189
msgid ""
"Addison-Wesley publishes a book called Tcl and the Tk Toolkit by John "
"Ousterhout (ISBN 0-201-63337-X) which is a good introduction to Tcl and Tk "
"for the novice.  The book is not exhaustive, and for many details it defers "
"to the man pages."
msgstr ""
"Addison-Wesley 出版了一本名为《Tcl 和 Tk 工具包》的书，作者是 John Ousterhout（ISBN "
"0-201-63337-X），对于新手来说，这是一本很好的 Tcl 和Tk 介绍书籍。该书不算详尽，很多细节还是要看 man 手册。"

#: ../../library/tkinter.rst:194
msgid ""
":file:`tkinter/__init__.py` is a last resort for most, but can be a good "
"place to go when nothing else makes sense."
msgstr "对大多数人而言，:file:`tkinter/__init__.py` 是最后一招，但其他手段都无效时也不失为一个好去处。"

#: ../../library/tkinter.rst:199
msgid "A Simple Hello World Program"
msgstr "简单的 Hello World 程序"

#: ../../library/tkinter.rst:231
msgid "A (Very) Quick Look at Tcl/Tk"
msgstr "Tcl/Tk 速览"

#: ../../library/tkinter.rst:233
msgid ""
"The class hierarchy looks complicated, but in actual practice, application "
"programmers almost always refer to the classes at the very bottom of the "
"hierarchy."
msgstr "类的层次结构看起来很复杂，但在实际操作中，应用程序编写人员几乎总是查看最底层的类。"

#: ../../library/tkinter.rst:237
msgid "Notes:"
msgstr "注释:"

#: ../../library/tkinter.rst:239
msgid ""
"These classes are provided for the purposes of organizing certain functions "
"under one namespace. They aren't meant to be instantiated independently."
msgstr "提供这些类，是为了能在同一个命名空间下将某些功能组织在一起。并不意味着可以独立对其进行实例化。"

#: ../../library/tkinter.rst:242
msgid ""
"The :class:`Tk` class is meant to be instantiated only once in an "
"application. Application programmers need not instantiate one explicitly, "
"the system creates one whenever any of the other classes are instantiated."
msgstr ""
":class:`Tk` 类在同一个应用程序中仅需作一次实例化。应用程序编程人员不需要显式进行实例化，只要有其他任何类被实例化，系统就会创建一个。"

#: ../../library/tkinter.rst:246
msgid ""
"The :class:`Widget` class is not meant to be instantiated, it is meant only "
"for subclassing to make \"real\" widgets (in C++, this is called an "
"'abstract class')."
msgstr ":class:`Widget` 类不是用来实例化的，它仅用于继承以便生成“真正”的部件（ C++ 中称为“抽象类”）。"

#: ../../library/tkinter.rst:250
msgid ""
"To make use of this reference material, there will be times when you will "
"need to know how to read short passages of Tk and how to identify the "
"various parts of a Tk command.   (See section :ref:`tkinter-basic-mapping` "
"for the :mod:`tkinter` equivalents of what's below.)"
msgstr ""
"若要充分利用这些参考资料，有时需要知道如何阅读 Tk 的短文，以及如何识别 Tk 命令的各个部分。（参见 :ref:`tkinter-basic-"
"mapping` 一节，了解以下内容在 :mod:`tkinter` 中的对应部分）。"

#: ../../library/tkinter.rst:255
msgid ""
"Tk scripts are Tcl programs.  Like all Tcl programs, Tk scripts are just "
"lists of tokens separated by spaces.  A Tk widget is just its *class*, the "
"*options* that help configure it, and the *actions* that make it do useful "
"things."
msgstr ""
"Tk 脚本就是 Tcl 程序。像所有其他的 Tcl 程序一样，Tk 脚本只是由空格分隔的单词列表。一个Tk 部件只是它的 "
"*class*，*options* 用于进行配置，*actions* 让它执行有用的动作。"

#: ../../library/tkinter.rst:259
msgid "To make a widget in Tk, the command is always of the form::"
msgstr "要在 Tk 中制作一个部件，总是采用如下格式的命令："

#: ../../library/tkinter.rst:264
msgid "*classCommand*"
msgstr "*classCommand*"

#: ../../library/tkinter.rst:264
msgid "denotes which kind of widget to make (a button, a label, a menu...)"
msgstr "表示要制作何种部件（按钮、标签、菜单......）。"

#: ../../library/tkinter.rst:273
msgid "*newPathname*"
msgstr "*newPathname*"

#: ../../library/tkinter.rst:269
msgid ""
"is the new name for this widget.  All names in Tk must be unique.  To help "
"enforce this, widgets in Tk are named with *pathnames*, just like files in a"
" file system.  The top level widget, the *root*, is called ``.`` (period) "
"and children are delimited by more periods.  For example, "
"``.myApp.controlPanel.okButton`` might be the name of a widget."
msgstr ""
"该组件的新名字。Tk 中的所有名字都必须唯一。为了帮助实现这一点，Tk 中的部件都用 *路径* 命名，就像文件系统中的文件一样。顶层的部件，即 "
"*根*，名为 ``.``（句点），而子部件则由更多的句点分隔。比如部件名可能会是 ``.myApp.controlPanel.okButton`` 。"

#: ../../library/tkinter.rst:279
msgid "*options*"
msgstr "*options*"

#: ../../library/tkinter.rst:276
msgid ""
"configure the widget's appearance and in some cases, its behavior.  The "
"options come in the form of a list of flags and values. Flags are preceded "
"by a '-', like Unix shell command flags, and values are put in quotes if "
"they are more than one word."
msgstr ""
"配置部件的外观，有时也能配置行为。这些选项以标志和值的列表形式出现。标志前带一个“-”，就像 Unix shell "
"命令的标志一样，如果值超过一个单词，就用引号括起来。"

#: ../../library/tkinter.rst:281 ../../library/tkinter.rst:542
#: ../../library/tkinter.rst:720
msgid "For example::"
msgstr "例如 ::"

#: ../../library/tkinter.rst:289
msgid ""
"Once created, the pathname to the widget becomes a new command.  This new "
"*widget command* is the programmer's handle for getting the new widget to "
"perform some *action*.  In C, you'd express this as someAction(fred, "
"someOptions), in C++, you would express this as "
"fred.someAction(someOptions), and in Tk, you say::"
msgstr ""
"一旦创建成功，部件的路径名就成了一条新的命令。这个新的 *部件命令* 是程序员让新部件执行某些 *action* 的句柄。在 C "
"语言中可表示为someAction(fred, someOptions)，在 C++ "
"中可表示为fred.someAction(someOptions)，而在 Tk 中写作："

#: ../../library/tkinter.rst:297
msgid "Note that the object name, ``.fred``, starts with a dot."
msgstr "请注意，对象名 ``.fred`` 是以句点开头的。"

#: ../../library/tkinter.rst:299
msgid ""
"As you'd expect, the legal values for *someAction* will depend on the "
"widget's class: ``.fred disable`` works if fred is a button (fred gets "
"greyed out), but does not work if fred is a label (disabling of labels is "
"not supported in Tk)."
msgstr ""
"如您所料，*someAction* 的可用值取决于部件的类别。如果 fred 为按钮，则 `.fred disable` 有效（fred 会变灰），而当"
" fred 为标签时则无效（Tk 不支持标签的禁用）。"

#: ../../library/tkinter.rst:303
msgid ""
"The legal values of *someOptions* is action dependent.  Some actions, like "
"``disable``, require no arguments, others, like a text-entry box's "
"``delete`` command, would need arguments to specify what range of text to "
"delete."
msgstr ""
"*someOptions* 的合法值取决于动作。有些动作不需要参数，比如 ``disable``，其他动作如文本输入框的 ``delete`` "
"命令则需用参数指定要删除的文本范围。"

#: ../../library/tkinter.rst:311
msgid "Mapping Basic Tk into Tkinter"
msgstr "将简单的 Tk 映射到 Tkinter"

#: ../../library/tkinter.rst:313
msgid "Class commands in Tk correspond to class constructors in Tkinter. ::"
msgstr "Tk 中的类命令对应于 Tkinter 中的类构造函数："

#: ../../library/tkinter.rst:317
msgid ""
"The master of an object is implicit in the new name given to it at creation "
"time.  In Tkinter, masters are specified explicitly. ::"
msgstr "父对象是隐含在创建时给定的新名字中的。在 Tkinter 中，父对象是显式指定的："

#: ../../library/tkinter.rst:322
msgid ""
"The configuration options in Tk are given in lists of hyphened tags followed"
" by values.  In Tkinter, options are specified as keyword-arguments in the "
"instance constructor, and keyword-args for configure calls or as instance "
"indices, in dictionary style, for established instances.  See section "
":ref:`tkinter-setting-options` on setting options. ::"
msgstr ""
"Tk 中的配置项是以连字符标签列表的形式给出的，后跟着参数值。在 Tkinter 中，选项指定为实例构造函数中的关键字参数，在配置调用时指定为关键字 "
"args，或在已有实例中指定为实例索引，以字典的形式。参见 :ref:`tkinter-setting-options` 一节的选项设置部分。"

#: ../../library/tkinter.rst:332
msgid ""
"In Tk, to perform an action on a widget, use the widget name as a command, "
"and follow it with an action name, possibly with arguments (options).  In "
"Tkinter, you call methods on the class instance to invoke actions on the "
"widget.  The actions (methods) that a given widget can perform are listed in"
" :file:`tkinter/__init__.py`. ::"
msgstr ""
"在 Tk 中, 要在某个部件上执行动作, 要用部件名作为命令, 并后面附上动作名称, 可能还会带有参数（option）。在 Tkinter "
"中，则调用类实例的方法来执行部件的动作。部件能够执行的动作（方法）列在 :file:`tkinter/__init__.py` 中。"

#: ../../library/tkinter.rst:340
msgid ""
"To give a widget to the packer (geometry manager), you call pack with "
"optional arguments.  In Tkinter, the Pack class holds all this "
"functionality, and the various forms of the pack command are implemented as "
"methods.  All widgets in :mod:`tkinter` are subclassed from the Packer, and "
"so inherit all the packing methods. See the :mod:`tkinter.tix` module "
"documentation for additional information on the Form geometry manager. ::"
msgstr ""
"若要将部件交给打包器（geometry manager），需带上可选参数去调用 pack。在 Tkinter 中，Pack 类拥有全部这些功能，pack"
" 命令的各种形式都以方法的形式实现。 :mod:`tkinter` 中的所有部件都是从 Packer 继承而来的，因此继承了所有打包方法。关于Form "
"geometry manager 的更多信息，请参见 :mod:`tkinter.tix` 模块的文档。"

#: ../../library/tkinter.rst:351
msgid "How Tk and Tkinter are Related"
msgstr "Tk 和 Tkinter 如何关联"

#: ../../library/tkinter.rst:353
msgid "From the top down:"
msgstr "自上而下："

#: ../../library/tkinter.rst:356
msgid "Your App Here (Python)"
msgstr "（Python）应用程序位于这里"

#: ../../library/tkinter.rst:356
msgid "A Python application makes a :mod:`tkinter` call."
msgstr "Python 应用程序进行了 :mod:`tkinter` 调用。"

#: ../../library/tkinter.rst:363
msgid "tkinter (Python Package)"
msgstr "tkinter （Python 包）"

#: ../../library/tkinter.rst:359
msgid ""
"This call (say, for example, creating a button widget), is implemented in "
"the :mod:`tkinter` package, which is written in Python.  This Python "
"function will parse the commands and the arguments and convert them into a "
"form that makes them look as if they had come from a Tk script instead of a "
"Python script."
msgstr ""
"此调用（比如创建一个按钮部件）在 :mod:`tkinter` 包中实现，它是用 Python 编写的。该 Python "
"函数将解析命令和参数，并转换为貌似 Tk 脚本的格式，而不像是 Python 脚本。"

#: ../../library/tkinter.rst:367
msgid "_tkinter (C)"
msgstr "_tkinter（C 语言）"

#: ../../library/tkinter.rst:366
msgid ""
"These commands and their arguments will be passed to a C function in the "
":mod:`_tkinter` - note the underscore - extension module."
msgstr "这些命令及参数将被传给 :mod:`_tkinter` 扩展模块中的 C 函数——注意下划线。"

#: ../../library/tkinter.rst:374
msgid "Tk Widgets (C and Tcl)"
msgstr "Tk 部件（C 和 Tcl）"

#: ../../library/tkinter.rst:370
msgid ""
"This C function is able to make calls into other C modules, including the C "
"functions that make up the Tk library.  Tk is implemented in C and some Tcl."
" The Tcl part of the Tk widgets is used to bind certain default behaviors to"
" widgets, and is executed once at the point where the Python :mod:`tkinter` "
"package is imported. (The user never sees this stage)."
msgstr ""
"该 C 函数能调用其他的 C 模块，包括构成 Tk 库的 C 函数。Tk 是用 C 和一些 Tcl 实现的。Tk 部件的 Tcl "
"部分用于将某些默认行为绑定到部件上，并在导入 Python :mod:`tkinter` 包时执行一次。（该阶段对用户而言永不可见）。"

#: ../../library/tkinter.rst:377
msgid "Tk (C)"
msgstr "Tk（C 语言）"

#: ../../library/tkinter.rst:377
msgid "The Tk part of the Tk Widgets implement the final mapping to ..."
msgstr "Tk 部件的 Tk 语言部分实现了最终的映射"

#: ../../library/tkinter.rst:381
msgid "Xlib (C)"
msgstr "Xlib（C 语言）"

#: ../../library/tkinter.rst:380
msgid "the Xlib library to draw graphics on the screen."
msgstr "Xlib 库在屏幕上绘制图形。"

#: ../../library/tkinter.rst:384
msgid "Handy Reference"
msgstr "快速参考"

#: ../../library/tkinter.rst:390
msgid "Setting Options"
msgstr "可选配置项"

#: ../../library/tkinter.rst:392
msgid ""
"Options control things like the color and border width of a widget. Options "
"can be set in three ways:"
msgstr "配置参数可以控制组件颜色和边框宽度等。可通过三种方式进行设置："

#: ../../library/tkinter.rst:398
msgid "At object creation time, using keyword arguments"
msgstr "在对象创建时，使用关键字参数"

#: ../../library/tkinter.rst:404
msgid ""
"After object creation, treating the option name like a dictionary index"
msgstr "在对象创建后，将参数名用作字典索引"

#: ../../library/tkinter.rst:409
msgid ""
"Use the config() method to update multiple attrs subsequent to object "
"creation"
msgstr "利用 config() 方法修改对象的属性"

#: ../../library/tkinter.rst:411
msgid ""
"For a complete explanation of a given option and its behavior, see the Tk "
"man pages for the widget in question."
msgstr "关于这些参数及其表现的完整解释，请参阅 Tk 手册中有关组件的 man 帮助页。"

#: ../../library/tkinter.rst:414
msgid ""
"Note that the man pages list \"STANDARD OPTIONS\" and \"WIDGET SPECIFIC "
"OPTIONS\" for each widget.  The former is a list of options that are common "
"to many widgets, the latter are the options that are idiosyncratic to that "
"particular widget.  The Standard Options are documented on the "
":manpage:`options(3)` man page."
msgstr ""
"请注意，man 手册页列出了每个部件的“标准选项”和“组件特有选项”。前者是很多组件通用的选项列表，后者是该组件特有的选项。标准选项在  "
":manpage:`options(3)` man 手册中有文档。"

#: ../../library/tkinter.rst:420
msgid ""
"No distinction between standard and widget-specific options is made in this "
"document.  Some options don't apply to some kinds of widgets. Whether a "
"given widget responds to a particular option depends on the class of the "
"widget; buttons have a ``command`` option, labels do not."
msgstr ""
"本文没有区分标准选项和部件特有选项。有些选项不适用于某类组件。组件是否对某选项做出响应，取决于组件的类别；按钮组件有一个 ``command`` "
"选项，而标签组件就没有。"

#: ../../library/tkinter.rst:425
msgid ""
"The options supported by a given widget are listed in that widget's man "
"page, or can be queried at runtime by calling the :meth:`config` method "
"without arguments, or by calling the :meth:`keys` method on that widget.  "
"The return value of these calls is a dictionary whose key is the name of the"
" option as a string (for example, ``'relief'``) and whose values are "
"5-tuples."
msgstr ""
"组件支持的选项在其手册中有列出，也可在运行时调用 :meth:`config` 方法（不带参数）查看，或者通过调用组件的 :meth:`keys` "
"方法进行查询。这些调用的返回值为字典，字典的键是字符串格式的选项名（比如 ``'relief'``），字典的值为五元组。"

#: ../../library/tkinter.rst:431
msgid ""
"Some options, like ``bg`` are synonyms for common options with long names "
"(``bg`` is shorthand for \"background\"). Passing the ``config()`` method "
"the name of a shorthand option will return a 2-tuple, not 5-tuple. The "
"2-tuple passed back will contain the name of the synonym and the \"real\" "
"option (such as ``('bg', 'background')``)."
msgstr ""
"有些选项，比如 ``bg`` 是全名通用选项的同义词（``bg`` 是 “background”的简写）。向 ``config()`` "
"方法传入选项的简称将返回一个二元组，而不是五元组。传回的二元组将包含同义词的全名和“真正的”选项（比如 ``('bg', "
"'background')``）。"

#: ../../library/tkinter.rst:438
msgid "Index"
msgstr "索引"

#: ../../library/tkinter.rst:438
msgid "Meaning"
msgstr "含义"

#: ../../library/tkinter.rst:438
msgid "Example"
msgstr "示例"

#: ../../library/tkinter.rst:440
msgid "0"
msgstr "0"

#: ../../library/tkinter.rst:440
msgid "option name"
msgstr "选项名称"

#: ../../library/tkinter.rst:440 ../../library/tkinter.rst:442
msgid "``'relief'``"
msgstr "``'relief'``"

#: ../../library/tkinter.rst:442
msgid "1"
msgstr "1"

#: ../../library/tkinter.rst:442
msgid "option name for database lookup"
msgstr "数据库查找的选项名称"

#: ../../library/tkinter.rst:444
msgid "2"
msgstr "2"

#: ../../library/tkinter.rst:444
msgid "option class for database lookup"
msgstr "数据库查找的选项类"

#: ../../library/tkinter.rst:444
msgid "``'Relief'``"
msgstr "``'Relief'``"

#: ../../library/tkinter.rst:447
msgid "3"
msgstr "3"

#: ../../library/tkinter.rst:447
msgid "default value"
msgstr "默认值"

#: ../../library/tkinter.rst:447
msgid "``'raised'``"
msgstr "``'raised'``"

#: ../../library/tkinter.rst:449
msgid "4"
msgstr "4"

#: ../../library/tkinter.rst:449
msgid "current value"
msgstr "当前值"

#: ../../library/tkinter.rst:449
msgid "``'groove'``"
msgstr "``'groove'``"

#: ../../library/tkinter.rst:452
msgid "Example::"
msgstr "示例::"

#: ../../library/tkinter.rst:457
msgid ""
"Of course, the dictionary printed will include all the options available and"
" their values.  This is meant only as an example."
msgstr "当然，输出的字典将包含所有可用选项及其值。这里只是举个例子。"

#: ../../library/tkinter.rst:462
msgid "The Packer"
msgstr "包装器"

#: ../../library/tkinter.rst:466
msgid ""
"The packer is one of Tk's geometry-management mechanisms.    Geometry "
"managers are used to specify the relative positioning of widgets within "
"their container - their mutual *master*.  In contrast to the more cumbersome"
" *placer* (which is used less commonly, and we do not cover here), the "
"packer takes qualitative relationship specification - *above*, *to the left "
"of*, *filling*, etc - and works everything out to determine the exact "
"placement coordinates for you."
msgstr ""
"包装器是 Tk 的形状管理机制之一。 形状管理器用于指定部件在容器内的相对位置——彼此的 *宿主* 关系。与更为麻烦的 *定位器* "
"相比（不太常用，这里不做介绍），包装器可接受定性的相对关系—— *上面* 、*左边* 、*填充* 等，并确定精确的放置坐标。"

#: ../../library/tkinter.rst:473
msgid ""
"The size of any *master* widget is determined by the size of the \"slave "
"widgets\" inside.  The packer is used to control where slave widgets appear "
"inside the master into which they are packed.  You can pack widgets into "
"frames, and frames into other frames, in order to achieve the kind of layout"
" you desire. Additionally, the arrangement is dynamically adjusted to "
"accommodate incremental changes to the configuration, once it is packed."
msgstr ""
"*主* 部件的大小都由其内部的 “从属部件” "
"的大小决定。包装器用于控制从属部件在主部件中出现的位置。可以把部件包入框架，再把框架包入其他框架中，搭建出所需的布局。此外，只要完成了包装，组件的布局就会进行动态调整，以适应布局参数的变化。"

#: ../../library/tkinter.rst:480
msgid ""
"Note that widgets do not appear until they have had their geometry specified"
" with a geometry manager.  It's a common early mistake to leave out the "
"geometry specification, and then be surprised when the widget is created but"
" nothing appears.  A widget will appear only after it has had, for example, "
"the packer's :meth:`pack` method applied to it."
msgstr ""
"请注意，只有用形状管理器指定几何形状后，部件才会显示出来。忘记设置形状参数是新手常犯的错误，惊讶于创建完部件却啥都没出现。部件只有在应用了类似于打包器的"
" :meth:`pack` 方法之后才会显示在屏幕上。"

#: ../../library/tkinter.rst:486
msgid ""
"The pack() method can be called with keyword-option/value pairs that control"
" where the widget is to appear within its container, and how it is to behave"
" when the main application window is resized.  Here are some examples::"
msgstr ""
"调用 pack() 方法时可以给出由关键字/参数值组成的键值对，以便控制组件在其容器中出现的位置，以及主程序窗口大小变动时的行为。下面是一些例子："

#: ../../library/tkinter.rst:496
msgid "Packer Options"
msgstr "包装器的参数"

#: ../../library/tkinter.rst:498
msgid ""
"For more extensive information on the packer and the options that it can "
"take, see the man pages and page 183 of John Ousterhout's book."
msgstr "关于包装器及其可接受的参数，更多信息请参阅 man 手册和 John Ousterhout 书中的第 183 页。"

#: ../../library/tkinter.rst:502 ../../library/tkinter.rst:622
msgid "anchor"
msgstr "anchor"

#: ../../library/tkinter.rst:502
msgid ""
"Anchor type.  Denotes where the packer is to place each slave in its parcel."
msgstr "锚点类型。 表示包装器要放置的每个从属组件的位置。"

#: ../../library/tkinter.rst:505
msgid "expand"
msgstr "expand"

#: ../../library/tkinter.rst:505
msgid "Boolean, ``0`` or ``1``."
msgstr "布尔型，``0`` 或 ``1`` 。"

#: ../../library/tkinter.rst:508
msgid "fill"
msgstr "fill"

#: ../../library/tkinter.rst:508
msgid "Legal values: ``'x'``, ``'y'``, ``'both'``, ``'none'``."
msgstr "合法值为：``'x'`` 、``'y'`` 、``'both'`` 、``'none'``。"

#: ../../library/tkinter.rst:511
msgid "ipadx and ipady"
msgstr "ipadx 和 ipady"

#: ../../library/tkinter.rst:511
msgid ""
"A distance - designating internal padding on each side of the slave widget."
msgstr "距离值，指定从属部件每一侧的内边距。"

#: ../../library/tkinter.rst:514
msgid "padx and pady"
msgstr "padx 和 pady"

#: ../../library/tkinter.rst:514
msgid ""
"A distance - designating external padding on each side of the slave widget."
msgstr "距离值，指定从属部件的外边距。"

#: ../../library/tkinter.rst:518
msgid "side"
msgstr "side"

#: ../../library/tkinter.rst:517
msgid "Legal values are: ``'left'``, ``'right'``, ``'top'``, ``'bottom'``."
msgstr "合法值为：``'left'``、 ``'right'`` 、 ``'top'``、 ``'bottom'``。"

#: ../../library/tkinter.rst:521
msgid "Coupling Widget Variables"
msgstr "部件与变量的关联"

#: ../../library/tkinter.rst:523
msgid ""
"The current-value setting of some widgets (like text entry widgets) can be "
"connected directly to application variables by using special options.  These"
" options are ``variable``, ``textvariable``, ``onvalue``, ``offvalue``, and "
"``value``.  This connection works both ways: if the variable changes for any"
" reason, the widget it's connected to will be updated to reflect the new "
"value."
msgstr ""
"通过一些特定参数，某些组件（如文本输入组件）的当前设置可直接与应用程序的变量关联。这些参数包括 ``variable`` 、 "
"``textvariable`` 、 ``onvalue`` 、 ``offvalue``  、 "
"``value``。这种关联是双向的：只要这些变量因任何原因发生变化，其关联的部件就会更新以反映新的参数值。"

#: ../../library/tkinter.rst:529
msgid ""
"Unfortunately, in the current implementation of :mod:`tkinter` it is not "
"possible to hand over an arbitrary Python variable to a widget through a "
"``variable`` or ``textvariable`` option.  The only kinds of variables for "
"which this works are variables that are subclassed from a class called "
"Variable, defined in :mod:`tkinter`."
msgstr ""
"不幸的是，在目前 :mod:`tkinter` 的实现代码中，不可能通过 ``variable`` 或 ``textvariable`` 参数将任意 "
"Python 变量移交给组件。变量只有是 :mod:`tkinter` 中定义的 Variable 类的子类，才能生效。"

#: ../../library/tkinter.rst:535
msgid ""
"There are many useful subclasses of Variable already defined: "
":class:`StringVar`, :class:`IntVar`, :class:`DoubleVar`, and "
":class:`BooleanVar`.  To read the current value of such a variable, call the"
" :meth:`get` method on it, and to change its value you call the :meth:`!set`"
" method.  If you follow this protocol, the widget will always track the "
"value of the variable, with no further intervention on your part."
msgstr ""
"已经定义了很多有用的 Variable 子类： :class:`StringVar` 、 :class:`IntVar` "
"、:class:`DoubleVar` 和 :class:`BooleanVar`。调用 :meth:`get` 方法可以读取这些变量的当前值；调用 "
":meth:`!set` 方法则可改变变量值。只要遵循这种用法，组件就会保持跟踪变量的值，而不需要更多的干预。"

#: ../../library/tkinter.rst:575
msgid "The Window Manager"
msgstr "窗口管理器"

#: ../../library/tkinter.rst:579
msgid ""
"In Tk, there is a utility command, ``wm``, for interacting with the window "
"manager.  Options to the ``wm`` command allow you to control things like "
"titles, placement, icon bitmaps, and the like.  In :mod:`tkinter`, these "
"commands have been implemented as methods on the :class:`Wm` class.  "
"Toplevel widgets are subclassed from the :class:`Wm` class, and so can call "
"the :class:`Wm` methods directly."
msgstr ""
"Tk 有个实用命令 ``wm``，用于与窗口管理器进行交互。``wm`` 命令的参数可用于控制标题、位置、图标之类的东西。在 "
":mod:`tkinter` 中，这些命令已被实现为 :class:`Wm` 类的方法。顶层部件是 :class:`Wm` 类的子类，所以可以直接调用 "
":class:`Wm` 的这些方法。"

#: ../../library/tkinter.rst:586
msgid ""
"To get at the toplevel window that contains a given widget, you can often "
"just refer to the widget's master.  Of course if the widget has been packed "
"inside of a frame, the master won't represent a toplevel window.  To get at "
"the toplevel window that contains an arbitrary widget, you can call the "
":meth:`_root` method. This method begins with an underscore to denote the "
"fact that this function is part of the implementation, and not an interface "
"to Tk functionality."
msgstr ""
"要获得指定部件所在的顶层窗口，通常只要引用该部件的主窗口即可。当然，如果该部件是包装在框架内的，那么主窗口不代表就是顶层窗口。为了获得任意组件所在的顶层窗口，可以调用"
" :meth:`_root` 方法。该方法以下划线开头，表明其为 Python 实现的代码，而非 Tk 提供的某个接口。"

#: ../../library/tkinter.rst:593
msgid "Here are some examples of typical usage::"
msgstr "以下是一些典型用法："

#: ../../library/tkinter.rst:616
msgid "Tk Option Data Types"
msgstr "Tk 参数的数据类型"

#: ../../library/tkinter.rst:621
msgid ""
"Legal values are points of the compass: ``\"n\"``, ``\"ne\"``, ``\"e\"``, "
"``\"se\"``, ``\"s\"``, ``\"sw\"``, ``\"w\"``, ``\"nw\"``, and also "
"``\"center\"``."
msgstr ""
"合法值是罗盘的方位点：``\"n\"`` 、``\"ne\"`` 、``\"e\"`` 、``\"se\"`` 、``\"s\"`` "
"、``\"sw\"`` 、``\"w\"`` 、``\"nw\"``  和 ``\"center\"`` "

#: ../../library/tkinter.rst:628
msgid "bitmap"
msgstr "位图"

#: ../../library/tkinter.rst:625
msgid ""
"There are eight built-in, named bitmaps: ``'error'``, ``'gray25'``, "
"``'gray50'``, ``'hourglass'``, ``'info'``, ``'questhead'``, ``'question'``, "
"``'warning'``.  To specify an X bitmap filename, give the full path to the "
"file, preceded with an ``@``, as in ``\"@/usr/contrib/bitmap/gumby.bit\"``."
msgstr ""
"内置已命名的位图有八个：``'error'``、 ``'gray25'`` 、``'gray50'`` 、``'hourglass'``、 "
"``'info'`` 、``'questhead'`` 、``'question'`` 、``'warning'`` "
"。若要指定位图的文件名，请给出完整路径，前面加一个 ``@``，比如 ``\"@/usr/contrib/bitmap/gumby.bit\"``。"

#: ../../library/tkinter.rst:631
msgid "boolean"
msgstr "布尔值"

#: ../../library/tkinter.rst:631
msgid "You can pass integers 0 or 1 or the strings ``\"yes\"`` or ``\"no\"``."
msgstr "可以传入整数 0 或 1，或是字符串 ``\"yes\"`` 或 ``\"no\"``。"

#: ../../library/tkinter.rst:638
msgid "callback"
msgstr "callback -- 回调"

#: ../../library/tkinter.rst:634
msgid "This is any Python function that takes no arguments.  For example::"
msgstr "指任何无需调用参数的 Python 函数。 例如："

#: ../../library/tkinter.rst:644
msgid "color"
msgstr "color"

#: ../../library/tkinter.rst:641
msgid ""
"Colors can be given as the names of X colors in the rgb.txt file, or as "
"strings representing RGB values in 4 bit: ``\"#RGB\"``, 8 bit: "
"``\"#RRGGBB\"``, 12 bit\" ``\"#RRRGGGBBB\"``, or 16 bit "
"``\"#RRRRGGGGBBBB\"`` ranges, where R,G,B here represent any legal hex "
"digit.  See page 160 of Ousterhout's book for details."
msgstr ""
"可在 rgb.txt 文件中以颜色名的形式给出，或是 RGB 字符串的形式，4 位 ：``\"#RGB\"`` ，8 位 "
"：``\"#RRGGBB\"``，12 位：``\"#RRRGGGBBB\"``，16 位：``\"#RRRRGGGGBBBB\"``，其中R、G、B "
"为合法的十六进制数值。 详见 Ousterhout 书中的第 160 页。"

#: ../../library/tkinter.rst:650
msgid "cursor"
msgstr "cursor"

#: ../../library/tkinter.rst:647
msgid ""
"The standard X cursor names from :file:`cursorfont.h` can be used, without "
"the ``XC_`` prefix.  For example to get a hand cursor (:const:`XC_hand2`), "
"use the string ``\"hand2\"``.  You can also specify a bitmap and mask file "
"of your own. See page 179 of Ousterhout's book."
msgstr ""
"可采用 :file:`cursorfont.h` 中的标准光标名称，去掉 ``XC_`` 前缀。 "
"比如要获取一个手形光标（:const:`XC_hand2`），可以用字符串 ``\"hand2\"``。也可以指定自己的位图和掩码文件作为光标。参见 "
"Ousterhout 书中的第 179 页。"

#: ../../library/tkinter.rst:657
msgid "distance"
msgstr "distance"

#: ../../library/tkinter.rst:653
msgid ""
"Screen distances can be specified in either pixels or absolute distances. "
"Pixels are given as numbers and absolute distances as strings, with the "
"trailing character denoting units: ``c`` for centimetres, ``i`` for inches, "
"``m`` for millimetres, ``p`` for printer's points.  For example, 3.5 inches "
"is expressed as ``\"3.5i\"``."
msgstr ""
"屏幕距离可以用像素或绝对距离来指定。像素是数字，绝对距离是字符串，后面的字符表示单位：``c`` 是厘米，``i`` 是英寸，``m`` "
"是毫米，``p`` 则表示打印机的点数。例如，3.5 英寸可表示为 ``\"3.5i\"``。"

#: ../../library/tkinter.rst:662
msgid "font"
msgstr "font"

#: ../../library/tkinter.rst:660
msgid ""
"Tk uses a list font name format, such as ``{courier 10 bold}``. Font sizes "
"with positive numbers are measured in points; sizes with negative numbers "
"are measured in pixels."
msgstr "Tk 采用一串名称的格式表示字体，例如 ``{courier 10 bold}``。正数的字体大小以点为单位，负数的大小以像素为单位。"

#: ../../library/tkinter.rst:667
msgid "geometry"
msgstr "geometry"

#: ../../library/tkinter.rst:665
msgid ""
"This is a string of the form ``widthxheight``, where width and height are "
"measured in pixels for most widgets (in characters for widgets displaying "
"text). For example: ``fred[\"geometry\"] = \"200x100\"``."
msgstr ""
"这是一个 ``widthxheight`` "
"形式的字符串，其中宽度和高度对于大多数部件来说是以像素为单位的（对于显示文本的部件来说是以字符为单位的）。例如：fred[\"geometry\"] ="
" \"200x100\"。"

#: ../../library/tkinter.rst:671
msgid "justify"
msgstr "justify"

#: ../../library/tkinter.rst:670
msgid ""
"Legal values are the strings: ``\"left\"``, ``\"center\"``, ``\"right\"``, "
"and ``\"fill\"``."
msgstr "合法的值为字符串： ``\"left\"`` 、 ``\"center\"`` 、 ``\"right\"`` 和 ``\"fill\"`` 。"

#: ../../library/tkinter.rst:676
msgid "region"
msgstr "region"

#: ../../library/tkinter.rst:674
msgid ""
"This is a string with four space-delimited elements, each of which is a "
"legal distance (see above).  For example: ``\"2 3 4 5\"`` and ``\"3i 2i 4.5i"
" 2i\"`` and ``\"3c 2c 4c 10.43c\"``  are all legal regions."
msgstr ""
"这是包含四个元素的字符串，以空格分隔，每个元素是表示一个合法的距离值（见上文）。例如：``\"2 3 4 5\"`` 、 ``\"3i 2i 4.5i "
"2i\"`` 和 ``\"3c 2c 4c 10.43c\"`` 都是合法的区域值。"

#: ../../library/tkinter.rst:680
msgid "relief"
msgstr "relief"

#: ../../library/tkinter.rst:679
msgid ""
"Determines what the border style of a widget will be.  Legal values are: "
"``\"raised\"``, ``\"sunken\"``, ``\"flat\"``, ``\"groove\"``, and "
"``\"ridge\"``."
msgstr ""
"决定了组件的边框样式。 合法值包括：``\"raised\"``、 ``\"sunken\"`` 、``\"flat\"`` "
"、``\"groove\"``  和 ``\"ridge\"`` 。"

#: ../../library/tkinter.rst:684
msgid "scrollcommand"
msgstr "scrollcommand"

#: ../../library/tkinter.rst:683
msgid ""
"This is almost always the :meth:`!set` method of some scrollbar widget, but "
"can be any widget method that takes a single argument."
msgstr "这几乎就是带滚动条部件的 :meth:`!set` 方法，但也可是任一只有一个参数的部件方法。"

#: ../../library/tkinter.rst:688
msgid "wrap:"
msgstr ""

#: ../../library/tkinter.rst:687
msgid "Must be one of: ``\"none\"``, ``\"char\"``, or ``\"word\"``."
msgstr "只能是以下值之一：``\"none\"`` 、 ``\"char\"`` 、 ``\"word\"``。"

#: ../../library/tkinter.rst:691
msgid "Bindings and Events"
msgstr "绑定和事件"

#: ../../library/tkinter.rst:697
msgid ""
"The bind method from the widget command allows you to watch for certain "
"events and to have a callback function trigger when that event type occurs."
"  The form of the bind method is::"
msgstr "部件命令中的 bind 方法可觉察某些事件，并在事件发生时触发一个回调函数。bind  方法的形式是："

#: ../../library/tkinter.rst:703
msgid "where:"
msgstr "这里："

#: ../../library/tkinter.rst:707
msgid "sequence"
msgstr "sequence -- 序列"

#: ../../library/tkinter.rst:706
msgid ""
"is a string that denotes the target kind of event.  (See the bind man page "
"and page 201 of John Ousterhout's book for details)."
msgstr "是一个表示事件的目标种类的字符串。（详情请看 bind 的手册页和 John Outsterhout 的书的第 201 页。）"

#: ../../library/tkinter.rst:712
msgid "func"
msgstr "func"

#: ../../library/tkinter.rst:710
msgid ""
"is a Python function, taking one argument, to be invoked when the event "
"occurs. An Event instance will be passed as the argument. (Functions "
"deployed this way are commonly known as *callbacks*.)"
msgstr ""
"是带有一个参数的 Python 函数，发生事件时将会调用。传入的参数为一个 Event 实例。（以这种方式部署的函数通常称为 *回调函数*。） "

#: ../../library/tkinter.rst:718
msgid "add"
msgstr "add"

#: ../../library/tkinter.rst:715
msgid ""
"is optional, either ``''`` or ``'+'``.  Passing an empty string denotes that"
" this binding is to replace any other bindings that this event is associated"
" with.  Passing a ``'+'`` means that this function is to be added to the "
"list of functions bound to this event type."
msgstr ""
"可选项， ``''`` 或 ``'+'`` 。传入空字符串表示本次绑定将替换与此事件关联的其他所有绑定。传递 ``'+'`` "
"则意味着加入此事件类型已绑定函数的列表中。 "

#: ../../library/tkinter.rst:727
msgid ""
"Notice how the widget field of the event is being accessed in the "
"``turn_red()`` callback.  This field contains the widget that caught the X "
"event.  The following table lists the other event fields you can access, and"
" how they are denoted in Tk, which can be useful when referring to the Tk "
"man pages."
msgstr ""
"请注意，在 ``turn_red()`` 回调函数中如何访问事件的 widget 字段。该字段包含了捕获 X "
"事件的控件。下表列出了事件可供访问的其他字段，及其在 Tk 中的表示方式，这在查看 Tk 手册时很有用处。 "

#: ../../library/tkinter.rst:733 ../../library/tkinter.rst:733
msgid "Tk"
msgstr "Tk"

#: ../../library/tkinter.rst:733 ../../library/tkinter.rst:733
msgid "Tkinter Event Field"
msgstr "Tkinter 事件字段"

#: ../../library/tkinter.rst:735
msgid "%f"
msgstr "%f"

#: ../../library/tkinter.rst:735
msgid "focus"
msgstr "焦点"

#: ../../library/tkinter.rst:735
msgid "%A"
msgstr "%A"

#: ../../library/tkinter.rst:735
msgid "char"
msgstr "字符"

#: ../../library/tkinter.rst:737
msgid "%h"
msgstr "%h"

#: ../../library/tkinter.rst:737
msgid "height"
msgstr "height"

#: ../../library/tkinter.rst:737
msgid "%E"
msgstr "%E"

#: ../../library/tkinter.rst:737
msgid "send_event"
msgstr "send_event"

#: ../../library/tkinter.rst:739
msgid "%k"
msgstr "%k"

#: ../../library/tkinter.rst:739
msgid "keycode"
msgstr "keycode"

#: ../../library/tkinter.rst:739
msgid "%K"
msgstr "%K"

#: ../../library/tkinter.rst:739
msgid "keysym"
msgstr "keysym"

#: ../../library/tkinter.rst:741
msgid "%s"
msgstr "%s"

#: ../../library/tkinter.rst:741
msgid "state"
msgstr "状况"

#: ../../library/tkinter.rst:741
msgid "%N"
msgstr "%N"

#: ../../library/tkinter.rst:741
msgid "keysym_num"
msgstr "keysym_num"

#: ../../library/tkinter.rst:743
msgid "%t"
msgstr "%t"

#: ../../library/tkinter.rst:743
msgid "time"
msgstr "time"

#: ../../library/tkinter.rst:743
msgid "%T"
msgstr "%T"

#: ../../library/tkinter.rst:743
msgid "type"
msgstr "type"

#: ../../library/tkinter.rst:745
msgid "%w"
msgstr "%w"

#: ../../library/tkinter.rst:745
msgid "width"
msgstr "宽度"

#: ../../library/tkinter.rst:745
msgid "%W"
msgstr "%W"

#: ../../library/tkinter.rst:745
msgid "widget"
msgstr "widget"

#: ../../library/tkinter.rst:747
msgid "%x"
msgstr "%x"

#: ../../library/tkinter.rst:747
msgid "x"
msgstr "x"

#: ../../library/tkinter.rst:747
msgid "%X"
msgstr "%X"

#: ../../library/tkinter.rst:747
msgid "x_root"
msgstr "x_root"

#: ../../library/tkinter.rst:749
msgid "%y"
msgstr "%y"

#: ../../library/tkinter.rst:749
msgid "y"
msgstr "y"

#: ../../library/tkinter.rst:749
msgid "%Y"
msgstr "%Y"

#: ../../library/tkinter.rst:749
msgid "y_root"
msgstr "y_root"

#: ../../library/tkinter.rst:754
msgid "The index Parameter"
msgstr "index 参数"

#: ../../library/tkinter.rst:756
msgid ""
"A number of widgets require \"index\" parameters to be passed.  These are "
"used to point at a specific place in a Text widget, or to particular "
"characters in an Entry widget, or to particular menu items in a Menu widget."
msgstr ""
"很多控件都需要传入 index 参数。该参数用于指明 Text 控件中的位置，或指明 Entry 控件中的字符，或指明 Menu 控件中的菜单项。 "

#: ../../library/tkinter.rst:763
msgid "Entry widget indexes (index, view index, etc.)"
msgstr "Entry 控件的索引（index、view index 等）"

#: ../../library/tkinter.rst:761
msgid ""
"Entry widgets have options that refer to character positions in the text "
"being displayed.  You can use these :mod:`tkinter` functions to access these"
" special points in text widgets:"
msgstr ""
"Entry 控件带有 index 属性，指向显示文本中的字符位置。这些 :mod:`tkinter`  函数可用于访问文本控件中的这些特定位置： "

#: ../../library/tkinter.rst:767
msgid "Text widget indexes"
msgstr "Text 控件的索引"

#: ../../library/tkinter.rst:766
msgid ""
"The index notation for Text widgets is very rich and is best described in "
"the Tk man pages."
msgstr "Text 控件的索引语法非常复杂，最好还是在 Tk 手册中查看。 "

#: ../../library/tkinter.rst:792
msgid "Menu indexes (menu.invoke(), menu.entryconfig(), etc.)"
msgstr "Menu 索引（menu.invoke()、menu.entryconfig() 等）"

#: ../../library/tkinter.rst:770
msgid ""
"Some options and methods for menus manipulate specific menu entries. Anytime"
" a menu index is needed for an option or a parameter, you may pass in:"
msgstr "菜单的某些属性和方法可以操纵特定的菜单项。只要属性或参数需要用到菜单索引，就可用以下方式传入： "

#: ../../library/tkinter.rst:773
msgid ""
"an integer which refers to the numeric position of the entry in the widget, "
"counted from the top, starting with 0;"
msgstr "一个整数，指的是控件项的数字位置，从顶部开始计数，从 0 开始； "

#: ../../library/tkinter.rst:776
msgid ""
"the string ``\"active\"``, which refers to the menu position that is "
"currently under the cursor;"
msgstr "字符串 ``\"active\"``，指的是当前光标所在的菜单；"

#: ../../library/tkinter.rst:779
msgid "the string ``\"last\"`` which refers to the last menu item;"
msgstr "字符串 ``\"last\"``，指的是上一个菜单项；"

#: ../../library/tkinter.rst:781
msgid ""
"An integer preceded by ``@``, as in ``@6``, where the integer is interpreted"
" as a y pixel coordinate in the menu's coordinate system;"
msgstr "带有 ``@`` 前缀的整数，比如 ``@6``，这里的整数解释为菜单坐标系中的 y 像素坐标。"

#: ../../library/tkinter.rst:784
msgid ""
"the string ``\"none\"``, which indicates no menu entry at all, most often "
"used with menu.activate() to deactivate all entries, and finally,"
msgstr "表示没有任何菜单条目的字符串 ``\"none\"`` 经常与 menu.activate() 一同被用来停用所有条目，以及"

#: ../../library/tkinter.rst:787
msgid ""
"a text string that is pattern matched against the label of the menu entry, "
"as scanned from the top of the menu to the bottom.  Note that this index "
"type is considered after all the others, which means that matches for menu "
"items labelled ``last``, ``active``, or ``none`` may be interpreted as the "
"above literals, instead."
msgstr ""
"与菜单项的文本标签进行模式匹配的文本串，从菜单顶部扫描到底部。请注意，此索引类型是在其他所有索引类型之后才会考虑的，这意味着文本标签为 "
"``last``、``active`` 或 ``none``  的菜单项匹配成功后，可能会视为这些单词文字本身。 "

#: ../../library/tkinter.rst:795
msgid "Images"
msgstr "图片"

#: ../../library/tkinter.rst:797
msgid ""
"Images of different formats can be created through the corresponding "
"subclass of :class:`tkinter.Image`:"
msgstr "通过 :class:`tkinter.Image` 的各种子类可以创建相应格式的图片： "

#: ../../library/tkinter.rst:800
msgid ":class:`BitmapImage` for images in XBM format."
msgstr ":class:`BitmapImage` 对应 XBM 格式的图片。"

#: ../../library/tkinter.rst:802
msgid ""
":class:`PhotoImage` for images in PGM, PPM, GIF and PNG formats. The latter "
"is supported starting with Tk 8.6."
msgstr ":class:`PhotoImage` 对应 PGM、PPM、GIF 和 PNG 格式的图片。后者自 Tk 8.6 开始支持。"

#: ../../library/tkinter.rst:805
msgid ""
"Either type of image is created through either the ``file`` or the ``data`` "
"option (other options are available as well)."
msgstr "这两种图片可通过 ``file`` 或 ``data`` 属性创建的（也可能由其他属性创建）。"

#: ../../library/tkinter.rst:808
msgid ""
"The image object can then be used wherever an ``image`` option is supported "
"by some widget (e.g. labels, buttons, menus). In these cases, Tk will not "
"keep a reference to the image. When the last Python reference to the image "
"object is deleted, the image data is deleted as well, and Tk will display an"
" empty box wherever the image was used."
msgstr ""
"然后可在某些支持 ``image`` 属性的控件中（如标签、按钮、菜单）使用图片对象。这时，Tk 不会保留对图片对象的引用。当图片对象的最后一个 "
"Python 引用被删除时，图片数据也会删除，并且 Tk 会在用到图片对象的地方显示一个空白框。 "

#: ../../library/tkinter.rst:816
msgid ""
"The `Pillow <http://python-pillow.org/>`_ package adds support for formats "
"such as BMP, JPEG, TIFF, and WebP, among others."
msgstr ""
"`Pillow <http://python-pillow.org/>`_ 包增加了对 BMP、JPEG、TIFF 和 WebP 等格式的支持。 "

#: ../../library/tkinter.rst:822
msgid "File Handlers"
msgstr "文件句柄"

#: ../../library/tkinter.rst:824
msgid ""
"Tk allows you to register and unregister a callback function which will be "
"called from the Tk mainloop when I/O is possible on a file descriptor. Only "
"one handler may be registered per file descriptor. Example code::"
msgstr ""
"Tk 允许为文件操作注册和注销一个回调函数，当对文件描述符进行 I/O 时，Tk "
"的主循环会调用该回调函数。每个文件描述符只能注册一个处理程序。示例代码如下："

#: ../../library/tkinter.rst:835
msgid "This feature is not available on Windows."
msgstr "在 Windows 系统中不可用。"

#: ../../library/tkinter.rst:837
msgid ""
"Since you don't know how many bytes are available for reading, you may not "
"want to use the :class:`~io.BufferedIOBase` or :class:`~io.TextIOBase` "
":meth:`~io.BufferedIOBase.read` or :meth:`~io.IOBase.readline` methods, "
"since these will insist on reading a predefined number of bytes. For "
"sockets, the :meth:`~socket.socket.recv` or :meth:`~socket.socket.recvfrom` "
"methods will work fine; for other files, use raw reads or "
"``os.read(file.fileno(), maxbytecount)``."
msgstr ""
"由于不知道可读取多少字节，你可能不希望使用 :class:`~io.BufferedIOBase` 或 :class:`~io.TextIOBase` "
"的 :meth:`~io.BufferedIOBase.read` 或 :meth:`~io.IOBase.readline` "
"方法，因为这些方法必须读取预定数量的字节。 对于套接字，可使用 :meth:`~socket.socket.recv` 或 "
":meth:`~socket.socket.recvfrom` 方法；对于其他文件，可使用原始读取方法或 "
"``os.read(file.fileno(), maxbytecount)``。"

#: ../../library/tkinter.rst:848
msgid ""
"Registers the file handler callback function *func*. The *file* argument may"
" either be an object with a :meth:`~io.IOBase.fileno` method (such as a file"
" or socket object), or an integer file descriptor. The *mask* argument is an"
" ORed combination of any of the three constants below. The callback is "
"called as follows::"
msgstr ""
"注册文件处理程序的回调函数 *func*。 *file* 参数可以是具备 :meth:`~io.IOBase.fileno` "
"方法的对象（例如文件或套接字对象），也可以是整数文件描述符。 *mask* 参数是下述三个常量的逻辑“或”组合。回调函数将用以下格式调用： "

#: ../../library/tkinter.rst:859
msgid "Unregisters a file handler."
msgstr "注销文件处理函数。"

#: ../../library/tkinter.rst:866
msgid "Constants used in the *mask* arguments."
msgstr " *mask* 参数用到的常量。"
