# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Shengjing Zhu <zsj950618@gmail.com>, 2019
# ww song <sww4718168@gmail.com>, 2019
# eric R <trencyclopedia@gmail.com>, 2019
# Menghua Xiao <arieshout@gmail.com>, 2019
# dannyvi <dannyvis@icloud.com>, 2019
# Alpha Du <alphanow@gmail.com>, 2019
# walkinrain <walkinrain2008@outlook.com>, 2019
# stone jing <stonejing1817@gmail.com>, 2019
# ppcfish <ppcfish@gmail.com>, 2019
# Freesand Leo <yuqinju@163.com>, 2021
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-16 16:41+0000\n"
"PO-Revision-Date: 2019-09-01 03:24+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2021\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/"
"teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:2
msgid ":mod:`xml.etree.ElementTree` --- The ElementTree XML API"
msgstr ":mod:`xml.etree.ElementTree` ---  ElementTree XML API"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:9
msgid "**Source code:** :source:`Lib/xml/etree/ElementTree.py`"
msgstr "**源代码：** :source:`Lib/xml/etree/ElementTree.py`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:13
msgid ""
"The :mod:`xml.etree.ElementTree` module implements a simple and efficient "
"API for parsing and creating XML data."
msgstr ""
":mod:`xml.etree.ElementTree` 模块实现了一个简单高效的API，用于解析和创建XML数"
"据。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:16
msgid ""
"This module will use a fast implementation whenever available. The :mod:`xml."
"etree.cElementTree` module is deprecated."
msgstr ""
"只要有可能，这个模块将使用快速实现。:mod:`xml.etree.cElementTree` 模块已弃"
"用。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:23
msgid ""
"The :mod:`xml.etree.ElementTree` module is not secure against maliciously "
"constructed data.  If you need to parse untrusted or unauthenticated data "
"see :ref:`xml-vulnerabilities`."
msgstr ""
":mod:`xml.etree.ElementTree` 模块对于恶意构建的数据是不安全的。如果需要解析不"
"可信或未经身份验证的数据，请参见 :ref:`xml-vulnerabilities` 。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:28
msgid "Tutorial"
msgstr "教程"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:30
msgid ""
"This is a short tutorial for using :mod:`xml.etree.ElementTree` (``ET`` in "
"short).  The goal is to demonstrate some of the building blocks and basic "
"concepts of the module."
msgstr ""
"这是一个使用 :mod:`xml.etree.ElementTree` （简称 ``ET`` ）的简短教程。目标是"
"演示模块的一些构建块和基本概念。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:35
msgid "XML tree and elements"
msgstr "XML树和元素"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:37
msgid ""
"XML is an inherently hierarchical data format, and the most natural way to "
"represent it is with a tree.  ``ET`` has two classes for this purpose - :"
"class:`ElementTree` represents the whole XML document as a tree, and :class:"
"`Element` represents a single node in this tree.  Interactions with the "
"whole document (reading and writing to/from files) are usually done on the :"
"class:`ElementTree` level.  Interactions with a single XML element and its "
"sub-elements are done on the :class:`Element` level."
msgstr ""
"XML是一种固有的分层数据格式，最自然的表示方法是使用树。为此， ``ET`` 有两个"
"类 :class:`ElementTree` 将整个XML文档表示为一个树， :class:`Element` 表示该树"
"中的单个节点。与整个文档的交互（读写文件）通常在 :class:`ElementTree` 级别完"
"成。与单个XML元素及其子元素的交互是在 :class:`Element` 级别完成的。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:48
msgid "Parsing XML"
msgstr "解析XML"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:50
msgid ""
"We'll be using the following XML document as the sample data for this "
"section:"
msgstr "我们将使用以下XML文档作为本节的示例数据："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:78
msgid "We can import this data by reading from a file::"
msgstr "我们可以通过从文件中读取来导入此数据："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:84
msgid "Or directly from a string::"
msgstr "或直接从字符串中："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:88
msgid ""
":func:`fromstring` parses XML from a string directly into an :class:"
"`Element`, which is the root element of the parsed tree.  Other parsing "
"functions may create an :class:`ElementTree`.  Check the documentation to be "
"sure."
msgstr ""
":func:`fromstring` 将XML从字符串直接解析为 :class:`Element` ，该元素是已解析"
"树的根元素。其他解析函数可能会创建一个 :class:`ElementTree` 。确切的信息请检"
"查文档。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:92
msgid ""
"As an :class:`Element`, ``root`` has a tag and a dictionary of attributes::"
msgstr "作为一个 :class:`Element` ， ``root`` 有一个标记和一个属性字典::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:99
msgid "It also has children nodes over which we can iterate::"
msgstr "它还有我们可以迭代的子节点："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:108
msgid "Children are nested, and we can access specific child nodes by index::"
msgstr "子级是可以嵌套的，我们可以通过索引访问特定的子级节点："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:116
msgid ""
"Not all elements of the XML input will end up as elements of the parsed "
"tree. Currently, this module skips over any XML comments, processing "
"instructions, and document type declarations in the input. Nevertheless, "
"trees built using this module's API rather than parsing from XML text can "
"have comments and processing instructions in them; they will be included "
"when generating XML output. A document type declaration may be accessed by "
"passing a custom :class:`TreeBuilder` instance to the :class:`XMLParser` "
"constructor."
msgstr ""
"并非XML输入的所有元素都将作为解析树的元素结束。目前，此模块跳过输入中的任何"
"XML注释、处理指令和文档类型声明。然而，使用这个模块的API而不是从XML文本解析构"
"建的树可以包含注释和处理指令，生成XML输出时同样包含这些注释和处理指令。可以通"
"过将自定义 :class:`TreeBuilder` 实例传递给 :class:`XMLParser` 构造函数来访问"
"文档类型声明。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:130
msgid "Pull API for non-blocking parsing"
msgstr "Pull API进行非阻塞解析"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:132
msgid ""
"Most parsing functions provided by this module require the whole document to "
"be read at once before returning any result.  It is possible to use an :"
"class:`XMLParser` and feed data into it incrementally, but it is a push API "
"that calls methods on a callback target, which is too low-level and "
"inconvenient for most needs.  Sometimes what the user really wants is to be "
"able to parse XML incrementally, without blocking operations, while enjoying "
"the convenience of fully constructed :class:`Element` objects."
msgstr ""
"此模块所提供了大多数解析函数都要求在返回任何结果之前一次性读取整个文档。 可以"
"使用 :class:`XMLParser` 并以渐进方式添加数据，但这是在回调目标上调用方法的推"
"送式 API。 有时用户真正想要的是能够以渐进方式解析 XML 而无需阻塞操作，同时享"
"受完整的已构造 :class:`Element` 对象。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:140
msgid ""
"The most powerful tool for doing this is :class:`XMLPullParser`.  It does "
"not require a blocking read to obtain the XML data, and is instead fed with "
"data incrementally with :meth:`XMLPullParser.feed` calls.  To get the parsed "
"XML elements, call :meth:`XMLPullParser.read_events`.  Here is an example::"
msgstr ""
"针对此需求的最强大工具是 :class:`XMLPullParser`。 它不要求通过阻塞式读取来获"
"得 XML 数据，而是通过执行 :meth:`XMLPullParser.feed` 调用来渐进式地添加数"
"据。  要获得已解析的 XML 元素，应调用 :meth:`XMLPullParser.read_events`。 下"
"面是一个示例::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:156
msgid ""
"The obvious use case is applications that operate in a non-blocking fashion "
"where the XML data is being received from a socket or read incrementally "
"from some storage device.  In such cases, blocking reads are unacceptable."
msgstr ""
"常见的用例是针对以非阻塞方式进行的应用程序，其中 XML 是从套接字接收或从某些存"
"储设备渐进式读取的。 在这些用例中，阻塞式读取是不可接受的。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:160
msgid ""
"Because it's so flexible, :class:`XMLPullParser` can be inconvenient to use "
"for simpler use-cases.  If you don't mind your application blocking on "
"reading XML data but would still like to have incremental parsing "
"capabilities, take a look at :func:`iterparse`.  It can be useful when "
"you're reading a large XML document and don't want to hold it wholly in "
"memory."
msgstr ""
"因为其非常灵活，:class:`XMLPullParser` 在更简单的用例中使用起来可能并不方"
"便。 如果你不介意你的应用程序在读取 XML 数据时造成阻塞但仍希望具有增量解析能"
"力，可以考虑 :func:`iterparse`。 它在你读取大型 XML 文档并且不希望将它完全放"
"去内存时会很适用。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:167
msgid "Finding interesting elements"
msgstr "寻找有趣的元素"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:169
msgid ""
":class:`Element` has some useful methods that help iterate recursively over "
"all the sub-tree below it (its children, their children, and so on).  For "
"example, :meth:`Element.iter`::"
msgstr ""
":class:`Element` 有一些很有效的方法，可帮助递归遍历其下的所有子树（包括子级，"
"子级的子级，等等）。例如 :meth:`Element.iter`::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:182
msgid ""
":meth:`Element.findall` finds only elements with a tag which are direct "
"children of the current element.  :meth:`Element.find` finds the *first* "
"child with a particular tag, and :attr:`Element.text` accesses the element's "
"text content.  :meth:`Element.get` accesses the element's attributes::"
msgstr ""
":meth:`Element.findall` 仅查找当前元素的直接子元素中带有指定标签的元素。 :"
"meth:`Element.find` 找带有特定标签的 *第一个* 子级，然后可以用 :attr:"
"`Element.text` 访问元素的文本内容。 :attr:`Element.text` 访问元素的属性::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:196
msgid ""
"More sophisticated specification of which elements to look for is possible "
"by using :ref:`XPath <elementtree-xpath>`."
msgstr ""
"通过使用 :ref:`XPath <elementtree-xpath>` ，可以更精确地指定要查找的元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:200
msgid "Modifying an XML File"
msgstr "修改XML文件"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:202
msgid ""
":class:`ElementTree` provides a simple way to build XML documents and write "
"them to files. The :meth:`ElementTree.write` method serves this purpose."
msgstr ""
":class:`ElementTree` 提供了一种构建XML文档并将其写入文件的简单方法。  :meth:"
"`ElementTree.write` 方法可达到此目的。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:205
msgid ""
"Once created, an :class:`Element` object may be manipulated by directly "
"changing its fields (such as :attr:`Element.text`), adding and modifying "
"attributes (:meth:`Element.set` method), as well as adding new children (for "
"example with :meth:`Element.append`)."
msgstr ""
"创建后可以直接操作 :class:`Element` 对象。例如：使用 :attr:`Element.text` 修"
"改文本字段，使用 :meth:`Element.set` 方法添加和修改属性，以及使用  :meth:"
"`Element.append` 添加新的子元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:210
msgid ""
"Let's say we want to add one to each country's rank, and add an ``updated`` "
"attribute to the rank element::"
msgstr ""
"假设我们要在每个国家/地区的中添加一个排名，并在rank元素中添加一个 "
"``updated`` 属性："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:220
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:258
msgid "Our XML now looks like this:"
msgstr "生成的XML现在看起来像这样："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:248
msgid ""
"We can remove elements using :meth:`Element.remove`.  Let's say we want to "
"remove all countries with a rank higher than 50::"
msgstr ""
"可以使用 :meth:`Element.remove` 删除元素。假设我们要删除排名高于50的所有国家/"
"地区::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:280
msgid "Building XML documents"
msgstr "构建XML文档"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:282
msgid ""
"The :func:`SubElement` function also provides a convenient way to create new "
"sub-elements for a given element::"
msgstr ""
":func:`SubElement` 函数还提供了一种便捷方法来为给定元素创建新的子元素::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:293
msgid "Parsing XML with Namespaces"
msgstr "使用命名空间解析XML"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:295
msgid ""
"If the XML input has `namespaces <https://en.wikipedia.org/wiki/"
"XML_namespace>`__, tags and attributes with prefixes in the form ``prefix:"
"sometag`` get expanded to ``{uri}sometag`` where the *prefix* is replaced by "
"the full *URI*. Also, if there is a `default namespace <https://www.w3.org/"
"TR/xml-names/#defaulting>`__, that full URI gets prepended to all of the non-"
"prefixed tags."
msgstr ""
"如果 XML 输入带有 `命名空间 <https://en.wikipedia.org/wiki/"
"XML_namespace>`__，则具有前缀的 ``prefix:sometag`` 形式的标记和属性将被扩展"
"为 ``{uri}sometag``，其中 *prefix* 会被完整 *URI* 所替换。 并且，如果存在 `默"
"认命名空间 <https://www.w3.org/TR/xml-names/#defaulting>`__，则完整 URI 会被"
"添加到所有未加前缀的标记之前。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:303
msgid ""
"Here is an XML example that incorporates two namespaces, one with the prefix "
"\"fictional\" and the other serving as the default namespace:"
msgstr ""
"下面的 XML 示例包含两个命名空间，一个具有前缀 \"fictional\" 而另一个则作为默"
"认命名空间:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:324
msgid ""
"One way to search and explore this XML example is to manually add the URI to "
"every tag or attribute in the xpath of a :meth:`~Element.find` or :meth:"
"`~Element.findall`::"
msgstr ""
"搜索和探查这个 XML 示例的一种方式是手动为 :meth:`~Element.find` 或 :meth:"
"`~Element.findall` 的 xpath 中的每个标记或属性添加 URI::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:335
msgid ""
"A better way to search the namespaced XML example is to create a dictionary "
"with your own prefixes and use those in the search functions::"
msgstr ""
"一种更好的方式是搜索带命名空间的 XML 示例创建一个字典来存放你自己的前缀并在搜"
"索函数中使用它们::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:347
msgid "These two approaches both output::"
msgstr "这两种方式都会输出::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:359
msgid "Additional resources"
msgstr "其他资源"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:361
msgid ""
"See http://effbot.org/zone/element-index.htm for tutorials and links to "
"other docs."
msgstr ""
"请访问 http://effbot.org/zone/element-index.htm 获取教程和其他文档的链接。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:368
msgid "XPath support"
msgstr "XPath支持"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:370
msgid ""
"This module provides limited support for `XPath expressions <https://www.w3."
"org/TR/xpath>`_ for locating elements in a tree.  The goal is to support a "
"small subset of the abbreviated syntax; a full XPath engine is outside the "
"scope of the module."
msgstr ""
"此模块提供了对 `XPath 表达式 <https://www.w3.org/TR/xpath>`_ 的有限支持用于在"
"树中定位元素。 其目标是支持一个简化语法的较小子集；完整的 XPath 引擎超出了此"
"模块的适用范围。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:376
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:652
msgid "Example"
msgstr "示例"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:378
msgid ""
"Here's an example that demonstrates some of the XPath capabilities of the "
"module.  We'll be using the ``countrydata`` XML document from the :ref:"
"`Parsing XML <elementtree-parsing-xml>` section::"
msgstr ""
"下面是一个演示此模块的部分 XPath 功能的例子。 我们将使用来自 :ref:`解析 XML "
"<elementtree-parsing-xml>` 小节的 ``countrydata`` XML 文档::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:403
msgid "Supported XPath syntax"
msgstr "支持的XPath语法"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:408
msgid "Syntax"
msgstr "语法"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:408
msgid "Meaning"
msgstr "含义"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:410
msgid "``tag``"
msgstr "``tag``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:410
msgid ""
"Selects all child elements with the given tag. For example, ``spam`` selects "
"all child elements named ``spam``, and ``spam/egg`` selects all "
"grandchildren named ``egg`` in all children named ``spam``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:416
msgid "``*``"
msgstr "``*``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:416
msgid ""
"Selects all child elements.  For example, ``*/egg`` selects all "
"grandchildren named ``egg``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:419
msgid "``.``"
msgstr "``.``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:419
msgid ""
"Selects the current node.  This is mostly useful at the beginning of the "
"path, to indicate that it's a relative path."
msgstr "选择当前节点。这在路径的开头非常有用，用于指示它是相对路径。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:423
msgid "``//``"
msgstr "``//``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:423
msgid ""
"Selects all subelements, on all levels beneath the current  element.  For "
"example, ``.//egg`` selects all ``egg`` elements in the entire tree."
msgstr ""
"选择所有子元素 在当前元素的所有下级中选择所有下级元素。 例如，``.//egg`` 是在"
"整个树中选择所有 ``egg`` 元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:427
msgid "``..``"
msgstr "``..``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:427
msgid ""
"Selects the parent element.  Returns ``None`` if the path attempts to reach "
"the ancestors of the start element (the element ``find`` was called on)."
msgstr ""
"选择父元素。 如果路径试图前往起始元素的上级（元素的 ``find`` 被调用）则返回 "
"``None``。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:431
msgid "``[@attrib]``"
msgstr "``[@attrib]``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:431
msgid "Selects all elements that have the given attribute."
msgstr "选择具有给定属性的所有元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:433
msgid "``[@attrib='value']``"
msgstr "``[@attrib='value']``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:433
msgid ""
"Selects all elements for which the given attribute has the given value.  The "
"value cannot contain quotes."
msgstr "选择给定属性具有给定值的所有元素。该值不能包含引号。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:437
msgid "``[tag]``"
msgstr "``[tag]``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:437
msgid ""
"Selects all elements that have a child named ``tag``.  Only immediate "
"children are supported."
msgstr "选择所有包含 ``tag`` 子元素的元素。只支持直系子元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:440
msgid "``[.='text']``"
msgstr "``[.='text']``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:440
msgid ""
"Selects all elements whose complete text content, including descendants, "
"equals the given ``text``."
msgstr "选择完整文本内容等于 ``text`` 的所有元素（包括后代）。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:445
msgid "``[tag='text']``"
msgstr "``[tag='text']``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:445
msgid ""
"Selects all elements that have a child named ``tag`` whose complete text "
"content, including descendants, equals the given ``text``."
msgstr ""
"选择所有包含名为 ``tag`` 的子元素的元素，这些子元素（包括后代）的完整文本内容"
"等于给定的 ``text`` 。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:449
msgid "``[position]``"
msgstr "``[position]``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:449
msgid ""
"Selects all elements that are located at the given position.  The position "
"can be either an integer (1 is the first position), the expression "
"``last()`` (for the last position), or a position relative to the last "
"position (e.g. ``last()-1``)."
msgstr ""
"选择位于给定位置的所有元素。 位置可以是一个整数 (1 表示首位)，表达式 "
"``last()`` (表示末位)，或者相对于末位的位置 (例如 ``last()-1``)。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:456
msgid ""
"Predicates (expressions within square brackets) must be preceded by a tag "
"name, an asterisk, or another predicate.  ``position`` predicates must be "
"preceded by a tag name."
msgstr ""
"谓词（方括号内的表达式）之前必须带有标签名称，星号或其他谓词。``position`` 谓"
"词前必须有标签名称。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:461
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:704
msgid "Reference"
msgstr "参考"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:466
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:709
msgid "Functions"
msgstr "函数"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:471
msgid ""
"Comment element factory.  This factory function creates a special element "
"that will be serialized as an XML comment by the standard serializer.  The "
"comment string can be either a bytestring or a Unicode string.  *text* is a "
"string containing the comment string.  Returns an element instance "
"representing a comment."
msgstr ""
"注释元素工厂函数。 这个工厂函数可创建一个特殊元素，它将被标准序列化器当作 "
"XML 注释来进行序列化。 注释字串可以是字节串或是 Unicode 字符串。 *text* 是包"
"含注释字串的字符串。 返回一个表示注释的元素实例。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:477
msgid ""
"Note that :class:`XMLParser` skips over comments in the input instead of "
"creating comment objects for them. An :class:`ElementTree` will only contain "
"comment nodes if they have been inserted into to the tree using one of the :"
"class:`Element` methods."
msgstr ""
"请注意 :class:`XMLParser` 会跳过输入中的注释而不会为其创建注释对象。 :class:"
"`ElementTree` 将只在当使用某个 :class:`Element` 方法向树插入了注释节点时才会"
"包含注释节点。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:484
msgid ""
"Writes an element tree or element structure to sys.stdout.  This function "
"should be used for debugging only."
msgstr "将一个元素树或元素结构体写入到 sys.stdout。 此函数应当只被用于调试。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:487
msgid ""
"The exact output format is implementation dependent.  In this version, it's "
"written as an ordinary XML file."
msgstr ""
"实际输出格式是依赖于具体实现的。 在这个版本中，它将以普通 XML 文件的格式写"
"入。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:490
msgid "*elem* is an element tree or an individual element."
msgstr "*elem* 是一个元素树或单独元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:495
msgid ""
"Parses an XML section from a string constant.  Same as :func:`XML`.  *text* "
"is a string containing XML data.  *parser* is an optional parser instance. "
"If not given, the standard :class:`XMLParser` parser is used. Returns an :"
"class:`Element` instance."
msgstr ""
"根据一个字符串常量解析 XML 的节。 与 :func:`XML` 类似。 *text* 是包含 XML 数"
"据的字符串。 *parser* 是可选的解析器实例。 如果未给出，则会使用标准 :class:"
"`XMLParser`。 返回一个 :class:`Element` 实例。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:503
msgid ""
"Parses an XML document from a sequence of string fragments.  *sequence* is a "
"list or other sequence containing XML data fragments.  *parser* is an "
"optional parser instance.  If not given, the standard :class:`XMLParser` "
"parser is used.  Returns an :class:`Element` instance."
msgstr ""
"根据一个字符串片段序列解析 XML 文档。 *sequence* 是包含 XML 数据片段的列表或"
"其他序列对象。 *parser* 是可选的解析器实例。 如果未给出，则会使用标准的 :"
"class:`XMLParser` 解析器。 返回一个 :class:`Element` 实例。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:513
msgid ""
"Check if an object appears to be a valid element object.  *element* is an "
"element instance.  Return ``True`` if this is an element object."
msgstr ""
"检测一个对象是否为有效的元素对象。 *element* 是一个元素实例。 如果对象是一个"
"元素对象则返回 ``True``。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:519
msgid ""
"Parses an XML section into an element tree incrementally, and reports what's "
"going on to the user.  *source* is a filename or :term:`file object` "
"containing XML data.  *events* is a sequence of events to report back.  The "
"supported events are the strings ``\"start\"``, ``\"end\"``, ``\"start-"
"ns\"`` and ``\"end-ns\"`` (the \"ns\" events are used to get detailed "
"namespace information).  If *events* is omitted, only ``\"end\"`` events are "
"reported. *parser* is an optional parser instance.  If not given, the "
"standard :class:`XMLParser` parser is used.  *parser* must be a subclass of :"
"class:`XMLParser` and can only use the default :class:`TreeBuilder` as a "
"target.  Returns an :term:`iterator` providing ``(event, elem)`` pairs."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:530
msgid ""
"Note that while :func:`iterparse` builds the tree incrementally, it issues "
"blocking reads on *source* (or the file it names).  As such, it's unsuitable "
"for applications where blocking reads can't be made.  For fully non-blocking "
"parsing, see :class:`XMLPullParser`."
msgstr ""
"请注意虽然 :func:`iterparse` 是以增量方式构建树，但它会对 *source* (或其所指"
"定的文件) 发出阻塞式读取。 因此，它不适用于不可执行阻塞式读取的应用。 对于完"
"全非阻塞式的解析，请参看 :class:`XMLPullParser`。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:537
msgid ""
":func:`iterparse` only guarantees that it has seen the \">\" character of a "
"starting tag when it emits a \"start\" event, so the attributes are defined, "
"but the contents of the text and tail attributes are undefined at that "
"point.  The same applies to the element children; they may or may not be "
"present."
msgstr ""
":func:`iterparse` 只会确保当发出 \"start\" 事件时看到了开始标记的 \">\" 字"
"符，因而在这个点上属性已被定义，但文本容和末尾属性还未被定义。 这同样适用于元"
"素的下级；它们可能存在也可能不存在。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:543
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1266
msgid "If you need a fully populated element, look for \"end\" events instead."
msgstr "如果你需要已完全填充的元素，请改为查找 \"end\" 事件。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:545
msgid "The *parser* argument."
msgstr "*parser* 参数。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:550
msgid ""
"Parses an XML section into an element tree.  *source* is a filename or file "
"object containing XML data.  *parser* is an optional parser instance.  If "
"not given, the standard :class:`XMLParser` parser is used.  Returns an :"
"class:`ElementTree` instance."
msgstr ""
"将一个 XML 的节解析为元素树。 *source* 是包含 XML 数据的文件名或文件对象。 "
"*parser* 是可选的解析器实例。 如果未给出，则会使用标准的 :class:`XMLParser` "
"解析器。 返回一个 :class:`ElementTree` 实例。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:558
msgid ""
"PI element factory.  This factory function creates a special element that "
"will be serialized as an XML processing instruction.  *target* is a string "
"containing the PI target.  *text* is a string containing the PI contents, if "
"given.  Returns an element instance, representing a processing instruction."
msgstr ""
"PI 元素工厂函数。 这个工厂函数可创建一个特殊元素，它将被当作 XML 处理指令来进"
"行序列化。 *target* 是包含 PI 目标的字符串。 *text* 如果给出则是包含 PI 内容"
"的字符串。 返回一个表示处理指令的元素实例。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:563
msgid ""
"Note that :class:`XMLParser` skips over processing instructions in the input "
"instead of creating comment objects for them. An :class:`ElementTree` will "
"only contain processing instruction nodes if they have been inserted into to "
"the tree using one of the :class:`Element` methods."
msgstr ""
"请注意 :class:`XMLParser` 会跳过输入中的处理指令而不会为其创建注释对象。 :"
"class:`ElementTree` 将只在当使用某个 :class:`Element` 方法向树插入了处理指令"
"节点时才会包含处理指令节点。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:571
msgid ""
"Registers a namespace prefix.  The registry is global, and any existing "
"mapping for either the given prefix or the namespace URI will be removed. "
"*prefix* is a namespace prefix.  *uri* is a namespace uri.  Tags and "
"attributes in this namespace will be serialized with the given prefix, if at "
"all possible."
msgstr ""
"注册一个命名空间前缀。 这个注册表是全局的，并且任何对应给定前缀或命名空间 "
"URI 的现有映射都会被移除。 *prefix* 是命名空间前缀。 *uri* 是命名空间 URI。 "
"如果可能的话，这个命名空间中的标记和属性将附带给定的前缀来进行序列化。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:582
msgid ""
"Subelement factory.  This function creates an element instance, and appends "
"it to an existing element."
msgstr "子元素工厂函数。 这个函数会创建一个元素实例，并将其添加到现有的元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:585
msgid ""
"The element name, attribute names, and attribute values can be either "
"bytestrings or Unicode strings.  *parent* is the parent element.  *tag* is "
"the subelement name.  *attrib* is an optional dictionary, containing element "
"attributes.  *extra* contains additional attributes, given as keyword "
"arguments.  Returns an element instance."
msgstr ""
"元素名、属性名和属性值可以是字节串或 Unicode 字符串。 *parent* 是父元素。 "
"*tag* 是子元素名。 *attrib* 是一个可选的字典，其中包含元素属性。  *extra* 包"
"含额外的属性，以关键字参数形式给出。 返回一个元素实例。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:595
msgid ""
"Generates a string representation of an XML element, including all "
"subelements.  *element* is an :class:`Element` instance.  *encoding* [1]_ is "
"the output encoding (default is US-ASCII).  Use ``encoding=\"unicode\"`` to "
"generate a Unicode string (otherwise, a bytestring is generated).  *method* "
"is either ``\"xml\"``, ``\"html\"`` or ``\"text\"`` (default is "
"``\"xml\"``). *short_empty_elements* has the same meaning as in :meth:"
"`ElementTree.write`. Returns an (optionally) encoded string containing the "
"XML data."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:603
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:622
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1038
msgid "The *short_empty_elements* parameter."
msgstr "*short_empty_elements* 形参。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:610
msgid ""
"Generates a string representation of an XML element, including all "
"subelements.  *element* is an :class:`Element` instance.  *encoding* [1]_ is "
"the output encoding (default is US-ASCII).  Use ``encoding=\"unicode\"`` to "
"generate a Unicode string (otherwise, a bytestring is generated).  *method* "
"is either ``\"xml\"``, ``\"html\"`` or ``\"text\"`` (default is "
"``\"xml\"``). *short_empty_elements* has the same meaning as in :meth:"
"`ElementTree.write`. Returns a list of (optionally) encoded strings "
"containing the XML data. It does not guarantee any specific sequence, except "
"that ``b\"\".join(tostringlist(element)) == tostring(element)``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:628
msgid ""
"Parses an XML section from a string constant.  This function can be used to "
"embed \"XML literals\" in Python code.  *text* is a string containing XML "
"data.  *parser* is an optional parser instance.  If not given, the standard :"
"class:`XMLParser` parser is used.  Returns an :class:`Element` instance."
msgstr ""
"根据一个字符串常量解析 XML 的节。 此函数可被用于在 Python 代码中嵌入“XML 字面"
"值”。 *text* 是包含 XML 数据的字符串。 *parser* 是可选的解析器实例。 如果未给"
"出，则会使用标准的 :class:`XMLParser` 解析器。 返回一个 :class:`Element` 实"
"例。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:636
msgid ""
"Parses an XML section from a string constant, and also returns a dictionary "
"which maps from element id:s to elements.  *text* is a string containing XML "
"data.  *parser* is an optional parser instance.  If not given, the standard :"
"class:`XMLParser` parser is used.  Returns a tuple containing an :class:"
"`Element` instance and a dictionary."
msgstr ""
"根据一个字符串常量解析 XML 的节，并且还将返回一个将元素的 id:s 映射到元素的字"
"典。 *text* 是包含 XML 数据的字符串。 *parser* 是可选的解析器实例。 如果未给"
"出，则会使用标准的 :class:`XMLParser` 解析器。 返回一个包含 :class:`Element` "
"实例和字典的元组。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:646
msgid "XInclude support"
msgstr "XInclude 支持"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:648
msgid ""
"This module provides limited support for `XInclude directives <https://www."
"w3.org/TR/xinclude/>`_, via the :mod:`xml.etree.ElementInclude` helper "
"module.  This module can be used to insert subtrees and text strings into "
"element trees, based on information in the tree."
msgstr ""
"此模块通过 :mod:`xml.etree.ElementInclude` 辅助模块提供了对 `XInclude 指令 "
"<https://www.w3.org/TR/xinclude/>`_ 的有限支持，这个模块可被用来根据元素树的"
"信息在其中插入子树和文本字符串。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:654
msgid ""
"Here's an example that demonstrates use of the XInclude module. To include "
"an XML document in the current document, use the ``{http://www.w3.org/2001/"
"XInclude}include`` element and set the **parse** attribute to ``\"xml\"``, "
"and use the **href** attribute to specify the document to include."
msgstr ""
"以下是一个演示 XInclude 模块用法的例子。 要在当前文本中包括一个 XML 文档，请"
"使用 ``{http://www.w3.org/2001/XInclude}include`` 元素并将 **parse** 属性设"
"为 ``\"xml\"``，并使用 **href** 属性来指定要包括的文档。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:663
msgid ""
"By default, the **href** attribute is treated as a file name. You can use "
"custom loaders to override this behaviour. Also note that the standard "
"helper does not support XPointer syntax."
msgstr ""
"默认情况下，**href** 属性会被当作文件名来处理。 你可以使用自定义加载器来重载"
"此行为。 还要注意标准辅助器不支持 XPointer 语法。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:665
msgid ""
"To process this file, load it as usual, and pass the root element to the :"
"mod:`xml.etree.ElementTree` module:"
msgstr ""
"要处理这个文件，请正常加载它，并将根元素传给 :mod:`xml.etree.ElementTree` 模"
"块:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:676
msgid ""
"The ElementInclude module replaces the ``{http://www.w3.org/2001/XInclude}"
"include`` element with the root element from the **source.xml** document. "
"The result might look something like this:"
msgstr ""
"ElementInclude 模块使用来自 **source.xml** 文档的根元素替代 ``{http://www.w3."
"org/2001/XInclude}include`` 元素。 结果看起来大概是这样:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:684
msgid ""
"If the **parse** attribute is omitted, it defaults to \"xml\". The href "
"attribute is required."
msgstr "如果省略了 **parse** 属性，它会取默认的 \"xml\"。 要求有 href 属性。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:686
msgid ""
"To include a text document, use the ``{http://www.w3.org/2001/XInclude}"
"include`` element, and set the **parse** attribute to \"text\":"
msgstr ""
"要包括文本文档，请使用 ``{http://www.w3.org/2001/XInclude}include`` 元素，并"
"将 **parse** 属性设为 \"text\":"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:695
msgid "The result might look something like:"
msgstr "结果可能如下所示："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:713
msgid ""
"Default loader. This default loader reads an included resource from disk.  "
"*href* is a URL. *parse* is for parse mode either \"xml\" or \"text\".  "
"*encoding* is an optional text encoding.  If not given, encoding is "
"``utf-8``.  Returns the expanded resource.  If the parse mode is "
"``\"xml\"``, this is an ElementTree instance.  If the parse mode is "
"\"text\", this is a Unicode string.  If the loader fails, it can return None "
"or raise an exception."
msgstr ""
"默认的加载器。 这个默认的加载器会从磁盘读取所包括的资源。 *href* 是一个 "
"URL。 *parse* 是 \"xml\" 或 \"text\" 表示解析模式。 *encoding* 是可选的文本编"
"码格式。 如果未给出，则编码格式为 ``utf-8``。 返回已扩展的资源。 如果解析模式"
"为 ``\"xml\"``，则它是一个 ElementTree 实例。 如果解析模式为 \"text\"，则它是"
"一个 Unicode 字符串。 如果加载器失败，它可以返回 None 或者引发异常。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:723
msgid ""
"This function expands XInclude directives.  *elem* is the root element.  "
"*loader* is an optional resource loader.  If omitted, it defaults to :func:"
"`default_loader`. If given, it should be a callable that implements the same "
"interface as :func:`default_loader`.  Returns the expanded resource.  If the "
"parse mode is ``\"xml\"``, this is an ElementTree instance.  If the parse "
"mode is \"text\", this is a Unicode string.  If the loader fails, it can "
"return None or raise an exception."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:735
msgid "Element Objects"
msgstr "元素对象"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:739
msgid ""
"Element class.  This class defines the Element interface, and provides a "
"reference implementation of this interface."
msgstr "元素类。 这个类定义了 Element 接口，并提供了这个接口的引用实现。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:742
msgid ""
"The element name, attribute names, and attribute values can be either "
"bytestrings or Unicode strings.  *tag* is the element name.  *attrib* is an "
"optional dictionary, containing element attributes.  *extra* contains "
"additional attributes, given as keyword arguments."
msgstr ""
"元素名、属性名和属性值可以是字节串或 Unicode 字符串。 *tag* 是元素名。 "
"*attrib* 是一个可选的字典，其中包含元素属性。 *extra* 包含额外的属性，以关键"
"字参数形式给出。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:750
msgid ""
"A string identifying what kind of data this element represents (the element "
"type, in other words)."
msgstr "一个标识此元素意味着何种数据的字符串(换句话说，元素类型)。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:757
msgid ""
"These attributes can be used to hold additional data associated with the "
"element.  Their values are usually strings but may be any application-"
"specific object.  If the element is created from an XML file, the *text* "
"attribute holds either the text between the element's start tag and its "
"first child or end tag, or ``None``, and the *tail* attribute holds either "
"the text between the element's end tag and the next tag, or ``None``.  For "
"the XML data"
msgstr ""
"这些属性可被用于存放与元素相关联的额外数据。 它们的值通常为字符串但也可以是任"
"何应用专属的对象。 如果元素是基于 XML 文件创建的，*text* 属性会存放元素的开始"
"标记及其第一个子元素或结束标记之间的文本，或者为 ``None``，而 *tail* 属性会存"
"放元素的结束标记及下一个标记之间的文本，或者为 ``None``。 对于 XML 数据"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:769
msgid ""
"the *a* element has ``None`` for both *text* and *tail* attributes, the *b* "
"element has *text* ``\"1\"`` and *tail* ``\"4\"``, the *c* element has "
"*text* ``\"2\"`` and *tail* ``None``, and the *d* element has *text* "
"``None`` and *tail* ``\"3\"``."
msgstr ""
"*a* 元素的 *text* 和 *tail* 属性均为 ``None``，*b* 元素的 *text* 为 "
"``\"1\"`` 而 *tail* 为 ``\"4\"``，*c* 元素的 *text* 为 ``\"2\"`` 而 *tail* "
"为 ``None``，*d* 元素的 *text* 为 ``None`` 而 *tail* 为 ``\"3\"``。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:774
msgid ""
"To collect the inner text of an element, see :meth:`itertext`, for example "
"``\"\".join(element.itertext())``."
msgstr ""
"要获取一个元素的内部文本，请参阅 :meth:`itertext`，例如 ``\"\".join(element."
"itertext())``。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:777
msgid "Applications may store arbitrary objects in these attributes."
msgstr "应用程序可以将任意对象存入这些属性。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:782
msgid ""
"A dictionary containing the element's attributes.  Note that while the "
"*attrib* value is always a real mutable Python dictionary, an ElementTree "
"implementation may choose to use another internal representation, and create "
"the dictionary only if someone asks for it.  To take advantage of such "
"implementations, use the dictionary methods below whenever possible."
msgstr ""
"一个包含元素属性的字典。 请注意虽然 *attrib* 值总是一个真正可变的 Python 字"
"典，但 ElementTree 实现可以选择其他内部表示形式，并只在有需要时才创建字典。 "
"为了发挥这种实现的优势，请在任何可能情况下使用下列字典方法。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:788
msgid "The following dictionary-like methods work on the element attributes."
msgstr "以下字典类方法可作用于元素属性。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:793
msgid ""
"Resets an element.  This function removes all subelements, clears all "
"attributes, and sets the text and tail attributes to ``None``."
msgstr ""
"重设一个元素。 此方法会移除所有子元素，清空所有属性，并将 text 和 tail 属性设"
"为 ``None``。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:799
msgid "Gets the element attribute named *key*."
msgstr "获取名为 *key* 的元素属性。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:801
msgid ""
"Returns the attribute value, or *default* if the attribute was not found."
msgstr "返回属性的值，或者如果属性未找到则返回 *default*。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:806
msgid ""
"Returns the element attributes as a sequence of (name, value) pairs.  The "
"attributes are returned in an arbitrary order."
msgstr "将元素属性以 (name, value) 对序列的形式返回。 所返回属性的顺序任意。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:812
msgid ""
"Returns the elements attribute names as a list.  The names are returned in "
"an arbitrary order."
msgstr "将元素属性名称以列表的形式返回。 所返回名称的顺序任意。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:818
msgid "Set the attribute *key* on the element to *value*."
msgstr "将元素的 *key* 属性设为 *value*。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:820
msgid "The following methods work on the element's children (subelements)."
msgstr "以下方法作用于元素的下级（子元素）。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:825
msgid ""
"Adds the element *subelement* to the end of this element's internal list of "
"subelements.  Raises :exc:`TypeError` if *subelement* is not an :class:"
"`Element`."
msgstr ""
"将元素 *subelement* 添加到此元素的子元素内部列表。 如果 *subelement* 不是一"
"个 :class:`Element` 则会引发 :exc:`TypeError`。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:832
msgid ""
"Appends *subelements* from a sequence object with zero or more elements. "
"Raises :exc:`TypeError` if a subelement is not an :class:`Element`."
msgstr ""
"使用具有零个或多个元素的序列对象添加 *subelements*。 如果某个子元素不是 :"
"class:`Element` 则会引发 :exc:`TypeError`。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:840
msgid ""
"Finds the first subelement matching *match*.  *match* may be a tag name or "
"a :ref:`path <elementtree-xpath>`.  Returns an element instance or "
"``None``.  *namespaces* is an optional mapping from namespace prefix to full "
"name."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:848
msgid ""
"Finds all matching subelements, by tag name or :ref:`path <elementtree-"
"xpath>`.  Returns a list containing all matching elements in document "
"order.  *namespaces* is an optional mapping from namespace prefix to full "
"name."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:856
msgid ""
"Finds text for the first subelement matching *match*.  *match* may be a tag "
"name or a :ref:`path <elementtree-xpath>`.  Returns the text content of the "
"first matching element, or *default* if no element was found. Note that if "
"the matching element has no text content an empty string is returned. "
"*namespaces* is an optional mapping from namespace prefix to full name."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:866
msgid "Use ``list(elem)`` or iteration."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:872
msgid "Use method :meth:`Element.iter` instead."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:878
msgid ""
"Inserts *subelement* at the given position in this element.  Raises :exc:"
"`TypeError` if *subelement* is not an :class:`Element`."
msgstr ""
"将 *subelement* 插入到此元素的给定位置中。 如果 *subelement* 不是一个 :class:"
"`Element` 则会引发 :exc:`TypeError`。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:884
msgid ""
"Creates a tree :term:`iterator` with the current element as the root. The "
"iterator iterates over this element and all elements below it, in document "
"(depth first) order.  If *tag* is not ``None`` or ``'*'``, only elements "
"whose tag equals *tag* are returned from the iterator.  If the tree "
"structure is modified during iteration, the result is undefined."
msgstr ""
"创建一个以当前元素为根元素的树的 :term:`iterator`。 该迭代器将以文档（深度优"
"先）顺序迭代此元素及其所有下级元素。 如果 *tag* 不为 ``None`` 或 ``'*'``，则"
"迭代器只返回标记为 *tag* 的元素。 如果树结构在迭代期间被修改，则结果是未定义"
"的。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:895
msgid ""
"Finds all matching subelements, by tag name or :ref:`path <elementtree-"
"xpath>`.  Returns an iterable yielding all matching elements in document "
"order. *namespaces* is an optional mapping from namespace prefix to full "
"name."
msgstr ""
"根据标记名称或者 :ref:`路径 <elementtree-xpath>` 查找所有匹配的子元素。 返回"
"一个按文档顺序产生所有匹配元素的可迭代对象。 *namespaces* 是可选的从命名空间"
"前缀到完整名称的映射。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:906
msgid ""
"Creates a text iterator.  The iterator loops over this element and all "
"subelements, in document order, and returns all inner text."
msgstr ""
"创建一个文本迭代器。 该迭代器将按文档顺序遍历此元素及其所有子元素，并返回所有"
"内部文本。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:914
msgid ""
"Creates a new element object of the same type as this element.  Do not call "
"this method, use the :func:`SubElement` factory function instead."
msgstr ""
"创建一个与此元素类型相同的新元素对象。 请不要调用此方法，而应改用 :func:"
"`SubElement` 工厂函数。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:920
msgid ""
"Removes *subelement* from the element.  Unlike the find\\* methods this "
"method compares elements based on the instance identity, not on tag value or "
"contents."
msgstr ""
"从元素中移除 *subelement*。 与 find\\* 方法不同的是此方法会基于实例的标识来比"
"较元素，而不是基于标记的值或内容。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:924
msgid ""
":class:`Element` objects also support the following sequence type methods "
"for working with subelements: :meth:`~object.__delitem__`, :meth:`~object."
"__getitem__`, :meth:`~object.__setitem__`, :meth:`~object.__len__`."
msgstr ""
":class:`Element` 对象还支持下列序列类型方法以配合子元素使用: :meth:`~object."
"__delitem__`, :meth:`~object.__getitem__`, :meth:`~object.__setitem__`, :"
"meth:`~object.__len__`。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:929
msgid ""
"Caution: Elements with no subelements will test as ``False``.  This behavior "
"will change in future versions.  Use specific ``len(elem)`` or ``elem is "
"None`` test instead. ::"
msgstr ""
"注意：不带子元素的元素将被检测为 ``False``。 此行为将在未来的版本中发生变"
"化。 请改用 ``len(elem)`` 或 ``elem is None`` 进行检测。 ::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:945
msgid "ElementTree Objects"
msgstr "ElementTree 对象"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:950
msgid ""
"ElementTree wrapper class.  This class represents an entire element "
"hierarchy, and adds some extra support for serialization to and from "
"standard XML."
msgstr ""
"ElementTree 包装器类。 这个类表示一个完整的元素层级结构，并添加了一些对于标"
"准 XML 序列化的额外支持。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:954
msgid ""
"*element* is the root element.  The tree is initialized with the contents of "
"the XML *file* if given."
msgstr ""
"*element* 是根元素。 如果给出 XML *file* 则将使用其内容来初始化树结构。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:960
msgid ""
"Replaces the root element for this tree.  This discards the current contents "
"of the tree, and replaces it with the given element.  Use with care.  "
"*element* is an element instance."
msgstr ""
"替换该树结构的根元素。 这将丢弃该树结构的当前内容，并将其替换为给定的元素。 "
"请小心使用。  *element* 是一个元素实例。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:967
msgid "Same as :meth:`Element.find`, starting at the root of the tree."
msgstr "与 :meth:`Element.find` 类似，从树的根节点开始。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:972
msgid "Same as :meth:`Element.findall`, starting at the root of the tree."
msgstr "与 :meth:`Element.findall` 类似，从树的根节点开始。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:977
msgid "Same as :meth:`Element.findtext`, starting at the root of the tree."
msgstr "与 :meth:`Element.findtext` 类似，从树的根节点开始。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:982
msgid "Use method :meth:`ElementTree.iter` instead."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:988
msgid "Returns the root element for this tree."
msgstr "返回这个树的根元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:993
msgid ""
"Creates and returns a tree iterator for the root element.  The iterator "
"loops over all elements in this tree, in section order.  *tag* is the tag to "
"look for (default is to return all elements)."
msgstr ""
"创建并返回根元素的树结构迭代器。 该迭代器会以节顺序遍历这个树的所有元素。 "
"*tag* 是要查找的标记（默认返回所有元素）。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1000
msgid "Same as :meth:`Element.iterfind`, starting at the root of the tree."
msgstr "与 :meth:`Element.iterfind` 类似，从树的根节点开始。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1007
msgid ""
"Loads an external XML section into this element tree.  *source* is a file "
"name or :term:`file object`.  *parser* is an optional parser instance. If "
"not given, the standard :class:`XMLParser` parser is used.  Returns the "
"section root element."
msgstr ""
"将一个外部 XML 节载入到此元素树。 *source* 是一个文件名或 :term:`file "
"object`。 *parser* 是可选的解析器实例。 如果未给出，则会使用标准的 :class:"
"`XMLParser` 解析器。 返回该节的根元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1017
msgid ""
"Writes the element tree to a file, as XML.  *file* is a file name, or a :"
"term:`file object` opened for writing.  *encoding* [1]_ is the output "
"encoding (default is US-ASCII). *xml_declaration* controls if an XML "
"declaration should be added to the file.  Use ``False`` for never, ``True`` "
"for always, ``None`` for only if not US-ASCII or UTF-8 or Unicode (default "
"is ``None``). *default_namespace* sets the default XML namespace (for "
"\"xmlns\"). *method* is either ``\"xml\"``, ``\"html\"`` or ``\"text\"`` "
"(default is ``\"xml\"``). The keyword-only *short_empty_elements* parameter "
"controls the formatting of elements that contain no content.  If ``True`` "
"(the default), they are emitted as a single self-closed tag, otherwise they "
"are emitted as a pair of start/end tags."
msgstr ""
"将元素树以 XML 格式写入到文件。 *file* 为文件名，或是以写入模式打开的 :term:"
"`file object`。 *encoding* [1]_ 为输出编码格式 (默认为 US-ASCII)。 "
"*xml_declaration* 控制是否要将 XML 声明添加到文件中。 使用 ``False`` 表示从不"
"添加，``True`` 表示总是添加，``None`` 表示仅在非 US-ASCII 或 UTF-8 或 "
"Unicode 时添加 (默认为 ``None``)。 *default_namespace* 设置默认 XML 命名空间 "
"(用于 \"xmlns\")。 *method* 为 ``\"xml\"``, ``\"html\"`` 或 ``\"text\"`` (默"
"认为 ``\"xml\"``)。 仅限关键字形参 *short_empty_elements* 控制不包含内容的元"
"素的格式。 如为 ``True`` (默认值)，它们会被输出为单个自结束标记，否则它们会被"
"输出为一对开始/结束标记。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1031
msgid ""
"The output is either a string (:class:`str`) or binary (:class:`bytes`). "
"This is controlled by the *encoding* argument.  If *encoding* is "
"``\"unicode\"``, the output is a string; otherwise, it's binary.  Note that "
"this may conflict with the type of *file* if it's an open :term:`file "
"object`; make sure you do not try to write a string to a binary stream and "
"vice versa."
msgstr ""
"输出是一个字符串 (:class:`str`) 或字节串 (:class:`bytes`)。 由*encoding* 参数"
"来控制。 如果 *encoding* 为 ``\"unicode\"``，则输出是一个字符串；否则为字节"
"串；请注意这可能与 *file* 的类型相冲突，如果它是一个打开的 :term:`file "
"object` 的话；请确保你不会试图写入字符串到二进制流或者反向操作。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1042
msgid "This is the XML file that is going to be manipulated::"
msgstr "这是将要被操作的 XML 文件::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1054
msgid ""
"Example of changing the attribute \"target\" of every link in first "
"paragraph::"
msgstr "修改第一段中的每个链接的 \"target\"  属性的示例::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1073
msgid "QName Objects"
msgstr "QName 对象"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1078
msgid ""
"QName wrapper.  This can be used to wrap a QName attribute value, in order "
"to get proper namespace handling on output.  *text_or_uri* is a string "
"containing the QName value, in the form {uri}local, or, if the tag argument "
"is given, the URI part of a QName.  If *tag* is given, the first argument is "
"interpreted as a URI, and this argument is interpreted as a local name. :"
"class:`QName` instances are opaque."
msgstr ""
"QName 包装器。 这可被用来包装 QName 属性值，以便在输出中获得适当的命名空间处"
"理。 *text_or_uri* 是一个包含 QName 值的字符串，其形式为 {uri}local，或者如果"
"给出了 tag 参数，则为 QName 的 URI 部分。 如果给出了 *tag*，则第一个参数会被"
"解读为 URI，而这个参数会被解读为本地名称。 :class:`QName` 实例是不透明的。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1090
msgid "TreeBuilder Objects"
msgstr "TreeBuilder 对象"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1095
msgid ""
"Generic element structure builder.  This builder converts a sequence of "
"start, data, and end method calls to a well-formed element structure.  You "
"can use this class to build an element structure using a custom XML parser, "
"or a parser for some other XML-like format.  *element_factory*, when given, "
"must be a callable accepting two positional arguments: a tag and a dict of "
"attributes.  It is expected to return a new element instance."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1104
msgid ""
"Flushes the builder buffers, and returns the toplevel document element.  "
"Returns an :class:`Element` instance."
msgstr ""
"刷新构建器缓存，并返回最高层级的文档元素。 返回一个 :class:`Element` 实例。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1110
msgid ""
"Adds text to the current element.  *data* is a string.  This should be "
"either a bytestring, or a Unicode string."
msgstr ""
"将文本添加到当前元素。 *data* 为要添加的文本。 这应当是一个字节串或 Unicode "
"字符串。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1116
msgid ""
"Closes the current element.  *tag* is the element name.  Returns the closed "
"element."
msgstr "结束当前元素。 *tag* 是元素名称。 返回已结束的元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1122
msgid ""
"Opens a new element.  *tag* is the element name.  *attrs* is a dictionary "
"containing element attributes.  Returns the opened element."
msgstr ""
"打开一个新元素。 *tag* 是元素名称。 *attrs* 是包含元素属性的字典。 返回打开的"
"元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1126
msgid ""
"In addition, a custom :class:`TreeBuilder` object can provide the following "
"method:"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1131
msgid ""
"Handles a doctype declaration.  *name* is the doctype name.  *pubid* is the "
"public identifier.  *system* is the system identifier.  This method does not "
"exist on the default :class:`TreeBuilder` class."
msgstr ""
"处理一条 doctype 声明。 *name* 为 doctype 名称。 *pubid* 为公有标识。 "
"*system* 为系统标识。 此方法不存在于默认的 :class:`TreeBuilder` 类中。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1141
msgid "XMLParser Objects"
msgstr "XMLParser对象"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1146
msgid ""
"This class is the low-level building block of the module.  It uses :mod:`xml."
"parsers.expat` for efficient, event-based parsing of XML.  It can be fed XML "
"data incrementally with the :meth:`feed` method, and parsing events are "
"translated to a push API - by invoking callbacks on the *target* object.  If "
"*target* is omitted, the standard :class:`TreeBuilder` is used. The *html* "
"argument was historically used for backwards compatibility and is now "
"deprecated.  If *encoding* [1]_ is given, the value overrides the encoding "
"specified in the XML file."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1155
msgid ""
"The *html* argument.  The remaining arguments should be passed via keyword "
"to prepare for the removal of the *html* argument."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1161
msgid ""
"Finishes feeding data to the parser.  Returns the result of calling the "
"``close()`` method of the *target* passed during construction; by default, "
"this is the toplevel document element."
msgstr ""
"结束向解析器提供数据。 返回调用在构造期间传入的 *target* 的 ``close()`` 方法"
"的结果；在默认情况下，这是最高层级的文档元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1168
msgid ""
"Define the :meth:`TreeBuilder.doctype` method on a custom TreeBuilder target."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1175
msgid "Feeds data to the parser.  *data* is encoded data."
msgstr "将数据送入解析器。 *data* 是编码后的数据。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1177
msgid ""
":meth:`XMLParser.feed` calls *target*\\'s ``start(tag, attrs_dict)`` method "
"for each opening tag, its ``end(tag)`` method for each closing tag, and data "
"is processed by method ``data(data)``.  :meth:`XMLParser.close` calls "
"*target*\\'s method ``close()``. :class:`XMLParser` can be used not only for "
"building a tree structure. This is an example of counting the maximum depth "
"of an XML file::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1220
msgid "XMLPullParser Objects"
msgstr "XMLPullParser对象"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1224
msgid ""
"A pull parser suitable for non-blocking applications.  Its input-side API is "
"similar to that of :class:`XMLParser`, but instead of pushing calls to a "
"callback target, :class:`XMLPullParser` collects an internal list of parsing "
"events and lets the user read from it. *events* is a sequence of events to "
"report back.  The supported events are the strings ``\"start\"``, "
"``\"end\"``, ``\"start-ns\"`` and ``\"end-ns\"`` (the \"ns\" events are used "
"to get detailed namespace information).  If *events* is omitted, only "
"``\"end\"`` events are reported."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1235
msgid "Feed the given bytes data to the parser."
msgstr "将给定的字节数据送入解析器。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1239
msgid ""
"Signal the parser that the data stream is terminated. Unlike :meth:"
"`XMLParser.close`, this method always returns :const:`None`. Any events not "
"yet retrieved when the parser is closed can still be read with :meth:"
"`read_events`."
msgstr ""
"通知解析器数据流已终结。 不同于 :meth:`XMLParser.close`，此方法总是返回 :"
"const:`None`。 当解析器被关闭时任何还未被获取的事件仍可通过 :meth:"
"`read_events` 被读取。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1246
msgid ""
"Return an iterator over the events which have been encountered in the data "
"fed to the parser.  The iterator yields ``(event, elem)`` pairs, where "
"*event* is a string representing the type of event (e.g. ``\"end\"``) and "
"*elem* is the encountered :class:`Element` object."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1252
msgid ""
"Events provided in a previous call to :meth:`read_events` will not be "
"yielded again.  Events are consumed from the internal queue only when they "
"are retrieved from the iterator, so multiple readers iterating in parallel "
"over iterators obtained from :meth:`read_events` will have unpredictable "
"results."
msgstr ""
"在之前对 :meth:`read_events` 的调用中提供的事件将不会被再次产生。 事件仅当它"
"们从迭代器中被取出时才会在内部队列中被消费，因此多个读取方对获取自 :meth:"
"`read_events` 的迭代器进行平行迭代将产生无法预料的结果。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1260
msgid ""
":class:`XMLPullParser` only guarantees that it has seen the \">\" character "
"of a starting tag when it emits a \"start\" event, so the attributes are "
"defined, but the contents of the text and tail attributes are undefined at "
"that point.  The same applies to the element children; they may or may not "
"be present."
msgstr ""
":class:`XMLPullParser` 只会确保当发出 \"start\" 事件时看到了开始标记的 \">\" "
"字符，因而在这个点上属性已被定义，但文本内容和末尾属性还未被定义。 这同样适用"
"于元素的下级；它们可能存在也可能不存在。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1271
msgid "Exceptions"
msgstr "异常"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1275
msgid ""
"XML parse error, raised by the various parsing methods in this module when "
"parsing fails.  The string representation of an instance of this exception "
"will contain a user-friendly error message.  In addition, it will have the "
"following attributes available:"
msgstr ""
"XML 解析器错误，由此模块中的多个解析方法在解析失败时引发。 此异常的实例的字符"
"串表示将包含用户友好的错误消息。 此外，它将具有下列可用属性:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1282
msgid ""
"A numeric error code from the expat parser. See the documentation of :mod:"
"`xml.parsers.expat` for the list of error codes and their meanings."
msgstr ""
"来自外部解析器的数字错误代码。 请参阅 :mod:`xml.parsers.expat` 的文档查看错误"
"代码列表及它们的含义。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1287
msgid ""
"A tuple of *line*, *column* numbers, specifying where the error occurred."
msgstr "一个包含 *line*, *column* 数值的元组，指明错误发生的位置。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1290
msgid "Footnotes"
msgstr "备注"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/xml.etree.elementtree.rst:1291
msgid ""
"The encoding string included in XML output should conform to the appropriate "
"standards.  For example, \"UTF-8\" is valid, but \"UTF8\" is not.  See "
"https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl and https://"
"www.iana.org/assignments/character-sets/character-sets.xhtml."
msgstr ""
"包括在 XML 输出中的编码格式字符串应当符合适当的标准。 例如 \"UTF-8\" 是有效"
"的，但 \"UTF8\" 是无效的。 请参阅 https://www.w3.org/TR/2006/REC-"
"xml11-20060816/#NT-EncodingDecl 和 https://www.iana.org/assignments/"
"character-sets/character-sets.xhtml。"
