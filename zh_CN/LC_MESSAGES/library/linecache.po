# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Freesand Leo <yuqinju@163.com>, 2019
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-16 16:41+0000\n"
"PO-Revision-Date: 2019-09-01 02:45+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2019\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/"
"teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/linecache.rst:2
msgid ":mod:`linecache` --- Random access to text lines"
msgstr ":mod:`linecache` --- 随机读写文本行"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/linecache.rst:9
msgid "**Source code:** :source:`Lib/linecache.py`"
msgstr "**源代码:** :source:`Lib/linecache.py`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/linecache.rst:13
msgid ""
"The :mod:`linecache` module allows one to get any line from a Python source "
"file, while attempting to optimize internally, using a cache, the common "
"case where many lines are read from a single file.  This is used by the :mod:"
"`traceback` module to retrieve source lines for inclusion in  the formatted "
"traceback."
msgstr ""
":mod:`linecache` 模块允许从一个 Python 源文件中获取任意的行，并会尝试使用缓存"
"进行内部优化，常应用于从单个文件读取多行的场合。 此模块被 :mod:`traceback` 模"
"块用来提取源码行以便包含在格式化的回溯中。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/linecache.rst:18
msgid ""
"The :func:`tokenize.open` function is used to open files. This function "
"uses :func:`tokenize.detect_encoding` to get the encoding of the file; in "
"the absence of an encoding token, the file encoding defaults to UTF-8."
msgstr ""
":func:`tokenize.open` 函数被用于打开文件。 此函数使用 :func:`tokenize."
"detect_encoding` 来获取文件的编码格式；如果未指明编码格式，则默认编码为 "
"UTF-8。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/linecache.rst:22
msgid "The :mod:`linecache` module defines the following functions:"
msgstr ":mod:`linecache` 模块定义了下列函数："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/linecache.rst:27
msgid ""
"Get line *lineno* from file named *filename*. This function will never raise "
"an exception --- it will return ``''`` on errors (the terminating newline "
"character will be included for lines that are found)."
msgstr ""
"从名为 *filename* 的文件中获取 *lineno* 行，此函数绝不会引发异常 --- 出现错误"
"时它将返回 ``''`` (所有找到的行都将包含换行符作为结束)。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/linecache.rst:33
msgid ""
"If a file named *filename* is not found, the function will look for it in "
"the module search path, ``sys.path``, after first checking for a :pep:`302` "
"``__loader__`` in *module_globals*, in case the module was imported from a "
"zipfile or other non-filesystem import source."
msgstr ""
"如果名为 *filename* 的文件未找到，该函数将在模块搜索路径 ``sys.path`` 中查找"
"它，在此之前会先在 *module_globals* 中检查 :pep:`302` ``__loader__``，以涵盖"
"模块是从 zip 文件或其他非文件系统导入源导入的情况。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/linecache.rst:41
msgid ""
"Clear the cache.  Use this function if you no longer need lines from files "
"previously read using :func:`getline`."
msgstr ""
"清空缓存。 如果你不再需要之前使用 :func:`getline` 从文件读取的行即可使用此函"
"数。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/linecache.rst:47
msgid ""
"Check the cache for validity.  Use this function if files in the cache  may "
"have changed on disk, and you require the updated version.  If *filename* is "
"omitted, it will check all the entries in the cache."
msgstr ""
"检查缓存有效性。 如果缓存中的文件在磁盘上发生了改变，而你需要更新后的版本即可"
"使用此函数。 如果省略了 *filename*，它会检查缓存中的所有条目。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/linecache.rst:53
msgid ""
"Capture enough detail about a non-file-based module to permit getting its "
"lines later via :func:`getline` even if *module_globals* is ``None`` in the "
"later call. This avoids doing I/O until a line is actually needed, without "
"having to carry the module globals around indefinitely."
msgstr ""
"捕获有关某个非基于文件的模块的足够细节信息，以允许稍后再通过 :func:`getline` "
"来获取其中的行，即使当稍后调用时 *module_globals* 为 ``None``。 这可以避免在"
"实际需要读取行之前执行 I/O，也不必始终保持模块全局变量。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/linecache.rst:60
msgid "Example::"
msgstr "示例::"
