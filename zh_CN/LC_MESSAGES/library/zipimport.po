# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Zombie110year <zombie110year@gmail.com>, 2019
# nick <2330458484@qq.com>, 2019
# ppcfish <ppcfish@gmail.com>, 2019
# Naisen Xu <723648649@qq.com>, 2020
# Freesand Leo <yuqinju@163.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-02 14:49+0000\n"
"PO-Revision-Date: 2019-09-01 02:46+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2020\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:2
msgid ":mod:`zipimport` --- Import modules from Zip archives"
msgstr ":mod:`zipimport` --- 从 Zip 存档中导入模块"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:11
msgid ""
"This module adds the ability to import Python modules (:file:`\\*.py`, "
":file:`\\*.pyc`) and packages from ZIP-format archives. It is usually not "
"needed to use the :mod:`zipimport` module explicitly; it is automatically "
"used by the built-in :keyword:`import` mechanism for :data:`sys.path` items "
"that are paths to ZIP archives."
msgstr ""
"此模块添加了从 ZIP 格式档案中导入 Python 模块（ :file:`\\*.py` ， :file:`\\*.pyc` "
"）和包的能力。通常不需要明确地使用 :mod:`zipimport` 模块，内置的 :keyword:`import` 机制会自动将此模块用于 ZIP "
"档案路径的 :data:`sys.path` 项目上。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:17
msgid ""
"Typically, :data:`sys.path` is a list of directory names as strings.  This "
"module also allows an item of :data:`sys.path` to be a string naming a ZIP "
"file archive. The ZIP archive can contain a subdirectory structure to "
"support package imports, and a path within the archive can be specified to "
"only import from a subdirectory.  For example, the path "
":file:`example.zip/lib/` would only import from the :file:`lib/` "
"subdirectory within the archive."
msgstr ""
"通常， :data:`sys.path` 是字符串的目录名称列表。此模块同样允许 :data:`sys.path` 的一项成为命名 ZIP "
"文件档案的字符串。 ZIP 档案可以容纳子目录结构去支持包的导入，并且可以将归档文件中的路径指定为仅从子目录导入。比如说，路径 "
":file:`example.zip/lib/` 将只会从档案中的 :file:`lib/` 子目录导入。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:24
msgid ""
"Any files may be present in the ZIP archive, but only files :file:`.py` and "
":file:`.pyc` are available for import.  ZIP import of dynamic modules "
"(:file:`.pyd`, :file:`.so`) is disallowed. Note that if an archive only "
"contains :file:`.py` files, Python will not attempt to modify the archive by"
" adding the corresponding :file:`.pyc` file, meaning that if a ZIP archive "
"doesn't contain :file:`.pyc` files, importing may be rather slow."
msgstr ""
"任何文件都可以存在于 ZIP档案之中，但是只有 :file:`.py` 和 :file:`.pyc` 文件是能够导入的。不允许导入 ZIP "
"中的动态模组（ :file:`.pyd` ， :file:`.so` ）。请注意，如果档案中只包含 :file:`.py` 文件， "
"Python不会尝试通过添加对应的 :file:`.pyc` 文件修改档案，意思是如果 ZIP 档案不包含 :file:`.pyc` "
"文件，导入或许会变慢。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:31
msgid "ZIP archives with an archive comment are currently not supported."
msgstr "目前不支持带有档案注释的 ZIP 归档。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:37
msgid ""
"`PKZIP Application Note "
"<https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT>`_"
msgstr ""
"`PKZIP Application Note "
"<https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT>`_"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:36
msgid ""
"Documentation on the ZIP file format by Phil Katz, the creator of the format"
" and algorithms used."
msgstr "Phil Katz 编写的 ZIP 文件格式文档，此格式和使用的算法的创建者。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:42
msgid ":pep:`273` - Import Modules from Zip Archives"
msgstr ":pep:`273` -  从ZIP压缩包导入模块"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:40
msgid ""
"Written by James C. Ahlstrom, who also provided an implementation. Python "
"2.3 follows the specification in PEP 273, but uses an implementation written"
" by Just van Rossum that uses the import hooks described in PEP 302."
msgstr ""
"由 James C. Ahlstrom 编写，他还提供了一个具体实现。 Python 2.3 遵循 PEP 273 的规范，但使用了一个由 van "
"Rossum 本人所编写的实现，该实现使用了 PEP 302 所描述的导入钩子。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:44
msgid ":pep:`302` - New Import Hooks"
msgstr ":pep:`302` - 新导入钩"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:45
msgid "The PEP to add the import hooks that help this module work."
msgstr "PEP 添加导入钩来有助于模块运作。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:48
msgid "This module defines an exception:"
msgstr "此模块定义了一个异常："

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:52
msgid ""
"Exception raised by zipimporter objects. It's a subclass of "
":exc:`ImportError`, so it can be caught as :exc:`ImportError`, too."
msgstr ""
"异常由 zipimporter 对象引发。这是 :exc:`ImportError` 的子类，因此，也可以捕获为 :exc:`ImportError` "
"。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:59
msgid "zipimporter Objects"
msgstr "zipimporter 对象"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:61
msgid ":class:`zipimporter` is the class for importing ZIP files."
msgstr ":class:`zipimporter` 是用于导入 ZIP 文件的类。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:65
msgid ""
"Create a new zipimporter instance. *archivepath* must be a path to a ZIP "
"file, or to a specific path within a ZIP file.  For example, an "
"*archivepath* of :file:`foo/bar.zip/lib` will look for modules in the "
":file:`lib` directory inside the ZIP file :file:`foo/bar.zip` (provided that"
" it exists)."
msgstr ""
"创建新的 zipimporter 实例。 *archivepath* 必须是指向 ZIP 文件的路径，或者 ZIP 文件中的特定路径。例如， "
":file:`foo/bar.zip/lib` 的 *archivepath* 将在 ZIP 文件 :file:`foo/bar.zip` 中的 "
":file:`lib` 目录中查找模块。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:70
msgid ""
":exc:`ZipImportError` is raised if *archivepath* doesn't point to a valid "
"ZIP archive."
msgstr "如果 *archivepath* 没有指向一个有效的 ZIP 档案，引发 :exc:`ZipImportError` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:75
msgid ""
"Search for a module specified by *fullname*. *fullname* must be the fully "
"qualified (dotted) module name. It returns the zipimporter instance itself "
"if the module was found, or :const:`None` if it wasn't. The optional *path* "
"argument is ignored---it's there for compatibility with the importer "
"protocol."
msgstr ""
"搜索由 *fullname* 指定的模块。 *fullname* 必须是完全合格的（含加点作分割的拓展名）模块名。它返回 zipimporter "
"实例本身如果模块被找到，或者返回 :const:`None` 如果没找到指定模块。可选的 *path* 被忽略，这是为了与导入器协议兼容。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:84
msgid ""
"Return the code object for the specified module. Raise :exc:`ZipImportError`"
" if the module couldn't be found."
msgstr "返回指定模块的代码对象。如果不能找到模块会引发 :exc:`ZipImportError` 错误。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:90
msgid ""
"Return the data associated with *pathname*. Raise :exc:`OSError` if the file"
" wasn't found."
msgstr "返回与 *pathname* 相关联的数据。如果不能找到文件则引发 :exc:`OSError` 错误。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:93
msgid ":exc:`IOError` used to be raised instead of :exc:`OSError`."
msgstr ":exc:`IOError` 代替 :exc:`OSError` 被引发。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:99
msgid ""
"Return the value ``__file__`` would be set to if the specified module was "
"imported. Raise :exc:`ZipImportError` if the module couldn't be found."
msgstr ""
"如果导入了指定的模块 ``__file__`` ，则返回为该模块设置的值。如果未找到模块则引发 :exc:`ZipImportError` 错误。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:108
msgid ""
"Return the source code for the specified module. Raise :exc:`ZipImportError`"
" if the module couldn't be found, return :const:`None` if the archive does "
"contain the module, but has no source for it."
msgstr ""
"返回指定模块的源代码。如果没有找到模块则引发 :exc:`ZipImportError` ，如果档案包含模块但是没有源代码，返回 "
":const:`None` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:116
msgid ""
"Return ``True`` if the module specified by *fullname* is a package. Raise "
":exc:`ZipImportError` if the module couldn't be found."
msgstr ""
"如果由 *fullname* 指定的模块是一个包则返回 ``True`` 。如果不能找到模块则引发 :exc:`ZipImportError` 错误。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:122
msgid ""
"Load the module specified by *fullname*. *fullname* must be the fully "
"qualified (dotted) module name. It returns the imported module, or raises "
":exc:`ZipImportError` if it wasn't found."
msgstr ""
"加载由 *fullname* 指定的模块。 *fullname* "
"必须是完全合格的（含加点作为分割的拓展名）模块名。它返回已加载模块，或者当找不到模块时引发 :exc:`ZipImportError` 错误。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:129
msgid ""
"The file name of the importer's associated ZIP file, without a possible "
"subpath."
msgstr "导入器关联的 ZIP 文件的文件名，不含可能的子路径。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:135
msgid ""
"The subpath within the ZIP file where modules are searched.  This is the "
"empty string for zipimporter objects which point to the root of the ZIP "
"file."
msgstr "ZIP 文件中搜索的模块的子路径。这是一个指向 ZIP 文件 根目录的 zipimporter 对象的空字符串。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:139
msgid ""
"The :attr:`archive` and :attr:`prefix` attributes, when combined with a "
"slash, equal the original *archivepath* argument given to the "
":class:`zipimporter` constructor."
msgstr ""
"当与斜杠结合使用时， :attr:`archive` 和 :attr:`prefix` 属性等价于赋予 :class:`zipimporter` "
"构造器的原始 *archivepath* 参数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:147
msgid "Examples"
msgstr "例子"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/zipimport.rst:149
msgid ""
"Here is an example that imports a module from a ZIP archive - note that the "
":mod:`zipimport` module is not explicitly used."
msgstr "这是一个从 ZIP 档案中导入模块的例子 - 请注意 :mod:`zipimport` 不需要明确地使用。"
