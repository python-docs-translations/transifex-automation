# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Freesand Leo <yuqinju@163.com>, 2023
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-10 22:05-0300\n"
"PO-Revision-Date: 2022-11-05 19:49+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/"
"teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/importlib.resources.rst:2
msgid ""
":mod:`!importlib.resources` -- Package resource reading, opening and access"
msgstr ""

#: ../../library/importlib.resources.rst:7
msgid "**Source code:** :source:`Lib/importlib/resources/__init__.py`"
msgstr "**源代码:** :source:`Lib/importlib/resources/__init__.py`"

#: ../../library/importlib.resources.rst:13
msgid ""
"This module leverages Python's import system to provide access to "
"*resources* within *packages*."
msgstr "此模块调整了 Python 的导入系统以便提供对 *包* 内部的 *资源* 的访问。"

#: ../../library/importlib.resources.rst:16
msgid ""
"\"Resources\" are file-like resources associated with a module or package in "
"Python. The resources may be contained directly in a package, within a "
"subdirectory contained in that package, or adjacent to modules outside a "
"package. Resources may be text or binary. As a result, Python module sources "
"(.py) of a package and compilation artifacts (pycache) are technically de-"
"facto resources of that package. In practice, however, resources are "
"primarily those non-Python artifacts exposed specifically by the package "
"author."
msgstr ""
"“资源”是指 Python 中与模块或包相关联的文件类资源。 资源可以直接包含在某个包"
"中，包含在某个包的子目录中，或是与某个包外部的模块相邻。 资源可以是文本或二进"
"制数据。 因此，从技术上说 Python 包的模块源代码文件 (.py) 和编译结果文件 "
"(pycache) 就是包实际所包含的资源。 但是，在实践中，资源主要是指包作者专门公开"
"的非 Python 文件。"

#: ../../library/importlib.resources.rst:25
msgid "Resources can be opened or read in either binary or text mode."
msgstr "资源可以使用二进制或文本模式打开。"

#: ../../library/importlib.resources.rst:27
msgid ""
"Resources are roughly akin to files inside directories, though it's "
"important to keep in mind that this is just a metaphor.  Resources and "
"packages **do not** have to exist as physical files and directories on the "
"file system: for example, a package and its resources can be imported from a "
"zip file using :py:mod:`zipimport`."
msgstr ""
"资源大致相当于目录内的文件，不过需要记住这只是一个比喻。 资源和包 **不是** 必"
"须如文件系统上的物理文件和目录那样存在的：例如，一个包及其资源可使用 :py:mod:"
"`zipimport` 从一个 ZIP 文件导入。"

#: ../../library/importlib.resources.rst:35
msgid ""
"This module provides functionality similar to `pkg_resources <https://"
"setuptools.readthedocs.io/en/latest/pkg_resources.html>`_ `Basic Resource "
"Access <https://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-"
"resource-access>`_ without the performance overhead of that package.  This "
"makes reading resources included in packages easier, with more stable and "
"consistent semantics."
msgstr ""
"本模块提供了类似于 `pkg_resources <https://setuptools.readthedocs.io/en/"
"latest/pkg_resources.html>`_ `Basic Resource Access <https://setuptools."
"readthedocs.io/en/latest/pkg_resources.html#basic-resource-access>`_ 的功能而"
"没有那样高的性能开销。 这使得读取包中的资源更为容易，并具有更为稳定和一致的语"
"义。"

#: ../../library/importlib.resources.rst:43
msgid ""
"The standalone backport of this module provides more information on `using "
"importlib.resources <https://importlib-resources.readthedocs.io/en/latest/"
"using.html>`_ and `migrating from pkg_resources to importlib.resources "
"<https://importlib-resources.readthedocs.io/en/latest/migration.html>`_."
msgstr ""
"此模块的独立向下移植版本在 `using importlib.resources <https://importlib-"
"resources.readthedocs.io/en/latest/using.html>`_ 和 `migrating from "
"pkg_resources to importlib.resources <https://importlib-resources."
"readthedocs.io/en/latest/migration.html>`_ 中提供了更多信息。"

#: ../../library/importlib.resources.rst:49
msgid ""
":class:`Loaders <importlib.abc.Loader>` that wish to support resource "
"reading should implement a ``get_resource_reader(fullname)`` method as "
"specified by :class:`importlib.resources.abc.ResourceReader`."
msgstr ""
"想要支持资源读取的 :class:`加载器 <importlib.abc.Loader>` 应当实现 :class:"
"`importlib.resources.abc.ResourceReader` 中规定的 "
"``get_resource_reader(fullname)`` 方法。"

#: ../../library/importlib.resources.rst:55
msgid ""
"Represents an anchor for resources, either a :class:`module object <types."
"ModuleType>` or a module name as a string. Defined as ``Union[str, "
"ModuleType]``."
msgstr ""
"代表资源的锚点，可以是一个 :class:`模块对象 <types.ModuleType>` 或字符串形式"
"的模块名称不。 定义为 ``Union[str, ModuleType]``。"

#: ../../library/importlib.resources.rst:61
msgid ""
"Returns a :class:`~importlib.resources.abc.Traversable` object representing "
"the resource container (think directory) and its resources (think files). A "
"Traversable may contain other containers (think subdirectories)."
msgstr ""
"返回一个代表资源容器（相当于目录）及其资源（相当于文件）的 :class:"
"`~importlib.resources.abc.Traversable` 对象。 Traversable 可以包含其他容器"
"（相当于子目录）。"

#: ../../library/importlib.resources.rst:66
msgid ""
"*anchor* is an optional :class:`Anchor`. If the anchor is a package, "
"resources are resolved from that package. If a module, resources are "
"resolved adjacent to that module (in the same package or the package root). "
"If the anchor is omitted, the caller's module is used."
msgstr ""
"*anchor* 是一个可选的 :class:`Anchor`。 如果 anchor 是一个包，则会从这个包获"
"取资源。 如果是一个模块，则会从这个模块的相邻位置获取资源（在同一个包或包的根"
"目录中）。 如果省略了 anchor,则会使用调用方的模块。"

#: ../../library/importlib.resources.rst:74
msgid ""
"*package* parameter was renamed to *anchor*. *anchor* can now be a non-"
"package module and if omitted will default to the caller's module. *package* "
"is still accepted for compatibility but will raise a :exc:"
"`DeprecationWarning`. Consider passing the anchor positionally or using "
"``importlib_resources >= 5.10`` for a compatible interface on older Pythons."
msgstr ""
"*package* 形参被重命名为 *anchor*。 *anchor* 现在可以是一个不为包的模块，如果"
"被省略则默认为调用方的模块。 为保持兼容性 *package* 仍然被接受但会引发 :exc:"
"`DeprecationWarning`。 请考虑以位置参数方式传入或使用 ``importlib_resources "
">= 5.10`` 作为针对旧版 Python 的兼容接口。"

#: ../../library/importlib.resources.rst:84
msgid ""
"Given a :class:`~importlib.resources.abc.Traversable` object representing a "
"file or directory, typically from :func:`importlib.resources.files`, return "
"a context manager for use in a :keyword:`with` statement. The context "
"manager provides a :class:`pathlib.Path` object."
msgstr ""
"给定一个代表文件或目录的 :class:`~importlib.resources.abc.Traversable` 对象，"
"通常是来自 :func:`importlib.resources.files`，返回一个上下文管理器以供 :"
"keyword:`with` 语句使用。 该上下文管理器提供一个 :class:`pathlib.Path` 对象。"

#: ../../library/importlib.resources.rst:89
msgid ""
"Exiting the context manager cleans up any temporary file or directory "
"created when the resource was extracted from e.g. a zip file."
msgstr ""
"退出上下文管理器后会清除从 zip 文件等提取资源时创建的任何临时文件或目录。"

#: ../../library/importlib.resources.rst:92
msgid ""
"Use ``as_file`` when the Traversable methods (``read_text``, etc) are "
"insufficient and an actual file or directory on the file system is required."
msgstr ""
"当 Traversable 的方法（如 ``read_text`` 等）不足以满足需要而需要文件系统中的"
"真实文件或目录时请使用 ``as_file``。"

#: ../../library/importlib.resources.rst:98
msgid "Added support for *traversable* representing a directory."
msgstr "增加了对代表目录的 *traversable* 的支持。"

#: ../../library/importlib.resources.rst:105
msgid "Functional API"
msgstr "函数式 API"

#: ../../library/importlib.resources.rst:107
msgid ""
"A set of simplified, backwards-compatible helpers is available. These allow "
"common operations in a single function call."
msgstr ""

#: ../../library/importlib.resources.rst:110
msgid "For all the following functions:"
msgstr ""

#: ../../library/importlib.resources.rst:112
msgid ""
"*anchor* is an :class:`~importlib.resources.Anchor`, as in :func:`~importlib."
"resources.files`. Unlike in ``files``, it may not be omitted."
msgstr ""

#: ../../library/importlib.resources.rst:116
msgid ""
"*path_names* are components of a resource's path name, relative to the "
"anchor. For example, to get the text of resource named ``info.txt``, use::"
msgstr ""

#: ../../library/importlib.resources.rst:122
msgid ""
"Like :meth:`Traversable.joinpath <importlib.resources.abc.Traversable>`, The "
"individual components should use forward slashes (``/``) as path separators. "
"For example, the following are equivalent::"
msgstr ""

#: ../../library/importlib.resources.rst:130
msgid ""
"For backward compatibility reasons, functions that read text require an "
"explicit *encoding* argument if multiple *path_names* are given. For "
"example, to get the text of ``info/chapter1.txt``, use::"
msgstr ""

#: ../../library/importlib.resources.rst:139
msgid "Open the named resource for binary reading."
msgstr ""

#: ../../library/importlib.resources.rst:141
#: ../../library/importlib.resources.rst:184
#: ../../library/importlib.resources.rst:232
#: ../../library/importlib.resources.rst:249
#: ../../library/importlib.resources.rst:267
msgid ""
"See :ref:`the introduction <importlib_resources_functional>` for details on "
"*anchor* and *path_names*."
msgstr ""

#: ../../library/importlib.resources.rst:144
msgid ""
"This function returns a :class:`~typing.BinaryIO` object, that is, a binary "
"stream open for reading."
msgstr ""

#: ../../library/importlib.resources.rst:147
#: ../../library/importlib.resources.rst:171
#: ../../library/importlib.resources.rst:187
#: ../../library/importlib.resources.rst:208
#: ../../library/importlib.resources.rst:235
#: ../../library/importlib.resources.rst:252
#: ../../library/importlib.resources.rst:270
msgid "This function is roughly equivalent to::"
msgstr ""

#: ../../library/importlib.resources.rst:151
#: ../../library/importlib.resources.rst:191
#: ../../library/importlib.resources.rst:256
msgid "Multiple *path_names* are accepted."
msgstr ""

#: ../../library/importlib.resources.rst:157
msgid ""
"Open the named resource for text reading. By default, the contents are read "
"as strict UTF-8."
msgstr ""

#: ../../library/importlib.resources.rst:160
#: ../../library/importlib.resources.rst:200
msgid ""
"See :ref:`the introduction <importlib_resources_functional>` for details on "
"*anchor* and *path_names*. *encoding* and *errors* have the same meaning as "
"in built-in :func:`open`."
msgstr ""

#: ../../library/importlib.resources.rst:164
#: ../../library/importlib.resources.rst:204
msgid ""
"For backward compatibility reasons, the *encoding* argument must be given "
"explicitly if there are multiple *path_names*. This limitation is scheduled "
"to be removed in Python 3.15."
msgstr ""

#: ../../library/importlib.resources.rst:168
msgid ""
"This function returns a :class:`~typing.TextIO` object, that is, a text "
"stream open for reading."
msgstr ""

#: ../../library/importlib.resources.rst:175
#: ../../library/importlib.resources.rst:212
#: ../../library/importlib.resources.rst:239
msgid ""
"Multiple *path_names* are accepted. *encoding* and *errors* must be given as "
"keyword arguments."
msgstr ""

#: ../../library/importlib.resources.rst:182
msgid "Read and return the contents of the named resource as :class:`bytes`."
msgstr ""

#: ../../library/importlib.resources.rst:197
msgid ""
"Read and return the contents of the named resource as :class:`str`. By "
"default, the contents are read as strict UTF-8."
msgstr ""

#: ../../library/importlib.resources.rst:219
msgid ""
"Provides the path to the *resource* as an actual file system path.  This "
"function returns a context manager for use in a :keyword:`with` statement. "
"The context manager provides a :class:`pathlib.Path` object."
msgstr ""

#: ../../library/importlib.resources.rst:223
msgid ""
"Exiting the context manager cleans up any temporary files created, e.g. when "
"the resource needs to be extracted from a zip file."
msgstr ""

#: ../../library/importlib.resources.rst:226
msgid ""
"For example, the :meth:`~pathlib.Path.stat` method requires an actual file "
"system path; it can be used like this::"
msgstr ""

#: ../../library/importlib.resources.rst:246
msgid ""
"Return ``True`` if the named resource exists, otherwise ``False``. This "
"function does not consider directories to be resources."
msgstr ""

#: ../../library/importlib.resources.rst:262
msgid ""
"Return an iterable over the named items within the package or path. The "
"iterable returns names of resources (e.g. files) and non-resources (e.g. "
"directories) as :class:`str`. The iterable does not recurse into "
"subdirectories."
msgstr ""

#: ../../library/importlib.resources.rst:275
msgid ""
"Prefer ``iterdir()`` as above, which offers more control over the results "
"and richer functionality."
msgstr ""
