# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Zombie110year <zombie110year@gmail.com>, 2019
# ppcfish <ppcfish@gmail.com>, 2019
# Freesand Leo <yuqinju@163.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-02 14:49+0000\n"
"PO-Revision-Date: 2019-09-01 03:23+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2019\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:2
msgid ":mod:`glob` --- Unix style pathname pattern expansion"
msgstr ":mod:`glob` --- Unix 风格路径名模式扩展"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:7
msgid "**Source code:** :source:`Lib/glob.py`"
msgstr "**源代码:** :source:`Lib/glob.py`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:21
msgid ""
"The :mod:`glob` module finds all the pathnames matching a specified pattern "
"according to the rules used by the Unix shell, although results are returned"
" in arbitrary order.  No tilde expansion is done, but ``*``, ``?``, and "
"character ranges expressed with ``[]`` will be correctly matched.  This is "
"done by using the :func:`os.scandir` and :func:`fnmatch.fnmatch` functions "
"in concert, and not by actually invoking a subshell.  Note that unlike "
":func:`fnmatch.fnmatch`, :mod:`glob` treats filenames beginning with a dot "
"(``.``) as special cases. (For tilde and shell variable expansion, use "
":func:`os.path.expanduser` and :func:`os.path.expandvars`.)"
msgstr ""
":mod:`glob` 模块可根据 Unix 终端所用规则找出所有匹配特定模式的路径名，但会按不确定的顺序返回结果。 波浪号扩展不会生效，但 "
"``*``, ``?`` 以及表示为 ``[]`` 的字符范围将被正确地匹配。 这是通过配合使用 :func:`os.scandir` 和 "
":func:`fnmatch.fnmatch` 函数来实现的，而不是通过实际发起调用子终端。 请注意不同于 "
":func:`fnmatch.fnmatch`，:mod:`glob` 会将以点号 (``.``) 开头的文件名作为特殊情况来处理。 "
"（对于波浪号和终端变量扩展，请使用 :func:`os.path.expanduser` 和 :func:`os.path.expandvars`。）"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:31
msgid ""
"For a literal match, wrap the meta-characters in brackets. For example, "
"``'[?]'`` matches the character ``'?'``."
msgstr "对于字面值匹配，请将原字符用方括号括起来。 例如，``'[?]'`` 将匹配字符 ``'?'``。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:36
msgid "The :mod:`pathlib` module offers high-level path objects."
msgstr ":mod:`pathlib` 模块提供高级路径对象。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:41
msgid ""
"Return a possibly-empty list of path names that match *pathname*, which must"
" be a string containing a path specification. *pathname* can be either "
"absolute (like :file:`/usr/src/Python-1.5/Makefile`) or relative (like "
":file:`../../Tools/\\*/\\*.gif`), and can contain shell-style wildcards. "
"Broken symlinks are included in the results (as in the shell)."
msgstr ""
"返回匹配 *pathname* 的可能为空的路径名列表，路径名必须为包含一个路径描述的字符串。 *pathname* 可以是绝对路径 (如 "
":file:`/usr/src/Python-1.5/Makefile`) 或相对路径 (如 "
":file:`../../Tools/\\*/\\*.gif`)，并且可包含 shell 风格的通配符。 无效的符号链接可以包含在结果中 (与在 "
"shell 中一样)。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:50
msgid ""
"If *recursive* is true, the pattern \"``**``\" will match any files and zero"
" or more directories, subdirectories and symbolic links to directories. If "
"the pattern is followed by an :data:`os.sep` or :data:`os.altsep` then files"
" will not match."
msgstr ""
"如果 *recursive* 为真值，则模式 \"``**``\" 将匹配目录中的任何文件以及零个或多个目录、子目录和符号链接。 如果模式加了一个 "
":data:`os.sep` 或 :data:`os.altsep` 则将不匹配文件。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:56
msgid ""
"Using the \"``**``\" pattern in large directory trees may consume an "
"inordinate amount of time."
msgstr "在一个较大的目录树中使用 \"``**``\" 模式可能会消耗非常多的时间。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:59
msgid "Support for recursive globs using \"``**``\"."
msgstr "支持使用 \"``**``\" 的递归 glob."

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:65
msgid ""
"Return an :term:`iterator` which yields the same values as :func:`glob` "
"without actually storing them all simultaneously."
msgstr "返回一个 :term:`iterator`，它会产生与 :func:`glob` 相同的结果，但不会实际地同时保存它们。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:71
msgid ""
"Escape all special characters (``'?'``, ``'*'`` and ``'['``). This is useful"
" if you want to match an arbitrary literal string that may have special "
"characters in it.  Special characters in drive/UNC sharepoints are not "
"escaped, e.g. on Windows ``escape('//?/c:/Quo vadis?.txt')`` returns "
"``'//?/c:/Quo vadis[?].txt'``."
msgstr ""
"转义所有特殊字符 (``'?'``, ``'*'`` 和 ``'['``)。 这适用于当你想要匹配可能带有特殊字符的任意字符串字面值的情况。 在 "
"drive/UNC 共享点中的特殊字符不会被转义，例如在 Windows 上 ``escape('//?/c:/Quo vadis?.txt')`` "
"将返回 ``'//?/c:/Quo vadis[?].txt'``。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:80
msgid ""
"For example, consider a directory containing the following files: "
":file:`1.gif`, :file:`2.txt`, :file:`card.gif` and a subdirectory "
":file:`sub` which contains only the file :file:`3.txt`.  :func:`glob` will "
"produce the following results.  Notice how any leading components of the "
"path are preserved. ::"
msgstr ""
"例如，考虑一个包含以下内容的目录：文件 :file:`1.gif`, :file:`2.txt`, :file:`card.gif` 以及一个子目录 "
":file:`sub` 其中只包含一个文件 :file:`3.txt`.  :func:`glob` 将产生如下结果。 "
"请注意路径的任何开头部分都将被保留。::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:98
msgid ""
"If the directory contains files starting with ``.`` they won't be matched by"
" default. For example, consider a directory containing :file:`card.gif` and "
":file:`.card.gif`::"
msgstr ""
"如果目录包含以 ``.`` 打头的文件，它们默认将不会被匹配。 例如，考虑一个包含 :file:`card.gif` 和 "
":file:`.card.gif` 的目录::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:110
msgid "Module :mod:`fnmatch`"
msgstr "模块 :mod:`fnmatch`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/glob.rst:111
msgid "Shell-style filename (not path) expansion"
msgstr "Shell 风格文件名（而非路径）扩展"
