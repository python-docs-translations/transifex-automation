# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# eric R <trencyclopedia@gmail.com>, 2019
# sunsol s <sunsolzn@gmail.com>, 2019
# Woostundy <woostundy@gmail.com>, 2019
# nick <2330458484@qq.com>, 2019
# belingud <1170202353@qq.com>, 2019
# emrich <emrich3@163.com>, 2019
# cdarlint <cdarling@126.com>, 2019
# Shengjing Zhu <zsj950618@gmail.com>, 2019
# ww song <sww4718168@gmail.com>, 2019
# Konge <zkonge@outlook.com>, 2019
# Freesand Leo <yuqinju@163.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-02 14:49+0000\n"
"PO-Revision-Date: 2019-09-01 03:31+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2022\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:5
#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:11
msgid "Built-in Functions"
msgstr "内置函数"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:7
msgid ""
"The Python interpreter has a number of functions and types built into it "
"that are always available.  They are listed here in alphabetical order."
msgstr "Python 解释器内置了很多函数和类型，您可以在任何时候使用它们。以下按字母表顺序列出它们。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:13
msgid ":func:`abs`"
msgstr ":func:`abs`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:13
msgid ":func:`delattr`"
msgstr ":func:`delattr`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:13
msgid ":func:`hash`"
msgstr ":func:`hash`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:13
msgid "|func-memoryview|_"
msgstr "|func-memoryview|_"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:13
msgid "|func-set|_"
msgstr "|func-set|_"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:14
msgid ":func:`all`"
msgstr ":func:`all`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:14
msgid "|func-dict|_"
msgstr "|func-dict|_"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:14
msgid ":func:`help`"
msgstr ":func:`help`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:14
msgid ":func:`min`"
msgstr ":func:`min`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:14
msgid ":func:`setattr`"
msgstr ":func:`setattr`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:15
msgid ":func:`any`"
msgstr ":func:`any`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:15
msgid ":func:`dir`"
msgstr ":func:`dir`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:15
msgid ":func:`hex`"
msgstr ":func:`hex`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:15
msgid ":func:`next`"
msgstr ":func:`next`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:15
msgid ":func:`slice`"
msgstr ":func:`slice`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:16
msgid ":func:`ascii`"
msgstr ":func:`ascii`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:16
msgid ":func:`divmod`"
msgstr ":func:`divmod`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:16
msgid ":func:`id`"
msgstr ":func:`id`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:16
msgid ":func:`object`"
msgstr ":func:`object`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:16
msgid ":func:`sorted`"
msgstr ":func:`sorted`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:17
msgid ":func:`bin`"
msgstr ":func:`bin`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:17
msgid ":func:`enumerate`"
msgstr ":func:`enumerate`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:17
msgid ":func:`input`"
msgstr ":func:`input`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:17
msgid ":func:`oct`"
msgstr ":func:`oct`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:17
msgid ":func:`staticmethod`"
msgstr ":func:`staticmethod`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:18
msgid ":func:`bool`"
msgstr ":func:`bool`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:18
msgid ":func:`eval`"
msgstr ":func:`eval`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:18
msgid ":func:`int`"
msgstr ":func:`int`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:18
msgid ":func:`open`"
msgstr ":func:`open`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:18
msgid "|func-str|_"
msgstr "|func-str|_"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:19
msgid ":func:`breakpoint`"
msgstr ":func:`breakpoint`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:19
msgid ":func:`exec`"
msgstr ":func:`exec`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:19
msgid ":func:`isinstance`"
msgstr ":func:`isinstance`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:19
msgid ":func:`ord`"
msgstr ":func:`ord`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:19
msgid ":func:`sum`"
msgstr ":func:`sum`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:20
msgid "|func-bytearray|_"
msgstr "|func-bytearray|_"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:20
msgid ":func:`filter`"
msgstr ":func:`filter`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:20
msgid ":func:`issubclass`"
msgstr ":func:`issubclass`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:20
msgid ":func:`pow`"
msgstr ":func:`pow`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:20
msgid ":func:`super`"
msgstr ":func:`super`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:21
msgid "|func-bytes|_"
msgstr "|func-bytes|_"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:21
msgid ":func:`float`"
msgstr ":func:`float`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:21
msgid ":func:`iter`"
msgstr ":func:`iter`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:21
msgid ":func:`print`"
msgstr ":func:`print`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:21
msgid "|func-tuple|_"
msgstr "|func-tuple|_"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:22
msgid ":func:`callable`"
msgstr ":func:`callable`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:22
msgid ":func:`format`"
msgstr ":func:`format`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:22
msgid ":func:`len`"
msgstr ":func:`len`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:22
msgid ":func:`property`"
msgstr ":func:`property`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:22
msgid ":func:`type`"
msgstr ":func:`type`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:23
msgid ":func:`chr`"
msgstr ":func:`chr`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:23
msgid "|func-frozenset|_"
msgstr "|func-frozenset|_"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:23
msgid "|func-list|_"
msgstr "|func-list|_"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:23
msgid "|func-range|_"
msgstr "|func-range|_"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:23
msgid ":func:`vars`"
msgstr ":func:`vars`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:24
msgid ":func:`classmethod`"
msgstr ":func:`classmethod`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:24
msgid ":func:`getattr`"
msgstr ":func:`getattr`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:24
msgid ":func:`locals`"
msgstr ":func:`locals`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:24
msgid ":func:`repr`"
msgstr ":func:`repr`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:24
msgid ":func:`zip`"
msgstr ":func:`zip`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:25
msgid ":func:`compile`"
msgstr ":func:`compile`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:25
msgid ":func:`globals`"
msgstr ":func:`globals`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:25
msgid ":func:`map`"
msgstr ":func:`map`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:25
msgid ":func:`reversed`"
msgstr ":func:`reversed`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:25
msgid ":func:`__import__`"
msgstr ":func:`__import__`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:26
msgid ":func:`complex`"
msgstr ":func:`complex`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:26
msgid ":func:`hasattr`"
msgstr ":func:`hasattr`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:26
msgid ":func:`max`"
msgstr ":func:`max`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:26
msgid ":func:`round`"
msgstr ":func:`round`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:45
msgid ""
"Return the absolute value of a number.  The argument may be an integer or a "
"floating point number.  If the argument is a complex number, its magnitude "
"is returned."
msgstr "返回一个数的绝对值。实参可以是整数或浮点数。如果实参是一个复数，返回它的模。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:52
msgid ""
"Return ``True`` if all elements of the *iterable* are true (or if the "
"iterable is empty).  Equivalent to::"
msgstr "如果 *iterable* 的所有元素为真（或迭代器为空），返回 ``True`` 。等价于::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:64
msgid ""
"Return ``True`` if any element of the *iterable* is true.  If the iterable "
"is empty, return ``False``.  Equivalent to::"
msgstr "如果 *iterable* 的任一元素为真则返回 ``True``。 如果迭代器为空，返回 ``False``。 等价于::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:76
msgid ""
"As :func:`repr`, return a string containing a printable representation of an"
" object, but escape the non-ASCII characters in the string returned by "
":func:`repr` using ``\\x``, ``\\u`` or ``\\U`` escapes.  This generates a "
"string similar to that returned by :func:`repr` in Python 2."
msgstr ""
"与 :func:`repr` 类似，返回一个包含对象的可打印表示形式的字符串，但是使用 ``\\x``、``\\u`` 和 ``\\U`` 对 "
":func:`repr` 返回的字符串中非 ASCII 编码的字符进行转义。 生成的字符串和 Python 2 的 :func:`repr` "
"返回的结果相似。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:84
msgid ""
"Convert an integer number to a binary string prefixed with \"0b\". The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`__index__` method that returns an "
"integer. Some examples:"
msgstr ""
"将一个整数转变为一个前缀为“0b”的二进制字符串。结果是一个合法的 Python 表达式。如果 *x* 不是 Python 的 :class:`int`"
" 对象，那它需要定义 :meth:`__index__`  方法返回一个整数。一些例子："

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:94
msgid ""
"If prefix \"0b\" is desired or not, you can use either of the following "
"ways."
msgstr "如果不一定需要前缀“0b”，还可以使用如下的方法。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:101
#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:703
#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:971
msgid "See also :func:`format` for more information."
msgstr "另见 :func:`format` 获取更多信息。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:106
msgid ""
"Return a Boolean value, i.e. one of ``True`` or ``False``.  *x* is converted"
" using the standard :ref:`truth testing procedure <truth>`.  If *x* is false"
" or omitted, this returns ``False``; otherwise it returns ``True``.  The "
":class:`bool` class is a subclass of :class:`int` (see :ref:`typesnumeric`)."
" It cannot be subclassed further.  Its only instances are ``False`` and "
"``True`` (see :ref:`bltin-boolean-values`)."
msgstr ""
"返回一个布尔值，``True`` 或者 ``False``。 *x* 使用标准的 :ref:`真值测试过程 <truth>` 来转换。 如果 *x* "
"是假值或者被省略，返回 ``False``；其他情况返回 ``True``。 :class:`bool` 类是 :class:`int` 的子类（参见 "
":ref:`typesnumeric` ）。其他类不能继承自它。它只有 ``False`` 和 ``True`` 两个实例（参见 "
":ref:`bltin-boolean-values` ）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:115
#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:581
#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:774
msgid "*x* is now a positional-only parameter."
msgstr "*x* 现在只能作为位置参数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:120
msgid ""
"This function drops you into the debugger at the call site.  Specifically, "
"it calls :func:`sys.breakpointhook`, passing ``args`` and ``kws`` straight "
"through.  By default, ``sys.breakpointhook()`` calls :func:`pdb.set_trace()`"
" expecting no arguments.  In this case, it is purely a convenience function "
"so you don't have to explicitly import :mod:`pdb` or type as much code to "
"enter the debugger.  However, :func:`sys.breakpointhook` can be set to some "
"other function and :func:`breakpoint` will automatically call that, allowing"
" you to drop into the debugger of choice."
msgstr ""
"此函数会在调用时将你陷入调试器中。具体来说，它调用 :func:`sys.breakpointhook` ，直接传递 ``args`` 和 "
"``kws`` 。默认情况下， ``sys.breakpointhook()`` 调用 :func:`pdb.set_trace()` "
"且没有参数。在这种情况下，它纯粹是一个便利函数，因此您不必显式导入 :mod:`pdb` 且键入尽可能少的代码即可进入调试器。但是， "
":func:`sys.breakpointhook` 可以设置为其他一些函数并被 :func:`breakpoint` "
"自动调用，以允许进入你想用的调试器。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:136
msgid ""
"Return a new array of bytes.  The :class:`bytearray` class is a mutable "
"sequence of integers in the range 0 <= x < 256.  It has most of the usual "
"methods of mutable sequences, described in :ref:`typesseq-mutable`, as well "
"as most methods that the :class:`bytes` type has, see :ref:`bytes-methods`."
msgstr ""
"返回一个新的 bytes 数组。 :class:`bytearray` 类是一个可变序列，包含范围为 0 <= x < 256 "
"的整数。它有可变序列大部分常见的方法，见 :ref:`typesseq-mutable` 的描述；同时有 :class:`bytes` "
"类型的大部分方法，参见 :ref:`bytes-methods`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:141
msgid ""
"The optional *source* parameter can be used to initialize the array in a few"
" different ways:"
msgstr "可选形参 *source* 可以用不同的方式来初始化数组："

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:144
msgid ""
"If it is a *string*, you must also give the *encoding* (and optionally, "
"*errors*) parameters; :func:`bytearray` then converts the string to bytes "
"using :meth:`str.encode`."
msgstr ""
"如果是一个 *string*，您必须提供 *encoding* 参数（*errors* 参数仍是可选的）；:func:`bytearray` 会使用 "
":meth:`str.encode` 方法来将 string 转变成 bytes。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:148
msgid ""
"If it is an *integer*, the array will have that size and will be initialized"
" with null bytes."
msgstr "如果是一个 *integer*，会初始化大小为该数字的数组，并使用 null 字节填充。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:151
msgid ""
"If it is an object conforming to the *buffer* interface, a read-only buffer "
"of the object will be used to initialize the bytes array."
msgstr "如果是一个符合 *buffer* 接口的对象，该对象的只读 buffer 会用来初始化字节数组。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:154
msgid ""
"If it is an *iterable*, it must be an iterable of integers in the range ``0 "
"<= x < 256``, which are used as the initial contents of the array."
msgstr "如果是一个 *iterable* 可迭代对象，它的元素的范围必须是 ``0 <= x < 256`` 的整数，它会被用作数组的初始内容。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:157
msgid "Without an argument, an array of size 0 is created."
msgstr "如果没有实参，则创建大小为 0 的数组。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:159
msgid "See also :ref:`binaryseq` and :ref:`typebytearray`."
msgstr "另见 :ref:`binaryseq` 和 :ref:`typebytearray`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:166
msgid ""
"Return a new \"bytes\" object, which is an immutable sequence of integers in"
" the range ``0 <= x < 256``.  :class:`bytes` is an immutable version of "
":class:`bytearray` -- it has the same non-mutating methods and the same "
"indexing and slicing behavior."
msgstr ""
"返回一个新的“bytes”对象， 是一个不可变序列，包含范围为 ``0 <= x < 256`` 的整数。:class:`bytes` 是 "
":class:`bytearray` 的不可变版本 - 它有其中不改变序列的方法和相同的索引、切片操作。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:171
msgid ""
"Accordingly, constructor arguments are interpreted as for :func:`bytearray`."
msgstr "因此，构造函数的实参和 :func:`bytearray` 相同。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:173
msgid "Bytes objects can also be created with literals, see :ref:`strings`."
msgstr "字节对象还可以用字面值创建，参见 :ref:`strings`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:175
msgid "See also :ref:`binaryseq`, :ref:`typebytes`, and :ref:`bytes-methods`."
msgstr "另见 :ref:`binaryseq`，:ref:`typebytes` 和 :ref:`bytes-methods`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:180
msgid ""
"Return :const:`True` if the *object* argument appears callable, "
":const:`False` if not.  If this returns ``True``, it is still possible that "
"a call fails, but if it is ``False``, calling *object* will never succeed. "
"Note that classes are callable (calling a class returns a new instance); "
"instances are callable if their class has a :meth:`__call__` method."
msgstr ""
"如果参数 *object* 是可调用的就返回 :const:`True`，否则返回 :const:`False`。 如果返回 "
"``True``，调用仍可能失败，但如果返回 ``False``，则调用 *object* 将肯定不会成功。 "
"请注意类是可调用的（调用类将返回一个新的实例）；如果实例所属的类有 :meth:`__call__` 则它就是可调用的。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:186
msgid ""
"This function was first removed in Python 3.0 and then brought back in "
"Python 3.2."
msgstr "这个函数一开始在 Python 3.0 被移除了，但在 Python 3.2 被重新加入。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:193
msgid ""
"Return the string representing a character whose Unicode code point is the "
"integer *i*.  For example, ``chr(97)`` returns the string ``'a'``, while "
"``chr(8364)`` returns the string ``'€'``. This is the inverse of "
":func:`ord`."
msgstr ""
"返回 Unicode 码位为整数 *i* 的字符的字符串格式。例如，``chr(97)`` 返回字符串 ``'a'``，``chr(8364)`` "
"返回字符串 ``'€'``。这是 :func:`ord` 的逆函数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:197
msgid ""
"The valid range for the argument is from 0 through 1,114,111 (0x10FFFF in "
"base 16).  :exc:`ValueError` will be raised if *i* is outside that range."
msgstr ""
"实参的合法范围是 0 到 1,114,111（16 进制表示是 0x10FFFF）。如果 *i* 超过这个范围，会触发 "
":exc:`ValueError` 异常。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:203
msgid "Transform a method into a class method."
msgstr "把一个方法封装成类方法。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:205
msgid ""
"A class method receives the class as implicit first argument, just like an "
"instance method receives the instance. To declare a class method, use this "
"idiom::"
msgstr "一个类方法把类自己作为第一个实参，就像一个实例方法把实例自己作为第一个实参。请用以下习惯来声明类方法::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:213
msgid ""
"The ``@classmethod`` form is a function :term:`decorator` -- see "
":ref:`function` for details."
msgstr ""
"``@classmethod`` 这样的形式称为函数的 :term:`decorator` -- 详情参阅 :ref:`function`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:216
msgid ""
"A class method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``).  The instance is ignored except for its "
"class. If a class method is called for a derived class, the derived class "
"object is passed as the implied first argument."
msgstr ""
"类方法的调用可以在类上进行 (例如 ``C.f()``) 也可以在实例上进行 (例如 ``C().f()``)。 其所属类以外的类实例会被忽略。 "
"如果类方法在其所属类的派生类上调用，则该派生类对象会被作为隐含的第一个参数被传入。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:221
msgid ""
"Class methods are different than C++ or Java static methods. If you want "
"those, see :func:`staticmethod`."
msgstr "类方法与 C++ 或 Java 中的静态方法不同。 如果你需要后者，请参阅 :func:`staticmethod`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:224
msgid "For more information on class methods, see :ref:`types`."
msgstr "想了解更多有关类方法的信息，请参阅 :ref:`types` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:229
msgid ""
"Compile the *source* into a code or AST object.  Code objects can be "
"executed by :func:`exec` or :func:`eval`.  *source* can either be a normal "
"string, a byte string, or an AST object.  Refer to the :mod:`ast` module "
"documentation for information on how to work with AST objects."
msgstr ""
"将 *source* 编译成代码或 AST 对象。代码对象可以被 :func:`exec` 或 :func:`eval` 执行。*source* "
"可以是常规的字符串、字节字符串，或者 AST 对象。参见 :mod:`ast` 模块的文档了解如何使用 AST 对象。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:234
msgid ""
"The *filename* argument should give the file from which the code was read; "
"pass some recognizable value if it wasn't read from a file (``'<string>'`` "
"is commonly used)."
msgstr ""
"*filename* 实参需要是代码读取的文件名；如果代码不需要从文件中读取，可以传入一些可辨识的值（经常会使用 ``'<string>'``）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:238
msgid ""
"The *mode* argument specifies what kind of code must be compiled; it can be "
"``'exec'`` if *source* consists of a sequence of statements, ``'eval'`` if "
"it consists of a single expression, or ``'single'`` if it consists of a "
"single interactive statement (in the latter case, expression statements that"
" evaluate to something other than ``None`` will be printed)."
msgstr ""
"*mode* 实参指定了编译代码必须用的模式。如果 *source* 是语句序列，可以是 ``'exec'``；如果是单一表达式，可以是 "
"``'eval'``；如果是单个交互式语句，可以是 ``'single'``。（在最后一种情况下，如果表达式执行结果不是 ``None`` "
"将会被打印出来。）"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:244
msgid ""
"The optional arguments *flags* and *dont_inherit* control which :ref:`future"
" statements <future>` affect the compilation of *source*.  If neither is "
"present (or both are zero) the code is compiled with those future statements"
" that are in effect in the code that is calling :func:`compile`.  If the "
"*flags* argument is given and *dont_inherit* is not (or is zero) then the "
"future statements specified by the *flags* argument are used in addition to "
"those that would be used anyway. If *dont_inherit* is a non-zero integer "
"then the *flags* argument is it -- the future statements in effect around "
"the call to compile are ignored."
msgstr ""
"可选参数 *flags* 和 *dont_inherit* 控制在编译 *source* 时要用到哪个 :ref:`future 语句 "
"<future>`。 如果两者都未提供（或都为零）则会使用调用 :func:`compile` 的代码中有效的 future 语句来编译代码。 "
"如果给出了 *flags* 参数但没有 *dont_inherit* (或是为零) 则 *flags* 参数所指定的 以及那些无论如何都有效的 "
"future 语句会被使用。 如果 *dont_inherit* 为一个非零整数，则只使用 *flags* 参数 -- 在调用外围有效的 future "
"语句将被忽略。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:254
msgid ""
"Future statements are specified by bits which can be bitwise ORed together "
"to specify multiple statements.  The bitfield required to specify a given "
"feature can be found as the :attr:`~__future__._Feature.compiler_flag` "
"attribute on the :class:`~__future__._Feature` instance in the "
":mod:`__future__` module."
msgstr ""
"Future 语句使用比特位来指定，多个语句可以通过按位或来指定。具体特性的比特位可以通过 :mod:`__future__`  模块中的 "
":class:`~__future__._Feature` 类的实例的 "
":attr:`~__future__._Feature.compiler_flag` 属性来获得。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:259
msgid ""
"The argument *optimize* specifies the optimization level of the compiler; "
"the default value of ``-1`` selects the optimization level of the "
"interpreter as given by :option:`-O` options.  Explicit levels are ``0`` (no"
" optimization; ``__debug__`` is true), ``1`` (asserts are removed, "
"``__debug__`` is false) or ``2`` (docstrings are removed too)."
msgstr ""
"*optimize* 实参指定编译器的优化级别；默认值 ``-1``  选择与解释器的 :option:`-O` 选项相同的优化级别。显式级别为 "
"``0`` （没有优化；``__debug__``  为真）、``1`` （断言被删除， ``__debug__`` 为假）或 ``2`` "
"（文档字符串也被删除）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:265
msgid ""
"This function raises :exc:`SyntaxError` if the compiled source is invalid, "
"and :exc:`ValueError` if the source contains null bytes."
msgstr ""
"如果编译的源码不合法，此函数会触发 :exc:`SyntaxError` 异常；如果源码包含 null 字节，则会触发 "
":exc:`ValueError` 异常。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:268
msgid ""
"If you want to parse Python code into its AST representation, see "
":func:`ast.parse`."
msgstr "如果您想分析 Python 代码的 AST 表示，请参阅 :func:`ast.parse`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:273
msgid ""
"When compiling a string with multi-line code in ``'single'`` or ``'eval'`` "
"mode, input must be terminated by at least one newline character.  This is "
"to facilitate detection of incomplete and complete statements in the "
":mod:`code` module."
msgstr ""
"在 ``'single'``  或 ``'eval'`` 模式编译多行代码字符串时，输入必须以至少一个换行符结尾。 这使 :mod:`code` "
"模块更容易检测语句的完整性。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:280
msgid ""
"It is possible to crash the Python interpreter with a sufficiently "
"large/complex string when compiling to an AST object due to stack depth "
"limitations in Python's AST compiler."
msgstr "在将足够大或者足够复杂的字符串编译成 AST 对象时，Python 解释器有可以因为 Python AST 编译器的栈深度限制而崩溃。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:284
msgid ""
"Allowed use of Windows and Mac newlines.  Also input in ``'exec'`` mode does"
" not have to end in a newline anymore.  Added the *optimize* parameter."
msgstr "允许使用 Windows 和 Mac 的换行符。在 ``'exec'`` 模式不再需要以换行符结尾。增加了  *optimize* 形参。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:288
msgid ""
"Previously, :exc:`TypeError` was raised when null bytes were encountered in "
"*source*."
msgstr "之前 *source* 中包含 null 字节的话会触发 :exc:`TypeError` 异常。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:295
msgid ""
"Return a complex number with the value *real* + *imag*\\*1j or convert a "
"string or number to a complex number.  If the first parameter is a string, "
"it will be interpreted as a complex number and the function must be called "
"without a second parameter.  The second parameter can never be a string. "
"Each argument may be any numeric type (including complex).  If *imag* is "
"omitted, it defaults to zero and the constructor serves as a numeric "
"conversion like :class:`int` and :class:`float`.  If both arguments are "
"omitted, returns ``0j``."
msgstr ""
"返回值为 *real* + *imag*\\*1j "
"的复数，或将字符串或数字转换为复数。如果第一个形参是字符串，则它被解释为一个复数，并且函数调用时必须没有第二个形参。第二个形参不能是字符串。每个实参都可以是任意的数值类型（包括复数）。如果省略了"
" *imag*，则默认值为零，构造函数会像 :class:`int` 和 :class:`float` 一样进行数值转换。如果两个实参都省略，则返回 "
"``0j``。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:306
msgid ""
"When converting from a string, the string must not contain whitespace around"
" the central ``+`` or ``-`` operator.  For example, ``complex('1+2j')`` is "
"fine, but ``complex('1 + 2j')`` raises :exc:`ValueError`."
msgstr ""
"当从字符串转换时，字符串在 ``+`` 或 ``-`` 的周围必须不能有空格。例如 ``complex('1+2j')`` 是合法的，但 "
"``complex('1 + 2j')`` 会触发 :exc:`ValueError` 异常。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:311
msgid "The complex type is described in :ref:`typesnumeric`."
msgstr ":ref:`typesnumeric` 描述了复数类型。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:313
#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:578
#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:771
msgid "Grouping digits with underscores as in code literals is allowed."
msgstr "您可以使用下划线将代码文字中的数字进行分组。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:319
msgid ""
"This is a relative of :func:`setattr`.  The arguments are an object and a "
"string.  The string must be the name of one of the object's attributes.  The"
" function deletes the named attribute, provided the object allows it.  For "
"example, ``delattr(x, 'foobar')`` is equivalent to ``del x.foobar``."
msgstr ""
":func:`setattr` 相关的函数。实参是一个对象和一个字符串。该字符串必须是对象的某个属性。如果对象允许，该函数将删除指定的属性。例如 "
"``delattr(x, 'foobar')``  等价于 ``del x.foobar`` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:331
msgid ""
"Create a new dictionary.  The :class:`dict` object is the dictionary class. "
"See :class:`dict` and :ref:`typesmapping` for documentation about this "
"class."
msgstr ""
"创建一个新的字典。:class:`dict` 对象是一个字典类。参见 :class:`dict` 和 :ref:`typesmapping` "
"了解这个类。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:334
msgid ""
"For other containers see the built-in :class:`list`, :class:`set`, and "
":class:`tuple` classes, as well as the :mod:`collections` module."
msgstr ""
"其他容器类型，请参见内置的 :class:`list`、:class:`set` 和 :class:`tuple` 类，以及 "
":mod:`collections` 模块。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:340
msgid ""
"Without arguments, return the list of names in the current local scope.  "
"With an argument, attempt to return a list of valid attributes for that "
"object."
msgstr "如果没有实参，则返回当前本地作用域中的名称列表。如果有实参，它会尝试返回该对象的有效属性列表。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:343
msgid ""
"If the object has a method named :meth:`__dir__`, this method will be called"
" and must return the list of attributes. This allows objects that implement "
"a custom :func:`__getattr__` or :func:`__getattribute__` function to "
"customize the way :func:`dir` reports their attributes."
msgstr ""
"如果对象有一个名为 :meth:`__dir__` 的方法，那么该方法将被调用，并且必须返回一个属性列表。这允许实现自定义 "
":func:`__getattr__` 或 :func:`__getattribute__` 函数的对象能够自定义 :func:`dir` "
"来报告它们的属性。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:348
msgid ""
"If the object does not provide :meth:`__dir__`, the function tries its best "
"to gather information from the object's :attr:`~object.__dict__` attribute, "
"if defined, and from its type object.  The resulting list is not necessarily"
" complete, and may be inaccurate when the object has a custom "
":func:`__getattr__`."
msgstr ""
"如果对象不提供 :meth:`__dir__`，这个函数会尝试从对象已定义的 :attr:`~object.__dict__` "
"属性和类型对象收集信息。结果列表并不总是完整的，如果对象有自定义 :func:`__getattr__`，那结果可能不准确。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:353
msgid ""
"The default :func:`dir` mechanism behaves differently with different types "
"of objects, as it attempts to produce the most relevant, rather than "
"complete, information:"
msgstr "默认的 :func:`dir` 机制对不同类型的对象行为不同，它会试图返回最相关而不是最全的信息："

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:357
msgid ""
"If the object is a module object, the list contains the names of the "
"module's attributes."
msgstr "如果对象是模块对象，则列表包含模块的属性名称。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:360
msgid ""
"If the object is a type or class object, the list contains the names of its "
"attributes, and recursively of the attributes of its bases."
msgstr "如果对象是类型或类对象，则列表包含它们的属性名称，并且递归查找所有基类的属性。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:363
msgid ""
"Otherwise, the list contains the object's attributes' names, the names of "
"its class's attributes, and recursively of the attributes of its class's "
"base classes."
msgstr "否则，列表包含对象的属性名称，它的类属性名称，并且递归查找它的类的所有基类的属性。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:367
msgid "The resulting list is sorted alphabetically.  For example:"
msgstr "返回的列表按字母表排序。例如："

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:386
msgid ""
"Because :func:`dir` is supplied primarily as a convenience for use at an "
"interactive prompt, it tries to supply an interesting set of names more than"
" it tries to supply a rigorously or consistently defined set of names, and "
"its detailed behavior may change across releases.  For example, metaclass "
"attributes are not in the result list when the argument is a class."
msgstr ""
"因为 :func:`dir` "
"主要是为了便于在交互式时使用，所以它会试图返回人们感兴趣的名字集合，而不是试图保证结果的严格性或一致性，它具体的行为也可能在不同版本之间改变。例如，当实参是一个类时，metaclass"
" 的属性不包含在结果列表中。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:396
msgid ""
"Take two (non complex) numbers as arguments and return a pair of numbers "
"consisting of their quotient and remainder when using integer division.  "
"With mixed operand types, the rules for binary arithmetic operators apply.  "
"For integers, the result is the same as ``(a // b, a % b)``. For floating "
"point numbers the result is ``(q, a % b)``, where *q* is usually "
"``math.floor(a / b)`` but may be 1 less than that.  In any case ``q * b + a "
"% b`` is very close to *a*, if ``a % b`` is non-zero it has the same sign as"
" *b*, and ``0 <= abs(a % b) < abs(b)``."
msgstr ""
"它将两个（非复数）数字作为实参，并在执行整数除法时返回一对商和余数。对于混合操作数类型，适用双目算术运算符的规则。对于整数，结果和 ``(a // b,"
" a % b)`` 一致。对于浮点数，结果是 ``(q, a % b)`` ，*q* 通常是 ``math.floor(a / b)`` 但可能会比 1"
" 小。在任何情况下， ``q * b + a % b`` 和  *a* 基本相等；如果 ``a % b`` 非零，它的符号和 *b* 一样，并且 ``0"
" <= abs(a % b) < abs(b)`` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:408
msgid ""
"Return an enumerate object. *iterable* must be a sequence, an "
":term:`iterator`, or some other object which supports iteration. The "
":meth:`~iterator.__next__` method of the iterator returned by "
":func:`enumerate` returns a tuple containing a count (from *start* which "
"defaults to 0) and the values obtained from iterating over *iterable*."
msgstr ""
"返回一个枚举对象。*iterable* 必须是一个序列，或 :term:`iterator`，或其他支持迭代的对象。 :func:`enumerate`"
" 返回的迭代器的 :meth:`~iterator.__next__` 方法返回一个元组，里面包含一个计数值（从 *start* 开始，默认为 "
"0）和通过迭代 *iterable* 获得的值。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:420
msgid "Equivalent to::"
msgstr "等价于::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:431
msgid ""
"The arguments are a string and optional globals and locals.  If provided, "
"*globals* must be a dictionary.  If provided, *locals* can be any mapping "
"object."
msgstr ""
"实参是一个字符串，以及可选的 globals 和 locals。*globals* 实参必须是一个字典。*locals* 可以是任何映射对象。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:435
msgid ""
"The *expression* argument is parsed and evaluated as a Python expression "
"(technically speaking, a condition list) using the *globals* and *locals* "
"dictionaries as global and local namespace.  If the *globals* dictionary is "
"present and does not contain a value for the key ``__builtins__``, a "
"reference to the dictionary of the built-in module :mod:`builtins` is "
"inserted under that key before *expression* is parsed. This means that "
"*expression* normally has full access to the standard :mod:`builtins` module"
" and restricted environments are propagated.  If the *locals* dictionary is "
"omitted it defaults to the *globals* dictionary.  If both dictionaries are "
"omitted, the expression is executed in the environment where :func:`eval` is"
" called.  The return value is the result of the evaluated expression. Syntax"
" errors are reported as exceptions.  Example:"
msgstr ""
"*expression* 参数会作为一个 Python 表达式（从技术上说是一个条件列表）被解析并求值，使用 *globals* 和 *locals* "
"字典作为全局和局部命名空间。 如果 *globals* 字典存在且不包含以 ``__builtins__`` 为键的值，则会在解析 "
"*expression* 之前插入以此为键的对内置模块 :mod:`builtins` 的字典的引用。 这意味着 *expression* "
"通常具有对标准 :mod:`builtins` 模块的完全访问权限且受限的环境会被传播。 如果省略 *locals* 字典则其默认值为 "
"*globals* 字典。 如果两个字典同时省略，表达式会在 :func:`eval` 被调用的环境中执行。 返回值为表达式求值的结果。 "
"语法错误将作为异常被报告。 例如:"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:452
msgid ""
"This function can also be used to execute arbitrary code objects (such as "
"those created by :func:`compile`).  In this case pass a code object instead "
"of a string.  If the code object has been compiled with ``'exec'`` as the "
"*mode* argument, :func:`eval`\\'s return value will be ``None``."
msgstr ""
"这个函数也可以用来执行任何代码对象（如 :func:`compile`  创建的）。这种情况下，参数是代码对象，而不是字符串。如果编译该对象时的 "
"*mode* 实参是 ``'exec'`` 那么 :func:`eval` 返回值为 ``None`` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:457
msgid ""
"Hints: dynamic execution of statements is supported by the :func:`exec` "
"function.  The :func:`globals` and :func:`locals` functions returns the "
"current global and local dictionary, respectively, which may be useful to "
"pass around for use by :func:`eval` or :func:`exec`."
msgstr ""
"提示： :func:`exec` 函数支持动态执行语句。 :func:`globals` 和 :func:`locals` "
"函数各自返回当前的全局和本地字典，因此您可以将它们传递给 :func:`eval` 或 :func:`exec` 来使用。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:462
msgid ""
"See :func:`ast.literal_eval` for a function that can safely evaluate strings"
" with expressions containing only literals."
msgstr "另外可以参阅 :func:`ast.literal_eval`，该函数可以安全执行仅包含文字的表达式字符串。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:469
msgid ""
"This function supports dynamic execution of Python code. *object* must be "
"either a string or a code object.  If it is a string, the string is parsed "
"as a suite of Python statements which is then executed (unless a syntax "
"error occurs). [#]_ If it is a code object, it is simply executed.  In all "
"cases, the code that's executed is expected to be valid as file input (see "
"the section \"File input\" in the Reference Manual). Be aware that the "
":keyword:`return` and :keyword:`yield` statements may not be used outside of"
" function definitions even within the context of code passed to the "
":func:`exec` function. The return value is ``None``."
msgstr ""
"这个函数支持动态执行 Python 代码。*object* 必须是字符串或者代码对象。如果是字符串，那么该字符串将被解析为一系列 Python "
"语句并执行（除非发生语法错误）。[#]_ "
"如果是代码对象，它将被直接执行。在任何情况下，被执行的代码都需要和文件输入一样是有效的（见参考手册中关于文件输入的章节）。请注意即使在传递给 "
":func:`exec` 函数的代码的上下文中，:keyword:`return` 和 :keyword:`yield` "
"语句也不能在函数定义之外使用。该函数返回值是 ``None`` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:479
msgid ""
"In all cases, if the optional parts are omitted, the code is executed in the"
" current scope.  If only *globals* is provided, it must be a dictionary, "
"which will be used for both the global and the local variables.  If "
"*globals* and *locals* are given, they are used for the global and local "
"variables, respectively.  If provided, *locals* can be any mapping object.  "
"Remember that at module level, globals and locals are the same dictionary. "
"If exec gets two separate objects as *globals* and *locals*, the code will "
"be executed as if it were embedded in a class definition."
msgstr ""
"无论哪种情况，如果省略了可选参数，代码将在当前范围内执行。如果提供了 *globals* "
"参数，就必须是字典类型，而且会被用作全局和本地变量。如果同时提供了 *globals* 和 *locals* "
"参数，它们分别被用作全局和本地变量。如果提供了 *locals* 参数，则它可以是任何映射型的对象。请记住在模块层级，全局和本地变量是相同的字典。如果 "
"exec 有两个不同的 *globals* 和 *locals* 对象，代码就像嵌入在类定义中一样执行。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:488
msgid ""
"If the *globals* dictionary does not contain a value for the key "
"``__builtins__``, a reference to the dictionary of the built-in module "
":mod:`builtins` is inserted under that key.  That way you can control what "
"builtins are available to the executed code by inserting your own "
"``__builtins__`` dictionary into *globals* before passing it to "
":func:`exec`."
msgstr ""
"如果 *globals* 字典不包含 ``__builtins__`` 键值，则将为该键插入对内建 :mod:`builtins` "
"模块字典的引用。因此，在将执行的代码传递给 :func:`exec` 之前，可以通过将自己的 ``__builtins__`` 字典插入到 "
"*globals* 中来控制可以使用哪些内置代码。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:496
msgid ""
"The built-in functions :func:`globals` and :func:`locals` return the current"
" global and local dictionary, respectively, which may be useful to pass "
"around for use as the second and third argument to :func:`exec`."
msgstr ""
"内置 :func:`globals` 和 :func:`locals` 函数各自返回当前的全局和本地字典，因此可以将它们传递给 :func:`exec`"
" 的第二个和第三个实参。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:502
msgid ""
"The default *locals* act as described for function :func:`locals` below: "
"modifications to the default *locals* dictionary should not be attempted. "
"Pass an explicit *locals* dictionary if you need to see effects of the code "
"on *locals* after function :func:`exec` returns."
msgstr ""
"默认情况下，*locals* 的行为如下面 :func:`locals` 函数描述的一样：不要试图改变默认的 *locals* 字典。如果您想在 "
":func:`exec` 函数返回时知道代码对 *locals* 的变动，请明确地传递 *locals* 字典。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:510
msgid ""
"Construct an iterator from those elements of *iterable* for which *function*"
" returns true.  *iterable* may be either a sequence, a container which "
"supports iteration, or an iterator.  If *function* is ``None``, the identity"
" function is assumed, that is, all elements of *iterable* that are false are"
" removed."
msgstr ""
"用 *iterable*  中函数 *function* 返回真的那些元素，构建一个新的迭代器。*iterable* "
"可以是一个序列，一个支持迭代的容器，或一个迭代器。如果 *function* 是 ``None`` ，则会假设它是一个身份函数，即 *iterable*"
" 中所有返回假的元素会被移除。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:516
msgid ""
"Note that ``filter(function, iterable)`` is equivalent to the generator "
"expression ``(item for item in iterable if function(item))`` if function is "
"not ``None`` and ``(item for item in iterable if item)`` if function is "
"``None``."
msgstr ""
"请注意， ``filter(function, iterable)`` 相当于一个生成器表达式，当 function 不是 ``None`` 的时候为 "
"``(item for item in iterable if function(item))``；function 是 ``None`` 的时候为 "
"``(item for item in iterable if item)`` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:521
msgid ""
"See :func:`itertools.filterfalse` for the complementary function that "
"returns elements of *iterable* for which *function* returns false."
msgstr ""
"请参阅 :func:`itertools.filterfalse` 了解，只有 *function* 返回 false 时才选取 *iterable* "
"中元素的补充函数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:531
msgid ""
"Return a floating point number constructed from a number or string *x*."
msgstr "返回从数字或字符串 *x* 生成的浮点数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:533
msgid ""
"If the argument is a string, it should contain a decimal number, optionally "
"preceded by a sign, and optionally embedded in whitespace.  The optional "
"sign may be ``'+'`` or ``'-'``; a ``'+'`` sign has no effect on the value "
"produced.  The argument may also be a string representing a NaN (not-a-"
"number), or a positive or negative infinity.  More precisely, the input must"
" conform to the following grammar after leading and trailing whitespace "
"characters are removed:"
msgstr ""
"如果实参是字符串，则它必须是包含十进制数字的字符串，字符串前面可以有符号，之前也可以有空格。可选的符号有 ``'+'`` 和 ``'-'`` ； "
"``'+'`` 对创建的值没有影响。实参也可以是 NaN（非数字）、正负无穷大的字符串。确切地说，除去首尾的空格后，输入必须遵循以下语法："

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:548
msgid ""
"Here ``floatnumber`` is the form of a Python floating-point literal, "
"described in :ref:`floating`.  Case is not significant, so, for example, "
"\"inf\", \"Inf\", \"INFINITY\" and \"iNfINity\" are all acceptable spellings"
" for positive infinity."
msgstr ""
"这里， ``floatnumber`` 是 Python 浮点数的字符串形式，详见 "
":ref:`floating`。字母大小写都可以，例如，“inf”、“Inf”、“INFINITY”、“iNfINity” 都可以表示正无穷大。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:553
msgid ""
"Otherwise, if the argument is an integer or a floating point number, a "
"floating point number with the same value (within Python's floating point "
"precision) is returned.  If the argument is outside the range of a Python "
"float, an :exc:`OverflowError` will be raised."
msgstr ""
"另一方面，如果实参是整数或浮点数，则返回具有相同值（在 Python 浮点精度范围内）的浮点数。如果实参在 Python 浮点精度范围外，则会触发 "
":exc:`OverflowError`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:558
msgid ""
"For a general Python object ``x``, ``float(x)`` delegates to "
"``x.__float__()``."
msgstr "对于一般的 Python 对象 ``x`` ， ``float(x)`` 指派给 ``x.__float__()`` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:561
msgid "If no argument is given, ``0.0`` is returned."
msgstr "如果没有实参，则返回 ``0.0`` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:563
msgid "Examples::"
msgstr "示例::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:576
msgid "The float type is described in :ref:`typesnumeric`."
msgstr ":ref:`typesnumeric` 描述了浮点类型。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:591
msgid ""
"Convert a *value* to a \"formatted\" representation, as controlled by "
"*format_spec*.  The interpretation of *format_spec* will depend on the type "
"of the *value* argument, however there is a standard formatting syntax that "
"is used by most built-in types: :ref:`formatspec`."
msgstr ""
"将 *value* 转换为 *format_spec* 控制的“格式化”表示。*format_spec* 的解释取决于 *value* "
"实参的类型，但是大多数内置类型使用标准格式化语法：:ref:`formatspec`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:596
msgid ""
"The default *format_spec* is an empty string which usually gives the same "
"effect as calling :func:`str(value) <str>`."
msgstr "默认的 *format_spec* 是一个空字符串，它通常给出与调用 :func:`str(value)<str>` 相同的结果。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:599
msgid ""
"A call to ``format(value, format_spec)`` is translated to "
"``type(value).__format__(value, format_spec)`` which bypasses the instance "
"dictionary when searching for the value's :meth:`__format__` method.  A "
":exc:`TypeError` exception is raised if the method search reaches "
":mod:`object` and the *format_spec* is non-empty, or if either the "
"*format_spec* or the return value are not strings."
msgstr ""
"调用 ``format(value, format_spec)`` 会转换成  ``type(value).__format__(value, "
"format_spec)`` ，所以实例字典中的 :meth:`__format__` 方法将不会调用。如果方法搜索回退到 :mod:`object` "
"类但  *format_spec* 不为空，或者如果 *format_spec* 或返回值不是字符串，则会触发 :exc:`TypeError` 异常。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:606
msgid ""
"``object().__format__(format_spec)`` raises :exc:`TypeError` if "
"*format_spec* is not an empty string."
msgstr ""
"当 *format_spec* 不是空字符串时， ``object().__format__(format_spec)`` 会触发  "
":exc:`TypeError`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:615
msgid ""
"Return a new :class:`frozenset` object, optionally with elements taken from "
"*iterable*.  ``frozenset`` is a built-in class.  See :class:`frozenset` and "
":ref:`types-set` for documentation about this class."
msgstr ""
"返回一个新的 :class:`frozenset` 对象，它包含可选参数 *iterable* 中的元素。 ``frozenset`` "
"是一个内置的类。有关此类的文档，请参阅 :class:`frozenset` 和 :ref:`types-set`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:619
msgid ""
"For other containers see the built-in :class:`set`, :class:`list`, "
":class:`tuple`, and :class:`dict` classes, as well as the :mod:`collections`"
" module."
msgstr ""
"请参阅内建的 :class:`set`、:class:`list`、:class:`tuple` 和 :class:`dict` 类，以及 "
":mod:`collections` 模块来了解其它的容器。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:626
msgid ""
"Return the value of the named attribute of *object*.  *name* must be a "
"string. If the string is the name of one of the object's attributes, the "
"result is the value of that attribute.  For example, ``getattr(x, "
"'foobar')`` is equivalent to ``x.foobar``.  If the named attribute does not "
"exist, *default* is returned if provided, otherwise :exc:`AttributeError` is"
" raised."
msgstr ""
"返回对象命名属性的值。*name* 必须是字符串。如果该字符串是对象的属性之一，则返回该属性的值。例如， ``getattr(x, "
"'foobar')`` 等同于 ``x.foobar``。如果指定的属性不存在，且提供了 *default* 值，则返回它，否则触发 "
":exc:`AttributeError`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:635
msgid ""
"Return a dictionary representing the current global symbol table. This is "
"always the dictionary of the current module (inside a function or method, "
"this is the module where it is defined, not the module from which it is "
"called)."
msgstr "返回表示当前全局符号表的字典。这总是当前模块的字典（在函数或方法中，不是调用它的模块，而是定义它的模块）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:642
msgid ""
"The arguments are an object and a string.  The result is ``True`` if the "
"string is the name of one of the object's attributes, ``False`` if not. "
"(This is implemented by calling ``getattr(object, name)`` and seeing whether"
" it raises an :exc:`AttributeError` or not.)"
msgstr ""
"该实参是一个对象和一个字符串。如果字符串是对象的属性之一的名称，则返回 ``True``，否则返回 ``False``。（此功能是通过调用 "
"``getattr(object, name)`` 看是否有 :exc:`AttributeError` 异常来实现的。）"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:650
msgid ""
"Return the hash value of the object (if it has one).  Hash values are "
"integers.  They are used to quickly compare dictionary keys during a "
"dictionary lookup.  Numeric values that compare equal have the same hash "
"value (even if they are of different types, as is the case for 1 and 1.0)."
msgstr ""
"返回该对象的哈希值（如果它有的话）。哈希值是整数。它们在字典查找元素时用来快速比较字典的键。相同大小的数字变量有相同的哈希值（即使它们类型不同，如 1 "
"和 1.0）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:657
msgid ""
"For objects with custom :meth:`__hash__` methods, note that :func:`hash` "
"truncates the return value based on the bit width of the host machine. See "
":meth:`__hash__` for details."
msgstr ""
"如果对象实现了自己的 :meth:`__hash__` 方法，请注意，:func:`hash` 根据机器的字长来截断返回值。另请参阅 "
":meth:`__hash__`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:663
msgid ""
"Invoke the built-in help system.  (This function is intended for interactive"
" use.)  If no argument is given, the interactive help system starts on the "
"interpreter console.  If the argument is a string, then the string is looked"
" up as the name of a module, function, class, method, keyword, or "
"documentation topic, and a help page is printed on the console.  If the "
"argument is any other kind of object, a help page on the object is "
"generated."
msgstr ""
"启动内置的帮助系统（此函数主要在交互式中使用）。如果没有实参，解释器控制台里会启动交互式帮助系统。如果实参是一个字符串，则在模块、函数、类、方法、关键字或文档主题中搜索该字符串，并在控制台上打印帮助信息。如果实参是其他任意对象，则会生成该对象的帮助页。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:670
msgid ""
"Note that if a slash(/) appears in the parameter list of a function, when "
"invoking :func:`help`, it means that the parameters prior to the slash are "
"positional-only. For more info, see :ref:`the FAQ entry on positional-only "
"parameters <faq-positional-only-arguments>`."
msgstr ""
"请注意如果在函数的形参列表中出现了斜杠 (/)，则它在发起调用 :func:`help` 的时候意味着斜杠之前的均为仅限位置形参。 更多相关信息，请参阅"
" :ref:`有关仅限位置形参的 FAQ 条目 <faq-positional-only-arguments>`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:675
msgid ""
"This function is added to the built-in namespace by the :mod:`site` module."
msgstr "该函数通过 :mod:`site` 模块加入到内置命名空间。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:677
msgid ""
"Changes to :mod:`pydoc` and :mod:`inspect` mean that the reported signatures"
" for callables are now more comprehensive and consistent."
msgstr ":mod:`pydoc` 和 :mod:`inspect` 的变更使得可调用对象的签名信息更加全面和一致。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:684
msgid ""
"Convert an integer number to a lowercase hexadecimal string prefixed with "
"\"0x\". If *x* is not a Python :class:`int` object, it has to define an "
":meth:`__index__` method that returns an integer. Some examples:"
msgstr ""
"将整数转换为以“0x”为前缀的小写十六进制字符串。如果 *x* 不是 Python :class:`int` 对象，则必须定义返回整数的 "
":meth:`__index__` 方法。一些例子："

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:693
msgid ""
"If you want to convert an integer number to an uppercase or lower "
"hexadecimal string with prefix or not, you can use either of the following "
"ways:"
msgstr "如果要将整数转换为大写或小写的十六进制字符串，并可选择有无“0x”前缀，则可以使用如下方法："

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:705
msgid ""
"See also :func:`int` for converting a hexadecimal string to an integer using"
" a base of 16."
msgstr "另请参阅 :func:`int` 将十六进制字符串转换为以 16 为基数的整数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:710
msgid ""
"To obtain a hexadecimal string representation for a float, use the "
":meth:`float.hex` method."
msgstr "如果要获取浮点数的十六进制字符串形式，请使用 :meth:`float.hex` 方法。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:716
msgid ""
"Return the \"identity\" of an object.  This is an integer which is "
"guaranteed to be unique and constant for this object during its lifetime. "
"Two objects with non-overlapping lifetimes may have the same :func:`id` "
"value."
msgstr ""
"返回对象的“标识值”。该值是一个整数，在此对象的生命周期中保证是唯一且恒定的。两个生命期不重叠的对象可能具有相同的 :func:`id` 值。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:726
msgid ""
"If the *prompt* argument is present, it is written to standard output "
"without a trailing newline.  The function then reads a line from input, "
"converts it to a string (stripping a trailing newline), and returns that.  "
"When EOF is read, :exc:`EOFError` is raised.  Example::"
msgstr ""
"如果存在 *prompt* "
"实参，则将其写入标准输出，末尾不带换行符。接下来，该函数从输入中读取一行，将其转换为字符串（除了末尾的换行符）并返回。当读取到 EOF 时，则触发 "
":exc:`EOFError`。例如::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:736
msgid ""
"If the :mod:`readline` module was loaded, then :func:`input` will use it to "
"provide elaborate line editing and history features."
msgstr "如果加载了 :mod:`readline` 模块，:func:`input` 将使用它来提供复杂的行编辑和历史记录功能。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:743
msgid ""
"Return an integer object constructed from a number or string *x*, or return "
"``0`` if no arguments are given.  If *x* defines :meth:`__int__`, ``int(x)``"
" returns ``x.__int__()``.  If *x* defines :meth:`__trunc__`, it returns "
"``x.__trunc__()``. For floating point numbers, this truncates towards zero."
msgstr ""
"返回一个使用数字或字符串 *x* 生成的整数对象，或者没有实参的时候返回 ``0`` 。如果 *x* 定义了 "
":meth:`__int__`，``int(x)`` 返回 ``x.__int__()`` 。如果 *x* 定义了 "
":meth:`__trunc__`，它返回 ``x.__trunc__()`` 。对于浮点数，它向零舍入。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:749
msgid ""
"If *x* is not a number or if *base* is given, then *x* must be a string, "
":class:`bytes`, or :class:`bytearray` instance representing an :ref:`integer"
" literal <integers>` in radix *base*.  Optionally, the literal can be "
"preceded by ``+`` or ``-`` (with no space in between) and surrounded by "
"whitespace.  A base-n literal consists of the digits 0 to n-1, with ``a`` to"
" ``z`` (or ``A`` to ``Z``) having values 10 to 35.  The default *base* is "
"10. The allowed values are 0 and 2--36. Base-2, -8, and -16 literals can be "
"optionally prefixed with ``0b``/``0B``, ``0o``/``0O``, or ``0x``/``0X``, as "
"with integer literals in code.  Base 0 means to interpret exactly as a code "
"literal, so that the actual base is 2, 8, 10, or 16, and so that "
"``int('010', 0)`` is not legal, while ``int('010')`` is, as well as "
"``int('010', 8)``."
msgstr ""
"如果 *x* 不是数字，或者有 *base* 参数，*x* 必须是字符串、:class:`bytes`、表示进制为 *base* 的 "
":ref:`整数字面值<integers>` 的 :class:`bytearray` 实例。该文字前可以有 ``+`` 或 ``-`` "
"（中间不能有空格），前后可以有空格。一个进制为 n 的数字包含 0 到 n-1 的数，其中 ``a`` 到 ``z`` （或 ``A`` 到 ``Z``"
" ）表示 10 到 35。默认的 *base* 为 10 ，允许的进制有 0、2-36。2、8、16 进制的数字可以在代码中用 "
"``0b``/``0B`` 、 ``0o``/``0O`` 、 ``0x``/``0X`` 前缀来表示。进制为 0 "
"将安照代码的字面量来精确解释，最后的结果会是 2、8、10、16 进制中的一个。所以 ``int('010', 0)`` 是非法的，但 "
"``int('010')`` 和 ``int('010', 8)`` 是合法的。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:762
msgid "The integer type is described in :ref:`typesnumeric`."
msgstr "整数类型定义请参阅 :ref:`typesnumeric` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:764
msgid ""
"If *base* is not an instance of :class:`int` and the *base* object has a "
":meth:`base.__index__ <object.__index__>` method, that method is called to "
"obtain an integer for the base.  Previous versions used :meth:`base.__int__ "
"<object.__int__>` instead of :meth:`base.__index__ <object.__index__>`."
msgstr ""
"如果 *base* 不是 :class:`int` 的实例，但 *base* 对象有 :meth:`base.__index__ "
"<object.__index__>` 方法，则会调用该方法来获取进制数。以前的版本使用 :meth:`base.__int__ "
"<object.__int__>` 而不是 :meth:`base.__index__ <object.__index__>`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:777
msgid ""
":class:`int` string inputs and string representations can be limited to help"
" avoid denial of service attacks. A :exc:`ValueError` is raised when the "
"limit is exceeded while converting a string *x* to an :class:`int` or when "
"converting an :class:`int` into a string would exceed the limit. See the "
":ref:`integer string conversion length limitation <int_max_str_digits>` "
"documentation."
msgstr ""
":class:`int` 字符串输入和字符串表示形式可受到限制以帮助避免拒绝服务攻击。 当将一个字符串 *x* 转换为 :class:`int` "
"或者当将一个 :class:`int` 转换为字符串的操作超出限制则会引发 :exc:`ValueError`。 请参阅 "
":ref:`整数字符串转换长度限制 <int_max_str_digits>` 文档。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:788
msgid ""
"Return ``True`` if the *object* argument is an instance of the *classinfo* "
"argument, or of a (direct, indirect or :term:`virtual <abstract base "
"class>`) subclass thereof.  If *object* is not an object of the given type, "
"the function always returns ``False``. If *classinfo* is a tuple of type "
"objects (or recursively, other such tuples), return ``True`` if *object* is "
"an instance of any of the types. If *classinfo* is not a type or tuple of "
"types and such tuples, a :exc:`TypeError` exception is raised."
msgstr ""
"如果参数 *object* 是参数 *classinfo* 的实例或者是其 (直接、间接或 :term:`虚拟 <abstract base "
"class>`) 子类则返回 ``True``。 如果 *object* 不是给定类型的对象，函数将总是返回 ``False``。 如果 "
"*classinfo* 是类型对象元组（或由其他此类元组递归组成的元组），那么如果 *object* 是其中任何一个类型的实例就返回 ``True``。"
" 如果 *classinfo* 既不是类型，也不是类型元组或类型元组的元组，则将引发 :exc:`TypeError` 异常。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:800
msgid ""
"Return ``True`` if *class* is a subclass (direct, indirect or :term:`virtual"
" <abstract base class>`) of *classinfo*.  A class is considered a subclass "
"of itself. *classinfo* may be a tuple of class objects, in which case every "
"entry in *classinfo* will be checked. In any other case, a :exc:`TypeError` "
"exception is raised."
msgstr ""
"如果 *class* 是 *classinfo* 的 (直接、间接或 :term:`虚拟 <abstract base class>`) 子类则返回 "
"``True``。 类会被视作其自身的子类。 *classinfo* 也以是类对象的元组，在此情况下 *classinfo* 中的每个条目都将被检查。 "
"在任何其他情况下，都将引发 :exc:`TypeError` 异常。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:809
msgid ""
"Return an :term:`iterator` object.  The first argument is interpreted very "
"differently depending on the presence of the second argument. Without a "
"second argument, *object* must be a collection object which supports the "
"iteration protocol (the :meth:`__iter__` method), or it must support the "
"sequence protocol (the :meth:`__getitem__` method with integer arguments "
"starting at ``0``).  If it does not support either of those protocols, "
":exc:`TypeError` is raised. If the second argument, *sentinel*, is given, "
"then *object* must be a callable object.  The iterator created in this case "
"will call *object* with no arguments for each call to its "
":meth:`~iterator.__next__` method; if the value returned is equal to "
"*sentinel*, :exc:`StopIteration` will be raised, otherwise the value will be"
" returned."
msgstr ""
"返回一个 :term:`iterator` 对象。根据是否存在第二个实参，第一个实参的解释是非常不同的。如果没有第二个实参，*object* "
"必须是支持迭代协议（有 :meth:`__iter__` 方法）的集合对象，或必须支持序列协议（有 :meth:`__getitem__` "
"方法，且数字参数从 ``0`` 开始）。如果它不支持这些协议，会触发 :exc:`TypeError`。如果有第二个实参 *sentinel*，那么 "
"*object* 必须是可调用的对象。这种情况下生成的迭代器，每次迭代调用它的 :meth:`~iterator.__next__` "
"方法时都会不带实参地调用 *object*；如果返回的结果是 *sentinel* 则触发 :exc:`StopIteration`，否则返回调用结果。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:822
msgid "See also :ref:`typeiter`."
msgstr "另请参阅 :ref:`typeiter`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:824
msgid ""
"One useful application of the second form of :func:`iter` is to build a "
"block-reader. For example, reading fixed-width blocks from a binary database"
" file until the end of file is reached::"
msgstr "适合 :func:`iter` 的第二种形式的应用之一是构建块读取器。 例如，从二进制数据库文件中读取固定宽度的块，直至到达文件的末尾::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:836
msgid ""
"Return the length (the number of items) of an object.  The argument may be a"
" sequence (such as a string, bytes, tuple, list, or range) or a collection "
"(such as a dictionary, set, or frozen set)."
msgstr ""
"返回对象的长度（元素个数）。实参可以是序列（如 string、bytes、tuple、list 或 range 等）或集合（如 "
"dictionary、set 或 frozen set 等）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:845
msgid ""
"Rather than being a function, :class:`list` is actually a mutable sequence "
"type, as documented in :ref:`typesseq-list` and :ref:`typesseq`."
msgstr ""
"虽然被称为函数，:class:`list` 实际上是一种可变序列类型，详情请参阅 :ref:`typesseq-list` 和 "
":ref:`typesseq`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:851
msgid ""
"Update and return a dictionary representing the current local symbol table. "
"Free variables are returned by :func:`locals` when it is called in function "
"blocks, but not in class blocks. Note that at the module level, "
":func:`locals` and :func:`globals` are the same dictionary."
msgstr ""
"更新并返回表示当前本地符号表的字典。 在函数代码块但不是类代码块中调用 :func:`locals` 时将返回自由变量。 "
"请注意在模块层级上，:func:`locals` 和 :func:`globals` 是同一个字典。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:857
msgid ""
"The contents of this dictionary should not be modified; changes may not "
"affect the values of local and free variables used by the interpreter."
msgstr "不要更改此字典的内容；更改不会影响解释器使用的局部变量或自由变量的值。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:862
msgid ""
"Return an iterator that applies *function* to every item of *iterable*, "
"yielding the results.  If additional *iterable* arguments are passed, "
"*function* must take that many arguments and is applied to the items from "
"all iterables in parallel.  With multiple iterables, the iterator stops when"
" the shortest iterable is exhausted.  For cases where the function inputs "
"are already arranged into argument tuples, see :func:`itertools.starmap`\\."
msgstr ""
"返回一个将 *function* 应用于 *iterable* 中每一项并输出其结果的迭代器。 如果传入了额外的 *iterable* "
"参数，*function* 必须接受相同个数的实参并被应用于从所有可迭代对象中并行获取的项。 "
"当有多个可迭代对象时，最短的可迭代对象耗尽则整个迭代就将结束。 对于函数的输入已经是参数元组的情况，请参阅 "
":func:`itertools.starmap`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:873
msgid ""
"Return the largest item in an iterable or the largest of two or more "
"arguments."
msgstr "返回可迭代对象中最大的元素，或者返回两个及以上实参中最大的。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:876
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The largest item in the iterable is returned.  If two or more positional "
"arguments are provided, the largest of the positional arguments is returned."
msgstr ""
"如果只提供了一个位置参数，它必须是非空 "
":term:`iterable`，返回可迭代对象中最大的元素；如果提供了两个及以上的位置参数，则返回最大的位置参数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:881
#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:915
msgid ""
"There are two optional keyword-only arguments. The *key* argument specifies "
"a one-argument ordering function like that used for :meth:`list.sort`. The "
"*default* argument specifies an object to return if the provided iterable is"
" empty. If the iterable is empty and *default* is not provided, a "
":exc:`ValueError` is raised."
msgstr ""
"有两个可选只能用关键字的实参。*key* 实参指定排序函数用的参数，如传给 :meth:`list.sort` 的。*default* "
"实参是当可迭代对象为空时返回的值。如果可迭代对象为空，并且没有给 *default* ，则会触发 :exc:`ValueError`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:887
msgid ""
"If multiple items are maximal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc, reverse=True)[0]`` and "
"``heapq.nlargest(1, iterable, key=keyfunc)``."
msgstr ""
"如果有多个最大元素，则此函数将返回第一个找到的。这和其他稳定排序工具如 ``sorted(iterable, key=keyfunc, "
"reverse=True)[0]`` 和 ``heapq.nlargest(1, iterable, key=keyfunc)`` 保持一致。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:892
#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:926
msgid "The *default* keyword-only argument."
msgstr "keyword-only 实参 *default* 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:900
msgid ""
"Return a \"memory view\" object created from the given argument.  See "
":ref:`typememoryview` for more information."
msgstr "返回由给定实参创建的“内存视图”对象。有关详细信息，请参阅 :ref:`typememoryview`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:907
msgid ""
"Return the smallest item in an iterable or the smallest of two or more "
"arguments."
msgstr "返回可迭代对象中最小的元素，或者返回两个及以上实参中最小的。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:910
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The smallest item in the iterable is returned.  If two or more positional "
"arguments are provided, the smallest of the positional arguments is "
"returned."
msgstr ""
"如果只提供了一个位置参数，它必须是 :term:`iterable`，返回可迭代对象中最小的元素；如果提供了两个及以上的位置参数，则返回最小的位置参数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:921
msgid ""
"If multiple items are minimal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc)[0]`` and ``heapq.nsmallest(1, "
"iterable, key=keyfunc)``."
msgstr ""
"如果有多个最小元素，则此函数将返回第一个找到的。这和其他稳定排序工具如 ``sorted(iterable, key=keyfunc)[0]`` 和 "
"``heapq.nsmallest(1, iterable, key=keyfunc)`` 保持一致。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:932
msgid ""
"Retrieve the next item from the *iterator* by calling its "
":meth:`~iterator.__next__` method.  If *default* is given, it is returned if"
" the iterator is exhausted, otherwise :exc:`StopIteration` is raised."
msgstr ""
"通过调用 *iterator* 的 :meth:`~iterator.__next__` 方法获取下一个元素。如果迭代器耗尽，则返回给定的 "
"*default*，如果没有默认值则触发 :exc:`StopIteration`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:939
msgid ""
"Return a new featureless object.  :class:`object` is a base for all classes."
" It has the methods that are common to all instances of Python classes.  "
"This function does not accept any arguments."
msgstr ""
"返回一个没有特征的新对象。:class:`object` 是所有类的基类。它具有所有 Python 类实例的通用方法。这个函数不接受任何实参。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:945
msgid ""
":class:`object` does *not* have a :attr:`~object.__dict__`, so you can't "
"assign arbitrary attributes to an instance of the :class:`object` class."
msgstr ""
"由于 :class:`object` 没有 :attr:`~object.__dict__`，因此无法将任意属性赋给 :class:`object` "
"的实例。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:951
msgid ""
"Convert an integer number to an octal string prefixed with \"0o\".  The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`__index__` method that returns an "
"integer. For example:"
msgstr ""
"将一个整数转变为一个前缀为“0o”的八进制字符串。结果是一个合法的 Python 表达式。如果 *x* 不是 Python 的 :class:`int`"
" 对象，那它需要定义 :meth:`__index__`  方法返回一个整数。一些例子："

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:961
msgid ""
"If you want to convert an integer number to octal string either with prefix "
"\"0o\" or not, you can use either of the following ways."
msgstr "如果要将整数转换为八进制字符串，并可选择有无“0o”前缀，则可以使用如下方法："

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:978
msgid ""
"Open *file* and return a corresponding :term:`file object`.  If the file "
"cannot be opened, an :exc:`OSError` is raised."
msgstr "打开 *file* 并返回对应的 :term:`file object`。如果该文件不能打开，则触发 :exc:`OSError`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:981
msgid ""
"*file* is a :term:`path-like object` giving the pathname (absolute or "
"relative to the current working directory) of the file to be opened or an "
"integer file descriptor of the file to be wrapped.  (If a file descriptor is"
" given, it is closed when the returned I/O object is closed, unless "
"*closefd* is set to ``False``.)"
msgstr ""
"*file* 是一个 :term:`path-like "
"object`，表示将要打开的文件的路径（绝对路径或者当前工作目录的相对路径），也可以是要被封装的整数类型文件描述符。（如果是文件描述符，它会随着返回的"
" I/O 对象关闭而关闭，除非 *closefd* 被设为 ``False`` 。）"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:987
msgid ""
"*mode* is an optional string that specifies the mode in which the file is "
"opened.  It defaults to ``'r'`` which means open for reading in text mode. "
"Other common values are ``'w'`` for writing (truncating the file if it "
"already exists), ``'x'`` for exclusive creation and ``'a'`` for appending "
"(which on *some* Unix systems, means that *all* writes append to the end of "
"the file regardless of the current seek position).  In text mode, if "
"*encoding* is not specified the encoding used is platform dependent: "
"``locale.getpreferredencoding(False)`` is called to get the current locale "
"encoding. (For reading and writing raw bytes use binary mode and leave "
"*encoding* unspecified.)  The available modes are:"
msgstr ""
"*mode* 是一个可选字符串，用于指定打开文件的模式。默认值是 ``'r'``  ，这意味着它以文本模式打开并读取。其他常见模式有：写入 "
"``'w'`` （截断已经存在的文件）；排它性创建 ``'x'`` ；追加写 ``'a'`` （在 *一些*  Unix "
"系统上，无论当前的文件指针在什么位置，*所有* 写入都会追加到文件末尾）。在文本模式，如果 *encoding* "
"没有指定，则根据平台来决定使用的编码：使用 ``locale.getpreferredencoding(False)`` "
"来获取本地编码。（要读取和写入原始字节，请使用二进制模式并不要指定 *encoding*。）可用的模式有："

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1004
msgid "Character"
msgstr "字符"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1004
msgid "Meaning"
msgstr "含义"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1006
msgid "``'r'``"
msgstr "``'r'``"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1006
msgid "open for reading (default)"
msgstr "读取（默认）"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1007
msgid "``'w'``"
msgstr "``'w'``"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1007
msgid "open for writing, truncating the file first"
msgstr "写入，并先截断文件"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1008
msgid "``'x'``"
msgstr "``'x'``"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1008
msgid "open for exclusive creation, failing if the file already exists"
msgstr "排它性创建，如果文件已存在则失败"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1009
msgid "``'a'``"
msgstr "``'a'``"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1009
msgid "open for writing, appending to the end of the file if it exists"
msgstr "写入，如果文件存在则在末尾追加"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1010
msgid "``'b'``"
msgstr "``'b'``"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1010
msgid "binary mode"
msgstr "二进制模式"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1011
msgid "``'t'``"
msgstr "``'t'``"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1011
msgid "text mode (default)"
msgstr "文本模式（默认）"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1012
msgid "``'+'``"
msgstr "``'+'``"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1012
msgid "open a disk file for updating (reading and writing)"
msgstr "更新磁盘文件（读取并写入）"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1015
msgid ""
"The default mode is ``'r'`` (open for reading text, synonym of ``'rt'``). "
"For binary read-write access, the mode ``'w+b'`` opens and truncates the "
"file to 0 bytes.  ``'r+b'`` opens the file without truncation."
msgstr ""
"默认的模式是 ``'r'`` （打开并读取文本，同 ``'rt'`` ）。对于二进制写入， ``'w+b'`` 模式打开并把文件截断成 0 字节； "
"``'r+b'`` 则不会截断。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1019
msgid ""
"As mentioned in the :ref:`io-overview`, Python distinguishes between binary "
"and text I/O.  Files opened in binary mode (including ``'b'`` in the *mode* "
"argument) return contents as :class:`bytes` objects without any decoding.  "
"In text mode (the default, or when ``'t'`` is included in the *mode* "
"argument), the contents of the file are returned as :class:`str`, the bytes "
"having been first decoded using a platform-dependent encoding or using the "
"specified *encoding* if given."
msgstr ""
"正如在 :ref:`io-overview` 中提到的，Python区分二进制和文本I/O。以二进制模式打开的文件（包括 *mode* 参数中的 "
"``'b'`` ）返回的内容为 :class:`bytes`对象，不进行任何解码。在文本模式下（默认情况下，或者在 *mode* 参数中包含 "
"``'t'` ）时，文件内容返回为 :class:`str` ，首先使用指定的 *encoding* （如果给定）或者使用平台默认的的字节编码解码。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1027
msgid ""
"There is an additional mode character permitted, ``'U'``, which no longer "
"has any effect, and is considered deprecated. It previously enabled "
":term:`universal newlines` in text mode, which became the default behaviour "
"in Python 3.0. Refer to the documentation of the :ref:`newline <open-"
"newline-parameter>` parameter for further details."
msgstr ""
"此外还允许使用一个模式字符 ``'U'``，该字符已不再具有任何效果，并被视为已弃用。 之前它会在文本模式中启用 :term:`universal "
"newlines`，这在 Python 3.0 中成为默认行为。 请参阅 :ref:`newline <open-newline-parameter>`"
" 形参的文档了解更多细节。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1035
msgid ""
"Python doesn't depend on the underlying operating system's notion of text "
"files; all the processing is done by Python itself, and is therefore "
"platform-independent."
msgstr "Python不依赖于底层操作系统的文本文件概念;所有处理都由Python本身完成，因此与平台无关。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1039
msgid ""
"*buffering* is an optional integer used to set the buffering policy.  Pass 0"
" to switch buffering off (only allowed in binary mode), 1 to select line "
"buffering (only usable in text mode), and an integer > 1 to indicate the "
"size in bytes of a fixed-size chunk buffer.  When no *buffering* argument is"
" given, the default buffering policy works as follows:"
msgstr ""
"*buffering* "
"是一个可选的整数，用于设置缓冲策略。传递0以切换缓冲关闭（仅允许在二进制模式下），1选择行缓冲（仅在文本模式下可用），并且>1的整数以指示固定大小的块缓冲区的大小（以字节为单位）。如果没有给出"
" *buffering* 参数，则默认缓冲策略的工作方式如下:"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1045
msgid ""
"Binary files are buffered in fixed-size chunks; the size of the buffer is "
"chosen using a heuristic trying to determine the underlying device's \"block"
" size\" and falling back on :attr:`io.DEFAULT_BUFFER_SIZE`.  On many "
"systems, the buffer will typically be 4096 or 8192 bytes long."
msgstr ""
"二进制文件以固定大小的块进行缓冲；使用启发式方法选择缓冲区的大小，尝试确定底层设备的“块大小”或使用 "
":attr:`io.DEFAULT_BUFFER_SIZE`。在许多系统上，缓冲区的长度通常为4096或8192字节。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1050
msgid ""
"\"Interactive\" text files (files for which :meth:`~io.IOBase.isatty` "
"returns ``True``) use line buffering.  Other text files use the policy "
"described above for binary files."
msgstr ""
"“交互式”文本文件（ :meth:`~io.IOBase.isatty` 返回 ``True`` "
"的文件）使用行缓冲。其他文本文件使用上述策略用于二进制文件。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1054
msgid ""
"*encoding* is the name of the encoding used to decode or encode the file. "
"This should only be used in text mode.  The default encoding is platform "
"dependent (whatever :func:`locale.getpreferredencoding` returns), but any "
":term:`text encoding` supported by Python can be used.  See the "
":mod:`codecs` module for the list of supported encodings."
msgstr ""
"*encoding* 是用于解码或编码文件的编码的名称。这应该只在文本模式下使用。默认编码是依赖于平台的（不 管 "
":func:`locale.getpreferredencoding` 返回何值），但可以使用任何Python支持的 :term:`text "
"encoding` 。有关支持的编码列表，请参阅 :mod:`codecs` 模块。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1061
msgid ""
"*errors* is an optional string that specifies how encoding and decoding "
"errors are to be handled—this cannot be used in binary mode. A variety of "
"standard error handlers are available (listed under :ref:`error-handlers`), "
"though any error handling name that has been registered with "
":func:`codecs.register_error` is also valid.  The standard names include:"
msgstr ""
"*errors* 是一个可选的字符串参数，用于指定如何处理编码和解码错误 - 这不能在二进制模式下使用。可以使用各种标准错误处理程序（列在 "
":ref:`error-handlers` ），但是使用 :func:`codecs.register_error` "
"注册的任何错误处理名称也是有效的。标准名称包括:"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1069
msgid ""
"``'strict'`` to raise a :exc:`ValueError` exception if there is an encoding "
"error.  The default value of ``None`` has the same effect."
msgstr "如果存在编码错误，``'strict'`` 会引发 :exc:`ValueError` 异常。 默认值 ``None`` 具有相同的效果。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1073
msgid ""
"``'ignore'`` ignores errors.  Note that ignoring encoding errors can lead to"
" data loss."
msgstr "``'ignore'`` 忽略错误。请注意，忽略编码错误可能会导致数据丢失。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1076
msgid ""
"``'replace'`` causes a replacement marker (such as ``'?'``) to be inserted "
"where there is malformed data."
msgstr "``'replace'`` 会将替换标记（例如 ``'?'`` ）插入有错误数据的地方。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1079
msgid ""
"``'surrogateescape'`` will represent any incorrect bytes as code points in "
"the Unicode Private Use Area ranging from U+DC80 to U+DCFF.  These private "
"code points will then be turned back into the same bytes when the "
"``surrogateescape`` error handler is used when writing data.  This is useful"
" for processing files in an unknown encoding."
msgstr ""
"``'surrogateescape'`` "
"将表示任何不正确的字节作为Unicode专用区中的代码点，范围从U+DC80到U+DCFF。当在写入数据时使用 ``surrogateescape`` "
"错误处理程序时，这些私有代码点将被转回到相同的字节中。这对于处理未知编码的文件很有用。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1086
msgid ""
"``'xmlcharrefreplace'`` is only supported when writing to a file. Characters"
" not supported by the encoding are replaced with the appropriate XML "
"character reference ``&#nnn;``."
msgstr ""
"只有在写入文件时才支持 ``'xmlcharrefreplace'``。编码不支持的字符将替换为相应的XML字符引用 ``&#nnn;``。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1090
msgid ""
"``'backslashreplace'`` replaces malformed data by Python's backslashed "
"escape sequences."
msgstr "``'backslashreplace'`` 用Python的反向转义序列替换格式错误的数据。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1093
msgid ""
"``'namereplace'`` (also only supported when writing) replaces unsupported "
"characters with ``\\N{...}`` escape sequences."
msgstr "``'namereplace'`` （也只在编写时支持）用 ``\\N{...}`` 转义序列替换不支持的字符。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1101
msgid ""
"*newline* controls how :term:`universal newlines` mode works (it only "
"applies to text mode).  It can be ``None``, ``''``, ``'\\n'``, ``'\\r'``, "
"and ``'\\r\\n'``.  It works as follows:"
msgstr ""
"*newline* 控制 :term:`universal newlines` 模式如何生效（它仅适用于文本模式）。它可以是 "
"``None``，``''``，``'\\n'``，``'\\r'`` 和 ``'\\r\\n'``。它的工作原理:"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1105
msgid ""
"When reading input from the stream, if *newline* is ``None``, universal "
"newlines mode is enabled.  Lines in the input can end in ``'\\n'``, "
"``'\\r'``, or ``'\\r\\n'``, and these are translated into ``'\\n'`` before "
"being returned to the caller.  If it is ``''``, universal newlines mode is "
"enabled, but line endings are returned to the caller untranslated.  If it "
"has any of the other legal values, input lines are only terminated by the "
"given string, and the line ending is returned to the caller untranslated."
msgstr ""
"从流中读取输入时，如果 *newline* 为 ``None``，则启用通用换行模式。输入中的行可以以 ``'\\n'``，``'\\r'`` 或 "
"``'\\r\\n'`` 结尾，这些行被翻译成 ``'\\n'`` 在返回呼叫者之前。如果它是 "
"``''``，则启用通用换行模式，但行结尾将返回给调用者未翻译。如果它具有任何其他合法值，则输入行仅由给定字符串终止，并且行结尾将返回给未调用的调用者。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1113
msgid ""
"When writing output to the stream, if *newline* is ``None``, any ``'\\n'`` "
"characters written are translated to the system default line separator, "
":data:`os.linesep`.  If *newline* is ``''`` or ``'\\n'``, no translation "
"takes place.  If *newline* is any of the other legal values, any ``'\\n'`` "
"characters written are translated to the given string."
msgstr ""
"将输出写入流时，如果 *newline* 为 ``None``，则写入的任何 ``'\\n'`` 字符都将转换为系统默认行分隔符 "
":data:`os.linesep`。如果 *newline* 是 ``''`` 或 ``'\\n'``，则不进行翻译。如果 *newline* "
"是任何其他合法值，则写入的任何 ``'\\n'`` 字符将被转换为给定的字符串。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1119
msgid ""
"If *closefd* is ``False`` and a file descriptor rather than a filename was "
"given, the underlying file descriptor will be kept open when the file is "
"closed.  If a filename is given *closefd* must be ``True`` (the default) "
"otherwise an error will be raised."
msgstr ""
"如果 *closefd* 是 ``False`` 并且给出了文件描述符而不是文件名，那么当文件关闭时，底层文件描述符将保持打开状态。如果给出文件名则 "
"*closefd* 必须为 ``True`` （默认值），否则将引发错误。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1124
msgid ""
"A custom opener can be used by passing a callable as *opener*. The "
"underlying file descriptor for the file object is then obtained by calling "
"*opener* with (*file*, *flags*). *opener* must return an open file "
"descriptor (passing :mod:`os.open` as *opener* results in functionality "
"similar to passing ``None``)."
msgstr ""
"可以通过传递可调用的 *opener* 来使用自定义开启器。然后通过使用参数（ *file*，*flags* ）调用 *opener* "
"获得文件对象的基础文件描述符。 *opener* 必须返回一个打开的文件描述符（使用 :mod:`os.open` as *opener* 时与传递 "
"``None`` 的效果相同）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1130
msgid "The newly created file is :ref:`non-inheritable <fd_inheritance>`."
msgstr "新创建的文件是 :ref:`不可继承的 <fd_inheritance>`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1132
msgid ""
"The following example uses the :ref:`dir_fd <dir_fd>` parameter of the "
":func:`os.open` function to open a file relative to a given directory::"
msgstr ""
"下面的示例使用 :func:`os.open` 函数的 :ref:`dir_fd <dir_fd>` 的形参，从给定的目录中用相对路径打开文件::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1145
msgid ""
"The type of :term:`file object` returned by the :func:`open` function "
"depends on the mode.  When :func:`open` is used to open a file in a text "
"mode (``'w'``, ``'r'``, ``'wt'``, ``'rt'``, etc.), it returns a subclass of "
":class:`io.TextIOBase` (specifically :class:`io.TextIOWrapper`).  When used "
"to open a file in a binary mode with buffering, the returned class is a "
"subclass of :class:`io.BufferedIOBase`.  The exact class varies: in read "
"binary mode, it returns an :class:`io.BufferedReader`; in write binary and "
"append binary modes, it returns an :class:`io.BufferedWriter`, and in "
"read/write mode, it returns an :class:`io.BufferedRandom`.  When buffering "
"is disabled, the raw stream, a subclass of :class:`io.RawIOBase`, "
":class:`io.FileIO`, is returned."
msgstr ""
":func:`open` 函数所返回的 :term:`file object` 类型取决于所用模式。 当使用 :func:`open` 以文本模式 "
"(``'w'``, ``'r'``, ``'wt'``, ``'rt'`` 等) 打开文件时，它将返回 :class:`io.TextIOBase` "
"(特别是 :class:`io.TextIOWrapper`) 的一个子类。 当使用缓冲以二进制模式打开文件时，返回的类是 "
":class:`io.BufferedIOBase` 的一个子类。 具体的类会有多种：在只读的二进制模式下，它将返回 "
":class:`io.BufferedReader`；在写入二进制和追加二进制模式下，它将返回 "
":class:`io.BufferedWriter`，而在读/写模式下，它将返回 :class:`io.BufferedRandom`。 "
"当禁用缓冲时，则会返回原始流，即 :class:`io.RawIOBase` 的一个子类 :class:`io.FileIO`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1166
msgid ""
"See also the file handling modules, such as, :mod:`fileinput`, :mod:`io` "
"(where :func:`open` is declared), :mod:`os`, :mod:`os.path`, "
":mod:`tempfile`, and :mod:`shutil`."
msgstr ""
"另请参阅文件操作模块，例如 :mod:`fileinput`、:mod:`io` （声明了 "
":func:`open`）、:mod:`os`、:mod:`os.path`、:mod:`tempfile` 和 :mod:`shutil`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1173
msgid "The *opener* parameter was added."
msgstr "增加了 *opener* 形参。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1174
msgid "The ``'x'`` mode was added."
msgstr "增加了 ``'x'`` 模式。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1175
msgid ""
":exc:`IOError` used to be raised, it is now an alias of :exc:`OSError`."
msgstr "过去触发的 :exc:`IOError`，现在是 :exc:`OSError` 的别名。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1176
msgid ""
":exc:`FileExistsError` is now raised if the file opened in exclusive "
"creation mode (``'x'``) already exists."
msgstr "如果文件已存在但使用了排它性创建模式（ ``'x'`` ），现在会触发 :exc:`FileExistsError`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1182
msgid "The file is now non-inheritable."
msgstr "文件现在禁止继承。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1186
msgid "The ``'U'`` mode."
msgstr "``'U'`` 模式。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1191
msgid ""
"If the system call is interrupted and the signal handler does not raise an "
"exception, the function now retries the system call instead of raising an "
":exc:`InterruptedError` exception (see :pep:`475` for the rationale)."
msgstr ""
"如果系统调用被中断，但信号处理程序没有触发异常，此函数现在会重试系统调用，而不是触发 :exc:`InterruptedError` 异常 (原因详见 "
":pep:`475`)。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1194
msgid "The ``'namereplace'`` error handler was added."
msgstr "增加了 ``'namereplace'`` 错误处理接口。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1199
msgid "Support added to accept objects implementing :class:`os.PathLike`."
msgstr "增加对实现了 :class:`os.PathLike` 对象的支持。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1200
msgid ""
"On Windows, opening a console buffer may return a subclass of "
":class:`io.RawIOBase` other than :class:`io.FileIO`."
msgstr ""
"在 Windows 上，打开一个控制台缓冲区将返回 :class:`io.RawIOBase` 的子类，而不是 :class:`io.FileIO`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1205
msgid ""
"Given a string representing one Unicode character, return an integer "
"representing the Unicode code point of that character.  For example, "
"``ord('a')`` returns the integer ``97`` and ``ord('€')`` (Euro sign) returns"
" ``8364``.  This is the inverse of :func:`chr`."
msgstr ""
"对表示单个 Unicode 字符的字符串，返回代表它 Unicode 码点的整数。例如 ``ord('a')`` 返回整数 ``97``， "
"``ord('€')`` （欧元符号）返回 ``8364`` 。这是 :func:`chr` 的逆函数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1213
msgid ""
"Return *x* to the power *y*; if *z* is present, return *x* to the power *y*,"
" modulo *z* (computed more efficiently than ``pow(x, y) % z``). The two-"
"argument form ``pow(x, y)`` is equivalent to using the power operator: "
"``x**y``."
msgstr ""
"返回 *x* 的 *y* 次幂；如果 *z* 存在，则对 *z* 取余（比直接 ``pow(x, y) % z`` 计算更高效）。两个参数形式的 "
"``pow(x, y)`` 等价于幂运算符： ``x**y``。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1217
msgid ""
"The arguments must have numeric types.  With mixed operand types, the "
"coercion rules for binary arithmetic operators apply.  For :class:`int` "
"operands, the result has the same type as the operands (after coercion) "
"unless the second argument is negative; in that case, all arguments are "
"converted to float and a float result is delivered.  For example, ``10**2`` "
"returns ``100``, but ``10**-2`` returns ``0.01``.  If the second argument is"
" negative, the third argument must be omitted.  If *z* is present, *x* and "
"*y* must be of integer types, and *y* must be non-negative."
msgstr ""
"参数必须为数值类型。 对于混用的操作数类型，则适用二元算术运算符的类型强制转换规则。 对于 :class:`int` "
"操作数，结果具有与操作数相同的类型（转换后），除非第二个参数为负值；在这种情况下，所有参数将被转换为浮点数并输出浮点数结果。 例如，``10**2`` "
"返回 ``100``，但 ``10**-2`` 返回 ``0.01``。 如果第二个参数为负值，则第三个参数必须省略。 如果存在 *z*，则 *x* 和"
" *y* 必须为整数类型，且 *y* 必须为非负数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1229
msgid ""
"Print *objects* to the text stream *file*, separated by *sep* and followed "
"by *end*.  *sep*, *end*, *file* and *flush*, if present, must be given as "
"keyword arguments."
msgstr ""
"将 *objects* 打印到 *file* 指定的文本流，以 *sep* 分隔并在末尾加上 *end*。 *sep*, *end*, *file* 和"
" *flush* 如果存在，它们必须以关键字参数的形式给出。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1233
msgid ""
"All non-keyword arguments are converted to strings like :func:`str` does and"
" written to the stream, separated by *sep* and followed by *end*.  Both "
"*sep* and *end* must be strings; they can also be ``None``, which means to "
"use the default values.  If no *objects* are given, :func:`print` will just "
"write *end*."
msgstr ""
"所有非关键字参数都会被转换为字符串，就像是执行了 :func:`str` 一样，并会被写入到流，以 *sep* 且在末尾加上 *end*。 *sep* "
"和 *end* 都必须为字符串；它们也可以为 ``None``，这意味着使用默认值。 如果没有给出 *objects*，则 :func:`print` "
"将只写入 *end*。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1239
msgid ""
"The *file* argument must be an object with a ``write(string)`` method; if it"
" is not present or ``None``, :data:`sys.stdout` will be used.  Since printed"
" arguments are converted to text strings, :func:`print` cannot be used with "
"binary mode file objects.  For these, use ``file.write(...)`` instead."
msgstr ""
"*file* 参数必须是一个具有 ``write(string)`` 方法的对象；如果参数不存在或为 ``None``，则将使用 "
":data:`sys.stdout`。 由于要打印的参数会被转换为文本字符串，因此 :func:`print` 不能用于二进制模式的文件对象。 "
"对于这些对象，应改用 ``file.write(...)``。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1244
msgid ""
"Whether output is buffered is usually determined by *file*, but if the "
"*flush* keyword argument is true, the stream is forcibly flushed."
msgstr "输出是否被缓存通常决定于 *file*，但如果 *flush* 关键字参数为真值，流会被强制刷新。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1247
msgid "Added the *flush* keyword argument."
msgstr "增加了 *flush* 关键字参数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1253
msgid "Return a property attribute."
msgstr "返回 property 属性。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1255
msgid ""
"*fget* is a function for getting an attribute value.  *fset* is a function "
"for setting an attribute value. *fdel* is a function for deleting an "
"attribute value.  And *doc* creates a docstring for the attribute."
msgstr ""
"*fget* 是获取属性值的函数。 *fset* 是用于设置属性值的函数。 *fdel* 是用于删除属性值的函数。并且 *doc* "
"为属性对象创建文档字符串。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1259
msgid "A typical use is to define a managed attribute ``x``::"
msgstr "一个典型的用法是定义一个托管属性 ``x``::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1276
msgid ""
"If *c* is an instance of *C*, ``c.x`` will invoke the getter, ``c.x = "
"value`` will invoke the setter and ``del c.x`` the deleter."
msgstr ""
"如果 *c* 是 *C* 的实例，``c.x`` 将调用getter，``c.x = value`` 将调用setter， ``del c.x`` "
"将调用deleter。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1279
msgid ""
"If given, *doc* will be the docstring of the property attribute. Otherwise, "
"the property will copy *fget*'s docstring (if it exists).  This makes it "
"possible to create read-only properties easily using :func:`property` as a "
":term:`decorator`::"
msgstr ""
"如果给出，*doc* 将成为该 property 属性的文档字符串。 否则该 property 将拷贝 *fget* 的文档字符串（如果存在）。 "
"这令使用 :func:`property` 作为 :term:`decorator` 来创建只读的特征属性可以很容易地实现::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1292
msgid ""
"The ``@property`` decorator turns the :meth:`voltage` method into a "
"\"getter\" for a read-only attribute with the same name, and it sets the "
"docstring for *voltage* to \"Get the current voltage.\""
msgstr ""
"以上 ``@property`` 装饰器会将 :meth:`voltage` 方法转化为一个具有相同名称的只读属性的 \"getter\"，并将 "
"*voltage* 的文档字符串设置为 \"Get the current voltage.\""

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1296
msgid ""
"A property object has :attr:`~property.getter`, :attr:`~property.setter`, "
"and :attr:`~property.deleter` methods usable as decorators that create a "
"copy of the property with the corresponding accessor function set to the "
"decorated function.  This is best explained with an example::"
msgstr ""
"特征属性对象具有 :attr:`~property.getter`, :attr:`~property.setter` 以及 "
":attr:`~property.deleter` 方法，它们可用作装饰器来创建该特征属性的副本，并将相应的访问函数设为所装饰的函数。  "
"这最好是用一个例子来解释::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1318
msgid ""
"This code is exactly equivalent to the first example.  Be sure to give the "
"additional functions the same name as the original property (``x`` in this "
"case.)"
msgstr "上述代码与第一个例子完全等价。 注意一定要给附加函数与原始的特征属性相同的名称 (在本例中为 ``x``。)"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1322
msgid ""
"The returned property object also has the attributes ``fget``, ``fset``, and"
" ``fdel`` corresponding to the constructor arguments."
msgstr "返回的特征属性对象同样具有与构造器参数相对应的属性 ``fget``, ``fset`` 和 ``fdel``。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1325
msgid "The docstrings of property objects are now writeable."
msgstr "特征属性对象的文档字符串现在是可写的。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1334
msgid ""
"Rather than being a function, :class:`range` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-range` and :ref:`typesseq`."
msgstr ""
"虽然被称为函数，但 :class:`range` 实际上是一个不可变的序列类型，参见在 :ref:`typesseq-range` 与 "
":ref:`typesseq` 中的文档说明。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1340
msgid ""
"Return a string containing a printable representation of an object.  For "
"many types, this function makes an attempt to return a string that would "
"yield an object with the same value when passed to :func:`eval`, otherwise "
"the representation is a string enclosed in angle brackets that contains the "
"name of the type of the object together with additional information often "
"including the name and address of the object.  A class can control what this"
" function returns for its instances by defining a :meth:`__repr__` method."
msgstr ""
"返回包含一个对象的可打印表示形式的字符串。 对于许多类型来说，该函数会尝试返回的字符串将会与该对象被传递给 :func:`eval` "
"时所生成的对象具有相同的值，在其他情况下表示形式会是一个括在尖括号中的字符串，其中包含对象类型的名称与通常包括对象名称和地址的附加信息。 类可以通过定义"
" :meth:`__repr__` 方法来控制此函数为它的实例所返回的内容。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1351
msgid ""
"Return a reverse :term:`iterator`.  *seq* must be an object which has a "
":meth:`__reversed__` method or supports the sequence protocol (the "
":meth:`__len__` method and the :meth:`__getitem__` method with integer "
"arguments starting at ``0``)."
msgstr ""
"返回一个反向的 :term:`iterator`。 *seq* 必须是一个具有 :meth:`__reversed__` "
"方法的对象或者是支持该序列协议（具有从 ``0`` 开始的整数类型参数的 :meth:`__len__` 方法和 :meth:`__getitem__`"
" 方法）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1359
msgid ""
"Return *number* rounded to *ndigits* precision after the decimal point.  If "
"*ndigits* is omitted or is ``None``, it returns the nearest integer to its "
"input."
msgstr ""
"返回 *number* 舍入到小数点后 *ndigits* 位精度的值。 如果 *ndigits* 被省略或为 "
"``None``，则返回最接近输入值的整数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1363
msgid ""
"For the built-in types supporting :func:`round`, values are rounded to the "
"closest multiple of 10 to the power minus *ndigits*; if two multiples are "
"equally close, rounding is done toward the even choice (so, for example, "
"both ``round(0.5)`` and ``round(-0.5)`` are ``0``, and ``round(1.5)`` is "
"``2``).  Any integer value is valid for *ndigits* (positive, zero, or "
"negative).  The return value is an integer if *ndigits* is omitted or "
"``None``. Otherwise the return value has the same type as *number*."
msgstr ""
"对于支持 :func:`round` 的内置类型，值会被舍入到最接近的 10 的负 *ndigits* 次幂的倍数；如果与两个倍数的距离相等，则选择偶数"
" (因此，``round(0.5)`` 和 ``round(-0.5)`` 均为 ``0`` 而 ``round(1.5)`` 为 ``2``)。 "
"任何整数值都可作为有效的 *ndigits* (正数、零或负数)。 如果 *ndigits* 被省略或为 ``None`` 则返回值将为整数。 "
"否则返回值与 *number* 的类型相同。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1372
msgid ""
"For a general Python object ``number``, ``round`` delegates to "
"``number.__round__``."
msgstr "对于一般的 Python 对象 ``number``, ``round`` 将委托给 ``number.__round__``。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1377
msgid ""
"The behavior of :func:`round` for floats can be surprising: for example, "
"``round(2.675, 2)`` gives ``2.67`` instead of the expected ``2.68``. This is"
" not a bug: it's a result of the fact that most decimal fractions can't be "
"represented exactly as a float.  See :ref:`tut-fp-issues` for more "
"information."
msgstr ""
"对浮点数执行 :func:`round` 的行为可能会令人惊讶：例如，``round(2.675, 2)`` 将给出 ``2.67`` 而不是期望的 "
"``2.68``。 这不算是程序错误：这一结果是由于大多数十进制小数实际上都不能以浮点数精确地表示。 请参阅 :ref:`tut-fp-issues` "
"了解更多信息。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1388
msgid ""
"Return a new :class:`set` object, optionally with elements taken from "
"*iterable*.  ``set`` is a built-in class.  See :class:`set` and :ref:`types-"
"set` for documentation about this class."
msgstr ""
"返回一个新的 :class:`set` 对象，可以选择带有从 *iterable* 获取的元素。 ``set`` 是一个内置类型。 请查看 "
":class:`set` 和 :ref:`types-set` 获取关于这个类的文档。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1392
msgid ""
"For other containers see the built-in :class:`frozenset`, :class:`list`, "
":class:`tuple`, and :class:`dict` classes, as well as the :mod:`collections`"
" module."
msgstr ""
"有关其他容器请参看内置的 :class:`frozenset`, :class:`list`, :class:`tuple` 和 "
":class:`dict` 类，以及 :mod:`collections` 模块。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1399
msgid ""
"This is the counterpart of :func:`getattr`.  The arguments are an object, a "
"string and an arbitrary value.  The string may name an existing attribute or"
" a new attribute.  The function assigns the value to the attribute, provided"
" the object allows it.  For example, ``setattr(x, 'foobar', 123)`` is "
"equivalent to ``x.foobar = 123``."
msgstr ""
"此函数与 :func:`getattr` 两相对应。 其参数为一个对象、一个字符串和一个任意值。 字符串指定一个现有属性或者新增属性。 "
"函数会将值赋给该属性，只要对象允许这种操作。 例如，``setattr(x, 'foobar', 123)`` 等价于 ``x.foobar = "
"123``。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1411
msgid ""
"Return a :term:`slice` object representing the set of indices specified by "
"``range(start, stop, step)``.  The *start* and *step* arguments default to "
"``None``.  Slice objects have read-only data attributes "
":attr:`~slice.start`, :attr:`~slice.stop` and :attr:`~slice.step` which "
"merely return the argument values (or their default).  They have no other "
"explicit functionality; however they are used by Numerical Python and other "
"third party extensions. Slice objects are also generated when extended "
"indexing syntax is used.  For example: ``a[start:stop:step]`` or "
"``a[start:stop, i]``.  See :func:`itertools.islice` for an alternate version"
" that returns an iterator."
msgstr ""
"返回一个表示由 ``range(start, stop, step)`` 所指定索引集的 :term:`slice` 对象。 其中 *start* 和 "
"*step* 参数默认为 ``None``。 切片对象具有仅会返回对应参数值（或其默认值）的只读数据属性 :attr:`~slice.start`, "
":attr:`~slice.stop` 和 :attr:`~slice.step`。 它们没有其他的显式功能；不过它们会被 NumPy "
"以及其他第三方扩展所使用。 切片对象也会在使用扩展索引语法时被生成。 例如: ``a[start:stop:step]`` 或 "
"``a[start:stop, i]``。 请参阅 :func:`itertools.islice` 了解返回迭代器的一种替代版本。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1424
msgid "Return a new sorted list from the items in *iterable*."
msgstr "根据 *iterable* 中的项返回一个新的已排序列表。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1426
msgid ""
"Has two optional arguments which must be specified as keyword arguments."
msgstr "具有两个可选参数，它们都必须指定为关键字参数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1428
msgid ""
"*key* specifies a function of one argument that is used to extract a "
"comparison key from each element in *iterable* (for example, "
"``key=str.lower``).  The default value is ``None`` (compare the elements "
"directly)."
msgstr ""
"*key* 指定带有单个参数的函数，用于从 *iterable* 的每个元素中提取用于比较的键 (例如 ``key=str.lower``)。 默认值为"
" ``None`` (直接比较元素)。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1432
msgid ""
"*reverse* is a boolean value.  If set to ``True``, then the list elements "
"are sorted as if each comparison were reversed."
msgstr "*reverse* 为一个布尔值。 如果设为 ``True``，则每个列表元素将按反向顺序比较进行排序。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1435
msgid ""
"Use :func:`functools.cmp_to_key` to convert an old-style *cmp* function to a"
" *key* function."
msgstr "使用 :func:`functools.cmp_to_key` 可将老式的 *cmp* 函数转换为 *key* 函数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1438
msgid ""
"The built-in :func:`sorted` function is guaranteed to be stable. A sort is "
"stable if it guarantees not to change the relative order of elements that "
"compare equal --- this is helpful for sorting in multiple passes (for "
"example, sort by department, then by salary grade)."
msgstr ""
"内置的 :func:`sorted` 确保是稳定的。 如果一个排序确保不会改变比较结果相等的元素的相对顺序就称其为稳定的 --- "
"这有利于进行多重排序（例如先按部门、再按薪级排序）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1443
msgid ""
"For sorting examples and a brief sorting tutorial, see :ref:`sortinghowto`."
msgstr "有关排序示例和简要排序教程，请参阅 :ref:`sortinghowto` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1447
msgid "Transform a method into a static method."
msgstr "将方法转换为静态方法。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1449
msgid ""
"A static method does not receive an implicit first argument. To declare a "
"static method, use this idiom::"
msgstr "静态方法不会接收隐式的第一个参数。要声明一个静态方法，请使用此语法 ::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1456
msgid ""
"The ``@staticmethod`` form is a function :term:`decorator` -- see "
":ref:`function` for details."
msgstr ""
"``@staticmethod`` 这样的形式称为函数的 :term:`decorator` -- 详情参阅 :ref:`function`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1459
msgid ""
"A static method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``)."
msgstr "静态方法的调用可以在类上进行 (例如 ``C.f()``) 也可以在实例上进行 (例如 ``C().f()``)。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1462
msgid ""
"Static methods in Python are similar to those found in Java or C++. Also see"
" :func:`classmethod` for a variant that is useful for creating alternate "
"class constructors."
msgstr ""
"Python中的静态方法与Java或C ++中的静态方法类似。另请参阅 :func:`classmethod` ，用于创建备用类构造函数的变体。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1466
msgid ""
"Like all decorators, it is also possible to call ``staticmethod`` as a "
"regular function and do something with its result.  This is needed in some "
"cases where you need a reference to a function from a class body and you "
"want to avoid the automatic transformation to instance method.  For these "
"cases, use this idiom::"
msgstr ""
"像所有装饰器一样，也可以像常规函数一样调用 ``staticmethod`` "
"，并对其结果执行某些操作。比如某些情况下需要从类主体引用函数并且您希望避免自动转换为实例方法。对于这些情况，请使用此语法::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1475
msgid "For more information on static methods, see :ref:`types`."
msgstr "想了解更多有关静态方法的信息，请参阅 :ref:`types` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1486
msgid ""
"Return a :class:`str` version of *object*.  See :func:`str` for details."
msgstr "返回一个 :class:`str` 版本的 *object* 。有关详细信息，请参阅 :func:`str` 。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1488
msgid ""
"``str`` is the built-in string :term:`class`.  For general information about"
" strings, see :ref:`textseq`."
msgstr "``str`` 是内置字符串 :term:`class` 。更多关于字符串的信息查看 :ref:`textseq`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1494
msgid ""
"Sums *start* and the items of an *iterable* from left to right and returns "
"the total.  *start* defaults to ``0``. The *iterable*'s items are normally "
"numbers, and the start value is not allowed to be a string."
msgstr ""
"从 *start* 开始自左向右对 *iterable* 中的项求和并返回总计值。 *start* 默认为 ``0``。 *iterable* "
"的项通常为数字，开始值则不允许为字符串。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1498
msgid ""
"For some use cases, there are good alternatives to :func:`sum`. The "
"preferred, fast way to concatenate a sequence of strings is by calling "
"``''.join(sequence)``.  To add floating point values with extended "
"precision, see :func:`math.fsum`\\.  To concatenate a series of iterables, "
"consider using :func:`itertools.chain`."
msgstr ""
"对某些用例来说，存在 :func:`sum` 的更好替代。 拼接字符串序列的更好更快方式是调用 ``''.join(sequence)``。 "
"要以扩展精度对浮点值求和，请参阅 :func:`math.fsum`。 要拼接一系列可迭代对象，请考虑使用 "
":func:`itertools.chain`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1506
msgid ""
"Return a proxy object that delegates method calls to a parent or sibling "
"class of *type*.  This is useful for accessing inherited methods that have "
"been overridden in a class. The search order is same as that used by "
":func:`getattr` except that the *type* itself is skipped."
msgstr ""
"返回一个代理对象，它会将方法调用委托给 *type* 指定的父类或兄弟类。 这对于访问已在类中被重载的继承方法很有用。 搜索顺序与 "
":func:`getattr` 所使用的相同，只是 *type* 指定的类型本身会被跳过。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1511
msgid ""
"The :attr:`~class.__mro__` attribute of the *type* lists the method "
"resolution search order used by both :func:`getattr` and :func:`super`.  The"
" attribute is dynamic and can change whenever the inheritance hierarchy is "
"updated."
msgstr ""
"*type* 的 :attr:`~class.__mro__` 属性列出了 :func:`getattr` 和 :func:`super` "
"所使用的方法解析顺序。 该属性是动态的，可以在继承层级结构更新的时候任意改变。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1516
msgid ""
"If the second argument is omitted, the super object returned is unbound.  If"
" the second argument is an object, ``isinstance(obj, type)`` must be true.  "
"If the second argument is a type, ``issubclass(type2, type)`` must be true "
"(this is useful for classmethods)."
msgstr ""
"如果省略第二个参数，则返回的超类对象是未绑定的。 如果第二个参数为一个对象，则 ``isinstance(obj, type)`` 必须为真值。 "
"如果第二个参数为一个类型，则 ``issubclass(type2, type)`` 必须为真值（这适用于类方法）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1521
msgid ""
"There are two typical use cases for *super*.  In a class hierarchy with "
"single inheritance, *super* can be used to refer to parent classes without "
"naming them explicitly, thus making the code more maintainable.  This use "
"closely parallels the use of *super* in other programming languages."
msgstr ""
"*super* 有两个典型用例。 在具有单继承的类层级结构中，*super* 可用来引用父类而不必显式地指定它们的名称，从而令代码更易维护。 "
"这种用法与其他编程语言中 *super* 的用法非常相似。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1526
msgid ""
"The second use case is to support cooperative multiple inheritance in a "
"dynamic execution environment.  This use case is unique to Python and is not"
" found in statically compiled languages or languages that only support "
"single inheritance.  This makes it possible to implement \"diamond "
"diagrams\" where multiple base classes implement the same method.  Good "
"design dictates that this method have the same calling signature in every "
"case (because the order of calls is determined at runtime, because that "
"order adapts to changes in the class hierarchy, and because that order can "
"include sibling classes that are unknown prior to runtime)."
msgstr ""
"第二个用例是在动态执行环境中支持协作多重继承。 此用例为 Python 所独有，在静态编译语言或仅支持单继承的语言中是不存在的。 "
"这使得实现“菱形图”成为可能，在这时会有多个基类实现相同的方法。 "
"好的设计强制要求这种方法在每个情况下具有相同的调用签名（因为调用顺序是在运行时确定的，也因为该顺序要适应类层级结构的更改，还因为该顺序可能包含在运行时之前未知的兄弟类）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1536
msgid "For both use cases, a typical superclass call looks like this::"
msgstr "对于以上两个用例，典型的超类调用看起来是这样的::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1543
msgid ""
"In addition to method lookups, :func:`super` also works for attribute "
"lookups.  One possible use case for this is calling :term:`descriptor`\\s in"
" a parent or sibling class."
msgstr ""
"除了方法查找之外，:func:`super` 也可用于属性查找。 一个可能的此种用例是在上级或同级类中调用 :term:`descriptor`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1547
msgid ""
"Note that :func:`super` is implemented as part of the binding process for "
"explicit dotted attribute lookups such as ``super().__getitem__(name)``. It "
"does so by implementing its own :meth:`__getattribute__` method for "
"searching classes in a predictable order that supports cooperative multiple "
"inheritance. Accordingly, :func:`super` is undefined for implicit lookups "
"using statements or operators such as ``super()[name]``."
msgstr ""
"请注意 :func:`super` 是作为显式加点属性查找的绑定过程的一部分来实现的，例如 ``super().__getitem__(name)``。"
" 它做到这一点是通过实现自己的 :meth:`__getattribute__` 方法，这样就能以可预测的顺序搜索类，并且支持协作多重继承。 "
"对应地，:func:`super` 在像 ``super()[name]`` 这样使用语句或操作符进行隐式查找时则未被定义。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1554
msgid ""
"Also note that, aside from the zero argument form, :func:`super` is not "
"limited to use inside methods.  The two argument form specifies the "
"arguments exactly and makes the appropriate references.  The zero argument "
"form only works inside a class definition, as the compiler fills in the "
"necessary details to correctly retrieve the class being defined, as well as "
"accessing the current instance for ordinary methods."
msgstr ""
"还要注意的是，除了零个参数的形式以外，:func:`super` 并不限于在方法内部使用。 两个参数的形式明确指定参数并进行相应的引用。 "
"零个参数的形式仅适用于类定义内部，因为编译器需要填入必要的细节以正确地检索到被定义的类，还需要让普通方法访问当前实例。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1561
msgid ""
"For practical suggestions on how to design cooperative classes using "
":func:`super`, see `guide to using super() "
"<https://rhettinger.wordpress.com/2011/05/26/super-considered-super/>`_."
msgstr ""
"对于有关如何使用 :func:`super` 来如何设计协作类的实用建议，请参阅 `使用 super() 的指南 "
"<https://rhettinger.wordpress.com/2011/05/26/super-considered-super/>`_。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1570
msgid ""
"Rather than being a function, :class:`tuple` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-tuple` and :ref:`typesseq`."
msgstr ""
"虽然被称为函数，但 :class:`tuple` 实际上是一个不可变的序列类型，参见在 :ref:`typesseq-tuple` 与 "
":ref:`typesseq` 中的文档说明。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1579
msgid ""
"With one argument, return the type of an *object*.  The return value is a "
"type object and generally the same object as returned by "
":attr:`object.__class__ <instance.__class__>`."
msgstr ""
"传入一个参数时，返回 *object* 的类型。 返回值是一个 type 对象，通常与 :attr:`object.__class__ "
"<instance.__class__>` 所返回的对象相同。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1583
msgid ""
"The :func:`isinstance` built-in function is recommended for testing the type"
" of an object, because it takes subclasses into account."
msgstr "推荐使用 :func:`isinstance` 内置函数来检测对象的类型，因为它会考虑子类的情况。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1587
msgid ""
"With three arguments, return a new type object.  This is essentially a "
"dynamic form of the :keyword:`class` statement. The *name* string is the "
"class name and becomes the :attr:`~definition.__name__` attribute; the "
"*bases* tuple itemizes the base classes and becomes the "
":attr:`~class.__bases__` attribute; and the *dict* dictionary is the "
"namespace containing definitions for class body and is copied to a standard "
"dictionary to become the :attr:`~object.__dict__` attribute.  For example, "
"the following two statements create identical :class:`type` objects:"
msgstr ""
"传入三个参数时，返回一个新的 type 对象。 这在本质上是 :keyword:`class` 语句的一种动态形式。 *name* "
"字符串即类名并且会成为 :attr:`~definition.__name__` 属性；*bases* 元组列出基类并且会成为 "
":attr:`~class.__bases__` 属性；而 *dict* 字典为包含类主体定义的命名空间并且会被复制到一个标准字典成为 "
":attr:`~object.__dict__` 属性。 例如，下面两条语句会创建相同的 :class:`type` 对象:"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1601
msgid "See also :ref:`bltin-type-objects`."
msgstr "另请参阅 :ref:`bltin-type-objects`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1603
msgid ""
"Subclasses of :class:`type` which don't override ``type.__new__`` may no "
"longer use the one-argument form to get the type of an object."
msgstr ":class:`type` 的子类如果未重载 ``type.__new__``，将不再能使用一个参数的形式来获取对象的类型。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1609
msgid ""
"Return the :attr:`~object.__dict__` attribute for a module, class, instance,"
" or any other object with a :attr:`~object.__dict__` attribute."
msgstr ""
"返回模块、类、实例或任何其它具有 :attr:`~object.__dict__` 属性的对象的 :attr:`~object.__dict__` "
"属性。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1612
msgid ""
"Objects such as modules and instances have an updateable "
":attr:`~object.__dict__` attribute; however, other objects may have write "
"restrictions on their :attr:`~object.__dict__` attributes (for example, "
"classes use a :class:`types.MappingProxyType` to prevent direct dictionary "
"updates)."
msgstr ""
"模块和实例这样的对象具有可更新的 :attr:`~object.__dict__` 属性；但是，其它对象的 "
":attr:`~object.__dict__` 属性可能会设为限制写入（例如，类会使用 :class:`types.MappingProxyType`"
" 来防止直接更新字典）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1617
msgid ""
"Without an argument, :func:`vars` acts like :func:`locals`.  Note, the "
"locals dictionary is only useful for reads since updates to the locals "
"dictionary are ignored."
msgstr ""
"不带参数时，:func:`vars` 的行为类似 :func:`locals`。 请注意，locals 字典仅对于读取起作用，因为对 locals "
"字典的更新会被忽略。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1624
msgid "Make an iterator that aggregates elements from each of the iterables."
msgstr "创建一个聚合了来自每个可迭代对象中的元素的迭代器。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1626
msgid ""
"Returns an iterator of tuples, where the *i*-th tuple contains the *i*-th "
"element from each of the argument sequences or iterables.  The iterator "
"stops when the shortest input iterable is exhausted. With a single iterable "
"argument, it returns an iterator of 1-tuples.  With no arguments, it returns"
" an empty iterator.  Equivalent to::"
msgstr ""
"返回一个元组的迭代器，其中的第 *i* 个元组包含来自每个参数序列或可迭代对象的第 *i* 个元素。 "
"当所输入可迭代对象中最短的一个被耗尽时，迭代器将停止迭代。 当只有一个可迭代对象参数时，它将返回一个单元组的迭代器。 不带参数时，它将返回一个空迭代器。"
" 相当于::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1645
msgid ""
"The left-to-right evaluation order of the iterables is guaranteed. This "
"makes possible an idiom for clustering a data series into n-length groups "
"using ``zip(*[iter(s)]*n)``.  This repeats the *same* iterator ``n`` times "
"so that each output tuple has the result of ``n`` calls to the iterator. "
"This has the effect of dividing the input into n-length chunks."
msgstr ""
"函数会保证可迭代对象按从左至右的顺序被求值。 使得可以通过 ``zip(*[iter(s)]*n)`` 这样的惯用形式将一系列数据聚类为长度为 n "
"的分组。 这将重复 *同样的* 迭代器 ``n`` 次，以便每个输出的元组具有第 ``n`` 次调用该迭代器的结果。 它的作用效果就是将输入拆分为长度为"
" n 的数据块。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1651
msgid ""
":func:`zip` should only be used with unequal length inputs when you don't "
"care about trailing, unmatched values from the longer iterables.  If those "
"values are important, use :func:`itertools.zip_longest` instead."
msgstr ""
"当你不用关心较长可迭代对象末尾不匹配的值时，则 :func:`zip` 只须使用长度不相等的输入即可。 如果那些值很重要，则应改用 "
":func:`itertools.zip_longest`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1655
msgid ""
":func:`zip` in conjunction with the ``*`` operator can be used to unzip a "
"list::"
msgstr ":func:`zip` 与 ``*`` 运算符相结合可以用来拆解一个列表::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1676
msgid ""
"This is an advanced function that is not needed in everyday Python "
"programming, unlike :func:`importlib.import_module`."
msgstr "与 :func:`importlib.import_module` 不同，这是一个日常 Python 编程中不需要用到的高级函数。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1679
msgid ""
"This function is invoked by the :keyword:`import` statement.  It can be "
"replaced (by importing the :mod:`builtins` module and assigning to "
"``builtins.__import__``) in order to change semantics of the "
":keyword:`!import` statement, but doing so is **strongly** discouraged as it"
" is usually simpler to use import hooks (see :pep:`302`) to attain the same "
"goals and does not cause issues with code which assumes the default import "
"implementation is in use.  Direct use of :func:`__import__` is also "
"discouraged in favor of :func:`importlib.import_module`."
msgstr ""
"此函数会由 :keyword:`import` 语句发起调用。 它可以被替换 (通过导入 :mod:`builtins` 模块并赋值给 "
"``builtins.__import__``) 以便修改 :keyword:`!import` 语句的语义，但是 **强烈** "
"不建议这样做，因为使用导入钩子 (参见 :pep:`302`) 通常更容易实现同样的目标，并且不会导致代码问题，因为许多代码都会假定所用的是默认实现。 "
"同样也不建议直接使用 :func:`__import__` 而应该用 :func:`importlib.import_module`。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1688
msgid ""
"The function imports the module *name*, potentially using the given "
"*globals* and *locals* to determine how to interpret the name in a package "
"context. The *fromlist* gives the names of objects or submodules that should"
" be imported from the module given by *name*.  The standard implementation "
"does not use its *locals* argument at all, and uses its *globals* only to "
"determine the package context of the :keyword:`import` statement."
msgstr ""
"该函数会导入 *name* 模块，有可能使用给定的 *globals* 和 *locals* 来确定如何在包的上下文中解读名称。 *fromlist* "
"给出了应该从由 *name* 指定的模块导入对象或子模块的名称。 标准实现完全不使用其 *locals* 参数，而仅使用 *globals* 参数来确定"
" :keyword:`import` 语句的包上下文。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1695
msgid ""
"*level* specifies whether to use absolute or relative imports. ``0`` (the "
"default) means only perform absolute imports.  Positive values for *level* "
"indicate the number of parent directories to search relative to the "
"directory of the module calling :func:`__import__` (see :pep:`328` for the "
"details)."
msgstr ""
"*level* 指定是使用绝对还是相对导入。 ``0`` (默认值) 意味着仅执行绝对导入。 *level* 为正数值表示相对于模块调用 "
":func:`__import__` 的目录，将要搜索的父目录层数 (详情参见 :pep:`328`)。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1701
msgid ""
"When the *name* variable is of the form ``package.module``, normally, the "
"top-level package (the name up till the first dot) is returned, *not* the "
"module named by *name*.  However, when a non-empty *fromlist* argument is "
"given, the module named by *name* is returned."
msgstr ""
"当 *name* 变量的形式为 ``package.module`` 时，通常将会返回最高层级的包（第一个点号之前的名称），而 *不是* 以 "
"*name* 命名的模块。 但是，当给出了非空的 *fromlist* 参数时，则将返回以 *name* 命名的模块。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1706
msgid ""
"For example, the statement ``import spam`` results in bytecode resembling "
"the following code::"
msgstr "例如，语句 ``import spam`` 的结果将为与以下代码作用相同的字节码::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1711
msgid "The statement ``import spam.ham`` results in this call::"
msgstr "语句 ``import spam.ham`` 的结果将为以下调用::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1715
msgid ""
"Note how :func:`__import__` returns the toplevel module here because this is"
" the object that is bound to a name by the :keyword:`import` statement."
msgstr ""
"请注意在这里 :func:`__import__` 是如何返回顶层模块的，因为这是通过 :keyword:`import` 语句被绑定到特定名称的对象。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1718
msgid ""
"On the other hand, the statement ``from spam.ham import eggs, sausage as "
"saus`` results in ::"
msgstr "另一方面，语句 ``from spam.ham import eggs, sausage as saus`` 的结果将为 ::"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1725
msgid ""
"Here, the ``spam.ham`` module is returned from :func:`__import__`.  From "
"this object, the names to import are retrieved and assigned to their "
"respective names."
msgstr ""
"在这里， ``spam.ham`` 模块会由 :func:`__import__` 返回。 要导入的对象将从此对象中提取并赋值给它们对应的名称。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1729
msgid ""
"If you simply want to import a module (potentially within a package) by "
"name, use :func:`importlib.import_module`."
msgstr "如果您只想按名称导入模块（可能在包中），请使用 :func:`importlib.import_module`"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1732
msgid ""
"Negative values for *level* are no longer supported (which also changes the "
"default value to 0)."
msgstr " *level* 的值不再支持负数（默认值也修改为0）。"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1738
msgid "Footnotes"
msgstr "备注"

#: /home/runner/work/docspush-transifex/docspush-transifex/cpython/Doc/library/functions.rst:1739
msgid ""
"Note that the parser only accepts the Unix-style end of line convention. If "
"you are reading the code from a file, make sure to use newline conversion "
"mode to convert Windows or Mac-style newlines."
msgstr "解析器只接受 Unix 风格的行结束符。如果您从文件中读取代码，请确保用换行符转换模式转换 Windows 或 Mac 风格的换行符。"
