# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# sunsol s <sunsolzn@gmail.com>, 2021
# Larry Wang <larry.wang.801@gmail.com>, 2021
# Bryan不可思议, 2023
# Freesand Leo <yuqinju@163.com>, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-02 14:12+0000\n"
"PO-Revision-Date: 2021-06-28 01:17+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2023\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/wave.rst:2
msgid ":mod:`wave` --- Read and write WAV files"
msgstr ":mod:`wave` --- 读写WAV格式文件 "

#: ../../library/wave.rst:10
msgid "**Source code:** :source:`Lib/wave.py`"
msgstr "**源代码:** :source:`Lib/wave.py`"

#: ../../library/wave.rst:14
msgid ""
"The :mod:`wave` module provides a convenient interface to the Waveform Audio"
" \"WAVE\" (or \"WAV\") file format. Only uncompressed PCM encoded wave files"
" are supported."
msgstr ""

#: ../../library/wave.rst:20
msgid ""
"Support for ``WAVE_FORMAT_EXTENSIBLE`` headers was added, provided that the "
"extended format is ``KSDATAFORMAT_SUBTYPE_PCM``."
msgstr ""
"增加了对 ``WAVE_FORMAT_EXTENSIBLE`` 标头的支持，要求扩展格式为 ``KSDATAFORMAT_SUBTYPE_PCM``。"

#: ../../library/wave.rst:23
msgid "The :mod:`wave` module defines the following function and exception:"
msgstr ":mod:`wave` 模块定义了以下函数和异常:"

#: ../../library/wave.rst:28
msgid ""
"If *file* is a string, open the file by that name, otherwise treat it as a "
"file-like object.  *mode* can be:"
msgstr "如果 *file* 是一个字符串，打开对应文件名的文件。否则就把它作为文件类对象来处理。*mode* 可以为以下值："

#: ../../library/wave.rst:32
msgid "``'rb'``"
msgstr "``'rb'``"

#: ../../library/wave.rst:32
msgid "Read only mode."
msgstr "只读模式。"

#: ../../library/wave.rst:35
msgid "``'wb'``"
msgstr "``'wb'``"

#: ../../library/wave.rst:35
msgid "Write only mode."
msgstr "只写模式。"

#: ../../library/wave.rst:37
msgid "Note that it does not allow read/write WAV files."
msgstr "注意不支持同时读写WAV文件。"

#: ../../library/wave.rst:39
msgid ""
"A *mode* of ``'rb'`` returns a :class:`Wave_read` object, while a *mode* of "
"``'wb'`` returns a :class:`Wave_write` object.  If *mode* is omitted and a "
"file-like object is passed as *file*, ``file.mode`` is used as the default "
"value for *mode*."
msgstr ""
"*mode* 设为 ``'rb'`` 时返回一个 :class:`Wave_read` 对象，而 *mode* 设为 ``'wb'`` 时返回一个 "
":class:`Wave_write` 对象。如果省略 *mode* 并指定 *file* 来传入一个文件类对象，则 ``file.mode`` "
"会被用作 *mode* 的默认值。"

#: ../../library/wave.rst:44
msgid ""
"If you pass in a file-like object, the wave object will not close it when "
"its ``close()`` method is called; it is the caller's responsibility to close"
" the file object."
msgstr ""

#: ../../library/wave.rst:48
msgid ""
"The :func:`.open` function may be used in a :keyword:`with` statement.  When"
" the :keyword:`!with` block completes, the :meth:`Wave_read.close()` or "
":meth:`Wave_write.close()` method is called."
msgstr ""

#: ../../library/wave.rst:52 ../../library/wave.rst:176
msgid "Added support for unseekable files."
msgstr "添加了对不可搜索文件的支持。"

#: ../../library/wave.rst:57
msgid ""
"An error raised when something is impossible because it violates the WAV "
"specification or hits an implementation deficiency."
msgstr "当不符合WAV格式或无法操作时引发的错误。"

#: ../../library/wave.rst:64
msgid "Wave_read Objects"
msgstr "Wave_read对象"

#: ../../library/wave.rst:68
msgid "Read a WAV file."
msgstr ""

#: ../../library/wave.rst:70
msgid ""
"Wave_read objects, as returned by :func:`.open`, have the following methods:"
msgstr "由 :func:`.open` 返回的 Wave_read 对象，有以下几种方法:"

#: ../../library/wave.rst:75
msgid ""
"Close the stream if it was opened by :mod:`wave`, and make the instance "
"unusable.  This is called automatically on object collection."
msgstr "关闭 :mod:`wave` 打开的数据流并使对象不可用。当对象销毁时会自动调用。"

#: ../../library/wave.rst:81
msgid "Returns number of audio channels (``1`` for mono, ``2`` for stereo)."
msgstr "返回声道数量（``1`` 为单声道，``2`` 为立体声）"

#: ../../library/wave.rst:86
msgid "Returns sample width in bytes."
msgstr "返回采样字节长度。"

#: ../../library/wave.rst:91
msgid "Returns sampling frequency."
msgstr "返回采样频率。"

#: ../../library/wave.rst:96
msgid "Returns number of audio frames."
msgstr "返回音频总帧数。"

#: ../../library/wave.rst:101
msgid "Returns compression type (``'NONE'`` is the only supported type)."
msgstr "返回压缩类型（只支持 ``'NONE'`` 类型）"

#: ../../library/wave.rst:106
msgid ""
"Human-readable version of :meth:`getcomptype`. Usually ``'not compressed'`` "
"parallels ``'NONE'``."
msgstr ":meth:`getcomptype` 的通俗版本。使用 ``'not compressed'`` 代替 ``'NONE'``。"

#: ../../library/wave.rst:112
msgid ""
"Returns a :func:`~collections.namedtuple` ``(nchannels, sampwidth, "
"framerate, nframes, comptype, compname)``, equivalent to output of the "
"``get*()`` methods."
msgstr ""

#: ../../library/wave.rst:119
msgid ""
"Reads and returns at most *n* frames of audio, as a :class:`bytes` object."
msgstr "读取并返回以 :class:`bytes` 对象表示的最多 *n* 帧音频。"

#: ../../library/wave.rst:124
msgid "Rewind the file pointer to the beginning of the audio stream."
msgstr "重置文件指针至音频开头."

#: ../../library/wave.rst:126
msgid ""
"The following two methods are defined for compatibility with the :mod:`aifc`"
" module, and don't do anything interesting."
msgstr "后面两个方法是为了和 :mod:`aifc` 保持兼容，实际不做任何事情。"

#: ../../library/wave.rst:132
msgid "Returns ``None``."
msgstr "返回 ``None``。"

#: ../../library/wave.rst:137
msgid "Raise an error."
msgstr "引发错误异常。"

#: ../../library/wave.rst:139
msgid ""
"The following two methods define a term \"position\" which is compatible "
"between them, and is otherwise implementation dependent."
msgstr "以下两个方法都使用指针，具体实现由其底层决定。"

#: ../../library/wave.rst:145
msgid "Set the file pointer to the specified position."
msgstr "设置文件指针到指定位置。"

#: ../../library/wave.rst:150
msgid "Return current file pointer position."
msgstr "返回当前文件指针位置。"

#: ../../library/wave.rst:156
msgid "Wave_write Objects"
msgstr "Wave_write 对象"

#: ../../library/wave.rst:160
msgid "Write a WAV file."
msgstr ""

#: ../../library/wave.rst:162
msgid "Wave_write objects, as returned by :func:`.open`."
msgstr ""

#: ../../library/wave.rst:164
msgid ""
"For seekable output streams, the ``wave`` header will automatically be "
"updated to reflect the number of frames actually written.  For unseekable "
"streams, the *nframes* value must be accurate when the first frame data is "
"written.  An accurate *nframes* value can be achieved either by calling "
":meth:`setnframes` or :meth:`setparams` with the number of frames that will "
"be written before :meth:`close` is called and then using "
":meth:`writeframesraw` to write the frame data, or by calling "
":meth:`writeframes` with all of the frame data to be written.  In the latter"
" case :meth:`writeframes` will calculate the number of frames in the data "
"and set *nframes* accordingly before writing the frame data."
msgstr ""

#: ../../library/wave.rst:179
msgid "Wave_write objects have the following methods:"
msgstr ""

#: ../../library/wave.rst:183
msgid ""
"Make sure *nframes* is correct, and close the file if it was opened by "
":mod:`wave`.  This method is called upon object collection.  It will raise "
"an exception if the output stream is not seekable and *nframes* does not "
"match the number of frames actually written."
msgstr ""
"确保 *nframes* 是正确的，并在文件被 :mod:`wave` 打开时关闭它。 此方法会在对象收集时被调用。 如果输出流不可查找且 "
"*nframes* 与实际写入的帧数不匹配时引发异常。"

#: ../../library/wave.rst:191
msgid "Set the number of channels."
msgstr "设置声道数。"

#: ../../library/wave.rst:196
msgid "Set the sample width to *n* bytes."
msgstr "设置采样字节长度为 *n*。"

#: ../../library/wave.rst:201
msgid "Set the frame rate to *n*."
msgstr "设置采样频率为 *n*。"

#: ../../library/wave.rst:203
msgid "A non-integral input to this method is rounded to the nearest integer."
msgstr "对此方法的非整数输入会被舍入到最接近的整数。"

#: ../../library/wave.rst:210
msgid ""
"Set the number of frames to *n*.  This will be changed later if the number "
"of frames actually written is different (this update attempt will raise an "
"error if the output stream is not seekable)."
msgstr "设置总帧数为 *n*。 如果与之后实际写入的帧数不一致此值将会被更改（ 如果输出流不可查找则此更改尝试将引发错误）。"

#: ../../library/wave.rst:217
msgid ""
"Set the compression type and description. At the moment, only compression "
"type ``NONE`` is supported, meaning no compression."
msgstr "设置压缩格式。目前只支持 ``NONE`` 即无压缩格式。"

#: ../../library/wave.rst:223
msgid ""
"The *tuple* should be ``(nchannels, sampwidth, framerate, nframes, comptype,"
" compname)``, with values valid for the ``set*()`` methods.  Sets all "
"parameters."
msgstr ""

#: ../../library/wave.rst:230
msgid ""
"Return current position in the file, with the same disclaimer for the "
":meth:`Wave_read.tell` and :meth:`Wave_read.setpos` methods."
msgstr ""
"返回当前文件指针，其指针含义和 :meth:`Wave_read.tell` 以及 :meth:`Wave_read.setpos` 是一致的。"

#: ../../library/wave.rst:236
msgid "Write audio frames, without correcting *nframes*."
msgstr "写入音频数据但不更新 *nframes*。"

#: ../../library/wave.rst:238 ../../library/wave.rst:249
msgid "Any :term:`bytes-like object` is now accepted."
msgstr "现在可接受任意 :term:`bytes-like object`。"

#: ../../library/wave.rst:244
msgid ""
"Write audio frames and make sure *nframes* is correct.  It will raise an "
"error if the output stream is not seekable and the total number of frames "
"that have been written after *data* has been written does not match the "
"previously set value for *nframes*."
msgstr ""
"写入音频帧并确保 *nframes* 是正确的。 如果输出流不可查找且在 *data* 被写入之后写入的总帧数与之前设定的 *nframes* "
"值不匹配将会引发错误。"

#: ../../library/wave.rst:252
msgid ""
"Note that it is invalid to set any parameters after calling "
":meth:`writeframes` or :meth:`writeframesraw`, and any attempt to do so will"
" raise :exc:`wave.Error`."
msgstr ""
"注意在调用 :meth:`writeframes` 或 :meth:`writeframesraw` "
"之后再设置任何格式参数是无效的，而且任何这样的尝试将引发 :exc:`wave.Error`。"
