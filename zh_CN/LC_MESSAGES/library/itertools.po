# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Menghua Xiao <arieshout@gmail.com>, 2019
# zc Jin <zhengcao.jin@gmail.com>, 2019
# Freesand Leo <yuqinju@163.com>, 2019
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-16 16:41+0000\n"
"PO-Revision-Date: 2019-09-01 03:15+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2019\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/"
"teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:2
msgid ":mod:`itertools` --- Functions creating iterators for efficient looping"
msgstr ":mod:`itertools` --- 为高效循环而创建迭代器的函数"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:16
msgid ""
"This module implements a number of :term:`iterator` building blocks inspired "
"by constructs from APL, Haskell, and SML.  Each has been recast in a form "
"suitable for Python."
msgstr ""
"本模块实现一系列 :term:`iterator` ，这些迭代器受到APL，Haskell和SML的启发。为"
"了适用于Python，它们都被重新写过。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:20
msgid ""
"The module standardizes a core set of fast, memory efficient tools that are "
"useful by themselves or in combination.  Together, they form an \"iterator "
"algebra\" making it possible to construct specialized tools succinctly and "
"efficiently in pure Python."
msgstr ""
"本模块标准化了一个快速、高效利用内存的核心工具集，这些工具本身或组合都很有"
"用。它们一起形成了“迭代器代数”，这使得在纯Python中有可能创建简洁又高效的专用"
"工具。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:25
msgid ""
"For instance, SML provides a tabulation tool: ``tabulate(f)`` which produces "
"a sequence ``f(0), f(1), ...``.  The same effect can be achieved in Python "
"by combining :func:`map` and :func:`count` to form ``map(f, count())``."
msgstr ""
"例如，SML有一个制表工具： ``tabulate(f)``，它可产生一个序列 ``f(0), f(1), ..."
"``。在Python中可以组合 :func:`map` 和 :func:`count` 实现： ``map(f, "
"count())``。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:29
msgid ""
"These tools and their built-in counterparts also work well with the high-"
"speed functions in the :mod:`operator` module.  For example, the "
"multiplication operator can be mapped across two vectors to form an "
"efficient dot-product: ``sum(map(operator.mul, vector1, vector2))``."
msgstr ""
"这些内置工具同时也能很好地与 :mod:`operator` 模块中的高效函数配合使用。例如，"
"我们可以将两个向量的点积映射到乘法运算符： ``sum(map(operator.mul, vector1, "
"vector2))`` 。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:35
msgid "**Infinite iterators:**"
msgstr "**无穷迭代器：**"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:38
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:48
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:67
msgid "Iterator"
msgstr "迭代器"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:38
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:48
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:67
msgid "Arguments"
msgstr "实参"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:38
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:48
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:67
msgid "Results"
msgstr "结果"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:38
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:48
msgid "Example"
msgstr "示例"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:40
msgid ":func:`count`"
msgstr ":func:`count`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:40
msgid "start, [step]"
msgstr "start, [step]"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:40
msgid "start, start+step, start+2*step, ..."
msgstr "start, start+step, start+2*step, ..."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:40
msgid "``count(10) --> 10 11 12 13 14 ...``"
msgstr "``count(10) --> 10 11 12 13 14 ...``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:41
msgid ":func:`cycle`"
msgstr ":func:`cycle`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:41
msgid "p"
msgstr "p"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:41
msgid "p0, p1, ... plast, p0, p1, ..."
msgstr "p0, p1, ... plast, p0, p1, ..."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:41
msgid "``cycle('ABCD') --> A B C D A B C D ...``"
msgstr "``cycle('ABCD') --> A B C D A B C D ...``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:42
msgid ":func:`repeat`"
msgstr ":func:`repeat`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:42
msgid "elem [,n]"
msgstr "elem [,n]"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:42
msgid "elem, elem, elem, ... endlessly or up to n times"
msgstr "elem, elem, elem, ... 重复无限次或n次"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:42
msgid "``repeat(10, 3) --> 10 10 10``"
msgstr "``repeat(10, 3) --> 10 10 10``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:45
msgid "**Iterators terminating on the shortest input sequence:**"
msgstr "**根据最短输入序列长度停止的迭代器：**"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:50
msgid ":func:`accumulate`"
msgstr ":func:`accumulate`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:50
msgid "p [,func]"
msgstr "p [,func]"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:50
msgid "p0, p0+p1, p0+p1+p2, ..."
msgstr "p0, p0+p1, p0+p1+p2, ..."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:50
msgid "``accumulate([1,2,3,4,5]) --> 1 3 6 10 15``"
msgstr "``accumulate([1,2,3,4,5]) --> 1 3 6 10 15``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:51
msgid ":func:`chain`"
msgstr ":func:`chain`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:51
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:61
msgid "p, q, ..."
msgstr "p, q, ..."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:51
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:52
msgid "p0, p1, ... plast, q0, q1, ..."
msgstr "p0, p1, ... plast, q0, q1, ..."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:51
msgid "``chain('ABC', 'DEF') --> A B C D E F``"
msgstr "``chain('ABC', 'DEF') --> A B C D E F``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:52
msgid ":func:`chain.from_iterable`"
msgstr ":func:`chain.from_iterable`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:52
msgid "iterable"
msgstr "iterable -- 可迭代对象"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:52
msgid "``chain.from_iterable(['ABC', 'DEF']) --> A B C D E F``"
msgstr "``chain.from_iterable(['ABC', 'DEF']) --> A B C D E F``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:53
msgid ":func:`compress`"
msgstr ":func:`compress`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:53
msgid "data, selectors"
msgstr "data, selectors"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:53
msgid "(d[0] if s[0]), (d[1] if s[1]), ..."
msgstr "(d[0] if s[0]), (d[1] if s[1]), ..."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:53
msgid "``compress('ABCDEF', [1,0,1,0,1,1]) --> A C E F``"
msgstr "``compress('ABCDEF', [1,0,1,0,1,1]) --> A C E F``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:54
msgid ":func:`dropwhile`"
msgstr ":func:`dropwhile`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:54
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:55
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:59
msgid "pred, seq"
msgstr "pred, seq"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:54
msgid "seq[n], seq[n+1], starting when pred fails"
msgstr "seq[n], seq[n+1], ... 从pred首次真值测试失败开始"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:54
msgid "``dropwhile(lambda x: x<5, [1,4,6,4,1]) --> 6 4 1``"
msgstr "``dropwhile(lambda x: x<5, [1,4,6,4,1]) --> 6 4 1``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:55
msgid ":func:`filterfalse`"
msgstr ":func:`filterfalse`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:55
msgid "elements of seq where pred(elem) is false"
msgstr "seq中pred(x)为假值的元素，x是seq中的元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:55
msgid "``filterfalse(lambda x: x%2, range(10)) --> 0 2 4 6 8``"
msgstr "``filterfalse(lambda x: x%2, range(10)) --> 0 2 4 6 8``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:56
msgid ":func:`groupby`"
msgstr ":func:`groupby`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:56
msgid "iterable[, key]"
msgstr "iterable[, key]"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:56
msgid "sub-iterators grouped by value of key(v)"
msgstr "根据key(v)值分组的迭代器"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:57
msgid ":func:`islice`"
msgstr ":func:`islice`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:57
msgid "seq, [start,] stop [, step]"
msgstr "seq, [start,] stop [, step]"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:57
msgid "elements from seq[start:stop:step]"
msgstr "seq[start:stop:step]中的元素"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:57
msgid "``islice('ABCDEFG', 2, None) --> C D E F G``"
msgstr "``islice('ABCDEFG', 2, None) --> C D E F G``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:58
msgid ":func:`starmap`"
msgstr ":func:`starmap`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:58
msgid "func, seq"
msgstr "func, seq"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:58
msgid "func(\\*seq[0]), func(\\*seq[1]), ..."
msgstr "func(\\*seq[0]), func(\\*seq[1]), ..."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:58
msgid "``starmap(pow, [(2,5), (3,2), (10,3)]) --> 32 9 1000``"
msgstr "``starmap(pow, [(2,5), (3,2), (10,3)]) --> 32 9 1000``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:59
msgid ":func:`takewhile`"
msgstr ":func:`takewhile`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:59
msgid "seq[0], seq[1], until pred fails"
msgstr "seq[0], seq[1], ..., 直到pred真值测试失败"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:59
msgid "``takewhile(lambda x: x<5, [1,4,6,4,1]) --> 1 4``"
msgstr "``takewhile(lambda x: x<5, [1,4,6,4,1]) --> 1 4``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:60
msgid ":func:`tee`"
msgstr ":func:`tee`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:60
msgid "it, n"
msgstr "it, n"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:60
msgid "it1, it2, ... itn  splits one iterator into n"
msgstr "it1, it2, ... itn 将一个迭代器拆分为n个迭代器"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:61
msgid ":func:`zip_longest`"
msgstr ":func:`zip_longest`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:61
msgid "(p[0], q[0]), (p[1], q[1]), ..."
msgstr "(p[0], q[0]), (p[1], q[1]), ..."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:61
msgid "``zip_longest('ABCD', 'xy', fillvalue='-') --> Ax By C- D-``"
msgstr "``zip_longest('ABCD', 'xy', fillvalue='-') --> Ax By C- D-``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:64
msgid "**Combinatoric iterators:**"
msgstr "**排列组合迭代器：**"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:69
msgid ":func:`product`"
msgstr ":func:`product`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:69
msgid "p, q, ... [repeat=1]"
msgstr "p, q, ... [repeat=1]"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:69
msgid "cartesian product, equivalent to a nested for-loop"
msgstr "笛卡尔积，相当于嵌套的for循环"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:70
msgid ":func:`permutations`"
msgstr ":func:`permutations`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:70
msgid "p[, r]"
msgstr "p[, r]"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:70
msgid "r-length tuples, all possible orderings, no repeated elements"
msgstr "长度r元组，所有可能的排列，无重复元素"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:71
msgid ":func:`combinations`"
msgstr ":func:`combinations`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:71
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:72
msgid "p, r"
msgstr "p, r"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:71
msgid "r-length tuples, in sorted order, no repeated elements"
msgstr "长度r元组，有序，无重复元素"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:72
msgid ":func:`combinations_with_replacement`"
msgstr ":func:`combinations_with_replacement`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:72
msgid "r-length tuples, in sorted order, with repeated elements"
msgstr "长度r元组，有序，元素可重复"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:73
msgid "``product('ABCD', repeat=2)``"
msgstr "``product('ABCD', repeat=2)``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:73
msgid "``AA AB AC AD BA BB BC BD CA CB CC CD DA DB DC DD``"
msgstr "``AA AB AC AD BA BB BC BD CA CB CC CD DA DB DC DD``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:74
msgid "``permutations('ABCD', 2)``"
msgstr "``permutations('ABCD', 2)``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:74
msgid "``AB AC AD BA BC BD CA CB CD DA DB DC``"
msgstr "``AB AC AD BA BC BD CA CB CD DA DB DC``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:75
msgid "``combinations('ABCD', 2)``"
msgstr "``combinations('ABCD', 2)``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:75
msgid "``AB AC AD BC BD CD``"
msgstr "``AB AC AD BC BD CD``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:76
msgid "``combinations_with_replacement('ABCD', 2)``"
msgstr "``combinations_with_replacement('ABCD', 2)``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:76
msgid "``AA AB AC AD BB BC BD CC CD DD``"
msgstr "``AA AB AC AD BB BC BD CC CD DD``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:83
msgid "Itertool functions"
msgstr "Itertool函数"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:85
msgid ""
"The following module functions all construct and return iterators. Some "
"provide streams of infinite length, so they should only be accessed by "
"functions or loops that truncate the stream."
msgstr ""
"下列模块函数均创建并返回迭代器。有些迭代器不限制输出流长度，所以它们只应在能"
"截断输出流的函数或循环中使用。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:91
msgid ""
"Make an iterator that returns accumulated sums, or accumulated results of "
"other binary functions (specified via the optional *func* argument).  If "
"*func* is supplied, it should be a function of two arguments. Elements of "
"the input *iterable* may be any type that can be accepted as arguments to "
"*func*. (For example, with the default operation of addition, elements may "
"be any addable type including :class:`~decimal.Decimal` or :class:"
"`~fractions.Fraction`.) If the input iterable is empty, the output iterable "
"will also be empty."
msgstr ""
"创建一个迭代器，返回累加和或其他二元函数的累加结果（通过可选参数 *func* 指"
"定）。如果提供了 *func* ，它应是2个参数的函数。输入 *iterable* 元素类型应是 "
"*func* 能支持的任意类型。（例如，对于默认的加法操作，元素可以是任一支持加法的"
"类型，包括 :class:`~decimal.Decimal` 或 :class:`~fractions.Fraction` ）。如果"
"可迭代对象的输入为空，输出也为空。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:101
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:193
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:242
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:478
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:557
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:610
msgid "Roughly equivalent to::"
msgstr "大致相当于："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:117
msgid ""
"There are a number of uses for the *func* argument.  It can be set to :func:"
"`min` for a running minimum, :func:`max` for a running maximum, or :func:"
"`operator.mul` for a running product.  Amortization tables can be built by "
"accumulating interest and applying payments.  First-order `recurrence "
"relations <https://en.wikipedia.org/wiki/Recurrence_relation>`_ can be "
"modeled by supplying the initial value in the iterable and using only the "
"accumulated total in *func* argument::"
msgstr ""
"*func* 参数有几种用法。它可以被设为 :func:`min` 最终得到一个最小值，或者设"
"为 :func:`max` 最终得到一个最大值，或设为 :func:`operator.mul` 最终得到一个乘"
"积。摊销表可通过累加利息和支付款项得到。给iterable设置初始值并只将参数 "
"*func* 设为累加总数可以对一阶 `递归关系 <https://en.wikipedia.org/wiki/"
"Recurrence_relation>`_ 建模。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:147
msgid ""
"See :func:`functools.reduce` for a similar function that returns only the "
"final accumulated value."
msgstr "参考一个类似函数  :func:`functools.reduce`  ，它只返回一个最终累积值。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:152
msgid "Added the optional *func* parameter."
msgstr "增加可选参数 *func* 。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:157
msgid ""
"Make an iterator that returns elements from the first iterable until it is "
"exhausted, then proceeds to the next iterable, until all of the iterables "
"are exhausted.  Used for treating consecutive sequences as a single "
"sequence. Roughly equivalent to::"
msgstr ""
"创建一个迭代器，它首先返回第一个可迭代对象中所有元素，接着返回下一个可迭代对"
"象中所有元素，直到耗尽所有可迭代对象中的元素。可将多个序列处理为单个序列。大"
"致相当于："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:171
msgid ""
"Alternate constructor for :func:`chain`.  Gets chained inputs from a single "
"iterable argument that is evaluated lazily.  Roughly equivalent to::"
msgstr ""
"构建类似 :func:`chain` 迭代器的另一个选择。从一个单独的可迭代参数中得到链式输"
"入，该参数是延迟计算的。大致相当于： "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:183
msgid "Return *r* length subsequences of elements from the input *iterable*."
msgstr "返回由输入 *iterable* 中元素组成长度为 *r* 的子序列。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:185
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:234
msgid ""
"Combinations are emitted in lexicographic sort order.  So, if the input "
"*iterable* is sorted, the combination tuples will be produced in sorted "
"order."
msgstr ""
"组合按照字典序返回。所以如果输入 *iterable* 是有序的，生成的组合元组也是有序"
"的。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:189
msgid ""
"Elements are treated as unique based on their position, not on their value.  "
"So if the input elements are unique, there will be no repeat values in each "
"combination."
msgstr ""
"即使元素的值相同，不同位置的元素也被认为是不同的。如果元素各自不同，那么每个"
"组合中没有重复元素。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:215
msgid ""
"The code for :func:`combinations` can be also expressed as a subsequence of :"
"func:`permutations` after filtering entries where the elements are not in "
"sorted order (according to their position in the input pool)::"
msgstr ""
":func:`combinations` 的代码可被改写为 :func:`permutations` 过滤后的子序列，"
"（相对于元素在输入中的位置）元素不是有序的。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:226
msgid ""
"The number of items returned is ``n! / r! / (n-r)!`` when ``0 <= r <= n`` or "
"zero when ``r > n``."
msgstr ""
"当 ``0 <= r <= n`` 时，返回项的个数是 ``n! / r! / (n-r)!``；当 ``r > n`` 时，"
"返回项个数为0。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:231
msgid ""
"Return *r* length subsequences of elements from the input *iterable* "
"allowing individual elements to be repeated more than once."
msgstr ""
"返回由输入 *iterable* 中元素组成的长度为 *r* 的子序列，允许每个元素可重复出"
"现。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:238
msgid ""
"Elements are treated as unique based on their position, not on their value.  "
"So if the input elements are unique, the generated combinations will also be "
"unique."
msgstr ""
"不同位置的元素是不同的，即使它们的值相同。因此如果输入中的元素都是不同的话，"
"返回的组合中元素也都会不同。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:261
msgid ""
"The code for :func:`combinations_with_replacement` can be also expressed as "
"a subsequence of :func:`product` after filtering entries where the elements "
"are not in sorted order (according to their position in the input pool)::"
msgstr ""
":func:`combinations_with_replacement` 的代码可被改写为 :func:`production` 过"
"滤后的子序列，（相对于元素在输入中的位置）元素不是有序的。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:272
msgid ""
"The number of items returned is ``(n+r-1)! / r! / (n-1)!`` when ``n > 0``."
msgstr "当 ``n > 0`` 时，返回项个数为 ``(n+r-1)! / r! / (n-1)!``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:279
msgid ""
"Make an iterator that filters elements from *data* returning only those that "
"have a corresponding element in *selectors* that evaluates to ``True``. "
"Stops when either the *data* or *selectors* iterables has been exhausted. "
"Roughly equivalent to::"
msgstr ""
"创建一个迭代器，它返回 *data* 中经 *selectors* 真值测试为 ``True`` 的元素。迭"
"代器在两者较短的长度处停止。大致相当于："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:293
msgid ""
"Make an iterator that returns evenly spaced values starting with number "
"*start*. Often used as an argument to :func:`map` to generate consecutive "
"data points. Also, used with :func:`zip` to add sequence numbers.  Roughly "
"equivalent to::"
msgstr ""
"创建一个迭代器，它从 *start* 值开始，返回均匀间隔的值。常用于 :func:`map` 中"
"的实参来生成连续的数据点。此外，还用于 :func:`zip` 来添加序列号。大致相当于："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:305
msgid ""
"When counting with floating point numbers, better accuracy can sometimes be "
"achieved by substituting multiplicative code such as: ``(start + step * i "
"for i in count())``."
msgstr ""
"当对浮点数计数时，替换为乘法代码有时精度会更好，例如： ``(start + step * i "
"for i in count())`` 。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:309
msgid "Added *step* argument and allowed non-integer arguments."
msgstr "增加参数 *step* ，允许非整型。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:314
msgid ""
"Make an iterator returning elements from the iterable and saving a copy of "
"each. When the iterable is exhausted, return elements from the saved copy.  "
"Repeats indefinitely.  Roughly equivalent to::"
msgstr ""
"创建一个迭代器，返回 *iterable* 中所有元素并保存一个副本。当取完 *iterable* "
"中所有元素，返回副本中的所有元素。无限重复。大致相当于："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:328
msgid ""
"Note, this member of the toolkit may require significant auxiliary storage "
"(depending on the length of the iterable)."
msgstr "注意，该函数可能需要相当大的辅助空间（取决于 *iterable* 的长度）。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:334
msgid ""
"Make an iterator that drops elements from the iterable as long as the "
"predicate is true; afterwards, returns every element.  Note, the iterator "
"does not produce *any* output until the predicate first becomes false, so it "
"may have a lengthy start-up time.  Roughly equivalent to::"
msgstr ""
"创建一个迭代器，如果 *predicate* 为true，迭代器丢弃这些元素，然后返回其他元"
"素。注意，迭代器在 *predicate* 首次为false之前不会产生任何输出，所以可能需要"
"一定长度的启动时间。大致相当于："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:351
msgid ""
"Make an iterator that filters elements from iterable returning only those "
"for which the predicate is ``False``. If *predicate* is ``None``, return the "
"items that are false. Roughly equivalent to::"
msgstr ""
"创建一个迭代器，只返回 *iterable* 中 *predicate* 为 ``False`` 的元素。如果 "
"*predicate* 是 ``None``，返回真值测试为false的元素。大致相当于："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:366
msgid ""
"Make an iterator that returns consecutive keys and groups from the "
"*iterable*. The *key* is a function computing a key value for each element.  "
"If not specified or is ``None``, *key* defaults to an identity function and "
"returns the element unchanged.  Generally, the iterable needs to already be "
"sorted on the same key function."
msgstr ""
"创建一个迭代器，返回 *iterable* 中连续的键和组。*key* 是一个计算元素键值函"
"数。如果未指定或为 ``None``，*key* 缺省为恒等函数（identity function），返回"
"元素不变。一般来说，*iterable* 需用同一个键值函数预先排序。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:372
msgid ""
"The operation of :func:`groupby` is similar to the ``uniq`` filter in Unix.  "
"It generates a break or new group every time the value of the key function "
"changes (which is why it is usually necessary to have sorted the data using "
"the same key function).  That behavior differs from SQL's GROUP BY which "
"aggregates common elements regardless of their input order."
msgstr ""
":func:`groupby` 操作类似于Unix中的 ``uniq``。当每次 *key* 函数产生的键值改变"
"时，迭代器会分组或生成一个新组（这就是为什么通常需要使用同一个键值函数先对数"
"据进行排序）。这种行为与SQL的GROUP BY操作不同，SQL的操作会忽略输入的顺序将相"
"同键值的元素分在同组中。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:378
msgid ""
"The returned group is itself an iterator that shares the underlying iterable "
"with :func:`groupby`.  Because the source is shared, when the :func:"
"`groupby` object is advanced, the previous group is no longer visible.  So, "
"if that data is needed later, it should be stored as a list::"
msgstr ""
"返回的组本身也是一个迭代器，它与 :func:`groupby` 共享底层的可迭代对象。因为源"
"是共享的，当 :func:`groupby` 对象向后迭代时，前一个组将消失。因此如果稍后还需"
"要返回结果，可保存为列表："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:390
msgid ":func:`groupby` is roughly equivalent to::"
msgstr ":func:`groupby` 大致相当于："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:423
msgid ""
"Make an iterator that returns selected elements from the iterable. If "
"*start* is non-zero, then elements from the iterable are skipped until start "
"is reached. Afterward, elements are returned consecutively unless *step* is "
"set higher than one which results in items being skipped.  If *stop* is "
"``None``, then iteration continues until the iterator is exhausted, if at "
"all; otherwise, it stops at the specified position.  Unlike regular "
"slicing, :func:`islice` does not support negative values for *start*, "
"*stop*, or *step*.  Can be used to extract related fields from data where "
"the internal structure has been flattened (for example, a multi-line report "
"may list a name field on every third line).  Roughly equivalent to::"
msgstr ""
"创建一个迭代器，返回从 *iterable* 里选中的元素。如果 *start* 不是0，跳过 "
"*iterable* 中的元素，直到到达 *start* 这个位置。之后迭代器连续返回元素，除非 "
"*step* 设置的值很高导致被跳过。如果 *stop* 为 ``None``，迭代器耗光为止；否"
"则，在指定的位置停止。与普通的切片不同，:func:`islice` 不支持将 *start* ， "
"*stop* ，或 *step* 设为负值。可用来从内部数据结构被压平的数据中提取相关字段"
"（例如一个多行报告，它的名称字段出现在每三行上）。大致相当于："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:458
msgid ""
"If *start* is ``None``, then iteration starts at zero. If *step* is "
"``None``, then the step defaults to one."
msgstr ""
"如果 *start* 为 ``None``，迭代从0开始。如果 *step* 为 ``None`` ，步长缺省为"
"1。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:464
msgid ""
"Return successive *r* length permutations of elements in the *iterable*."
msgstr "连续返回由 *iterable* 元素生成长度为 *r* 的排列。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:466
msgid ""
"If *r* is not specified or is ``None``, then *r* defaults to the length of "
"the *iterable* and all possible full-length permutations are generated."
msgstr ""
"如果 *r* 未指定或为 ``None`` ，*r* 默认设置为 *iterable* 的长度，这种情况下，"
"生成所有全长排列。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:470
msgid ""
"Permutations are emitted in lexicographic sort order.  So, if the input "
"*iterable* is sorted, the permutation tuples will be produced in sorted "
"order."
msgstr ""
"排列依字典序发出。因此，如果 *iterable* 是已排序的，排列元组将有序地产出。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:474
msgid ""
"Elements are treated as unique based on their position, not on their value.  "
"So if the input elements are unique, there will be no repeat values in each "
"permutation."
msgstr ""
"即使元素的值相同，不同位置的元素也被认为是不同的。如果元素值都不同，每个排列"
"中的元素值不会重复。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:505
msgid ""
"The code for :func:`permutations` can be also expressed as a subsequence of :"
"func:`product`, filtered to exclude entries with repeated elements (those "
"from the same position in the input pool)::"
msgstr ""
":func:`permutations` 的代码也可被改写为 :func:`product` 的子序列，只要将含有"
"重复元素（来自输入中同一位置的）的项排除。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:517
msgid ""
"The number of items returned is ``n! / (n-r)!`` when ``0 <= r <= n`` or zero "
"when ``r > n``."
msgstr ""
"当 ``0 <= r <= n`` ，返回项个数为 ``n! / (n-r)!`` ；当 ``r > n`` ，返回项个数"
"为0。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:522
msgid "Cartesian product of input iterables."
msgstr "可迭代对象输入的笛卡儿积。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:524
msgid ""
"Roughly equivalent to nested for-loops in a generator expression. For "
"example, ``product(A, B)`` returns the same as ``((x,y) for x in A for y in "
"B)``."
msgstr ""
"大致相当于生成器表达式中的嵌套循环。例如， ``product(A, B)`` 和 ``((x,y) for "
"x in A for y in B)`` 返回结果一样。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:527
msgid ""
"The nested loops cycle like an odometer with the rightmost element advancing "
"on every iteration.  This pattern creates a lexicographic ordering so that "
"if the input's iterables are sorted, the product tuples are emitted in "
"sorted order."
msgstr ""
"嵌套循环像里程表那样循环变动，每次迭代时将最右侧的元素向后迭代。这种模式形成"
"了一种字典序，因此如果输入的可迭代对象是已排序的，笛卡尔积元组依次序发出。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:532
msgid ""
"To compute the product of an iterable with itself, specify the number of "
"repetitions with the optional *repeat* keyword argument.  For example, "
"``product(A, repeat=4)`` means the same as ``product(A, A, A, A)``."
msgstr ""
"要计算可迭代对象自身的笛卡尔积，将可选参数 *repeat* 设定为要重复的次数。例"
"如，``product(A, repeat=4)`` 和 ``product(A, A, A, A)`` 是一样的。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:536
msgid ""
"This function is roughly equivalent to the following code, except that the "
"actual implementation does not build up intermediate results in memory::"
msgstr ""
"该函数大致相当于下面的代码，只不过实际实现方案不会在内存中创建中间结果。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:552
msgid ""
"Make an iterator that returns *object* over and over again. Runs "
"indefinitely unless the *times* argument is specified. Used as argument to :"
"func:`map` for invariant parameters to the called function.  Also used with :"
"func:`zip` to create an invariant part of a tuple record."
msgstr ""
"创建一个迭代器，不断重复 *object* 。除非设定参数 *times* ，否则将无限重复。可"
"用于 :func:`map` 函数中的参数，被调用函数可得到一个不变参数。也可用于 :func:"
"`zip` 的参数以在元组记录中创建一个不变的部分。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:568
msgid ""
"A common use for *repeat* is to supply a stream of constant values to *map* "
"or *zip*::"
msgstr "*repeat* 最常见的用途就是在 *map* 或 *zip* 提供一个常量流："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:576
msgid ""
"Make an iterator that computes the function using arguments obtained from "
"the iterable.  Used instead of :func:`map` when argument parameters are "
"already grouped in tuples from a single iterable (the data has been \"pre-"
"zipped\").  The difference between :func:`map` and :func:`starmap` parallels "
"the distinction between ``function(a,b)`` and ``function(*c)``. Roughly "
"equivalent to::"
msgstr ""
"创建一个迭代器，使用从可迭代对象中获取的参数来计算该函数。当参数对应的形参已"
"从一个单独可迭代对象组合为元组时（数据已被“预组对”）可用此函数代替 :func:"
"`map`。:func:`map` 与 :func:`starmap` 之间的区别可以类比 ``function(a,b)`` "
"与 ``function(*c)`` 的区别。大致相当于::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:590
msgid ""
"Make an iterator that returns elements from the iterable as long as the "
"predicate is true.  Roughly equivalent to::"
msgstr ""
"创建一个迭代器，只要 predicate 为真就从可迭代对象中返回元素。大致相当于::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:604
msgid "Return *n* independent iterators from a single iterable."
msgstr "从一个可迭代对象中返回 *n* 个独立的迭代器。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:606
msgid ""
"The following Python code helps explain what *tee* does (although the actual "
"implementation is more complex and uses only a single underlying :abbr:`FIFO "
"(first-in, first-out)` queue)."
msgstr ""
"下面的Python代码能帮助解释 *tee* 做了什么（尽管实际的实现更复杂，而且仅使用了"
"一个底层的 :abbr:`FIFO (first in, first-out)` 队列）。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:627
msgid ""
"Once :func:`tee` has made a split, the original *iterable* should not be "
"used anywhere else; otherwise, the *iterable* could get advanced without the "
"tee objects being informed."
msgstr ""
"一旦 :func:`tee` 实施了一次分裂，原有的 *iterable* 不应再被使用；否则tee对象"
"无法得知 *iterable* 可能已向后迭代。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:631
msgid ""
"``tee`` iterators are not threadsafe. A :exc:`RuntimeError` may be raised "
"when using simultaneously iterators returned by the same :func:`tee` call, "
"even if the original *iterable* is threadsafe."
msgstr ""
"``tee`` 迭代器不是线程安全的。当同时使用由同一个 :func:`tee` 调用所返回的迭代"
"器时可能引发 :exc:`RuntimeError`，即使原本的 *iterable* 是线程安全的。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:635
msgid ""
"This itertool may require significant auxiliary storage (depending on how "
"much temporary data needs to be stored). In general, if one iterator uses "
"most or all of the data before another iterator starts, it is faster to use :"
"func:`list` instead of :func:`tee`."
msgstr ""
"该迭代工具可能需要相当大的辅助存储空间（这取决于要保存多少临时数据）。通常，"
"如果一个迭代器在另一个迭代器开始之前就要使用大部份或全部数据，使用 :func:"
"`list` 会比 :func:`tee` 更快。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:643
msgid ""
"Make an iterator that aggregates elements from each of the iterables. If the "
"iterables are of uneven length, missing values are filled-in with "
"*fillvalue*. Iteration continues until the longest iterable is exhausted.  "
"Roughly equivalent to::"
msgstr ""
"创建一个迭代器，从每个可迭代对象中收集元素。如果可迭代对象的长度未对齐，将根"
"据 *fillvalue* 填充缺失值。迭代持续到耗光最长的可迭代对象。大致相当于："

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:667
msgid ""
"If one of the iterables is potentially infinite, then the :func:"
"`zip_longest` function should be wrapped with something that limits the "
"number of calls (for example :func:`islice` or :func:`takewhile`).  If not "
"specified, *fillvalue* defaults to ``None``."
msgstr ""
"如果其中一个可迭代对象有无限长度，:func:`zip_longest` 函数应封装在限制调用次"
"数的场景中（例如 :func:`islice` 或 :func:`takewhile`）。除非指定， "
"*fillvalue* 默认为 ``None`` 。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:676
msgid "Itertools Recipes"
msgstr "Itertools食谱"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:678
msgid ""
"This section shows recipes for creating an extended toolset using the "
"existing itertools as building blocks."
msgstr "本节将展示如何使用现有的itertools作为基础构件来创建扩展的工具集。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:681
msgid ""
"The extended tools offer the same high performance as the underlying "
"toolset. The superior memory performance is kept by processing elements one "
"at a time rather than bringing the whole iterable into memory all at once. "
"Code volume is kept small by linking the tools together in a functional "
"style which helps eliminate temporary variables.  High speed is retained by "
"preferring \"vectorized\" building blocks over the use of for-loops and :"
"term:`generator`\\s which incur interpreter overhead."
msgstr ""
"扩展的工具提供了与底层工具集相同的高性能。保持了超棒的内存利用率，因为一次只"
"处理一个元素，而不是将整个可迭代对象加载到内存。代码量保持得很小，以函数式风"
"格将这些工具连接在一起，有助于消除临时变量。速度依然很快，因为倾向于使用“矢量"
"化”构件来取代解释器开销大的 for 循环和 :term:`generator` 。"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/itertools.rst:903
msgid ""
"Note, many of the above recipes can be optimized by replacing global lookups "
"with local variables defined as default values.  For example, the "
"*dotproduct* recipe can be written as::"
msgstr ""
"注意，通过将全局查找替换为局部变量的缺省值，上述配方中有很多可以这样优化。例"
"如， *dotproduct* 配方可以这样写："
