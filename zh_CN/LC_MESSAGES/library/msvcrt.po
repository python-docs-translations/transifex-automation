# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
# Translators:
# Sean Chao <seanchao0804@gmail.com>, 2021
# Freesand Leo <yuqinju@163.com>, 2024
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-10 22:50-0300\n"
"PO-Revision-Date: 2021-06-28 01:09+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2024\n"
"Language: zh_CN\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-"
"doc/teams/5390/zh_CN/)\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../library/msvcrt.rst:2
msgid ":mod:`!msvcrt` --- Useful routines from the MS VC++ runtime"
msgstr ""

#: ../../library/msvcrt.rst:12
#, fuzzy
msgid ""
"These functions provide access to some useful capabilities on Windows "
"platforms. Some higher-level modules use these functions to build the "
"Windows implementations of their services. For example, the "
":mod:`getpass` module uses this in the implementation of the "
":func:`getpass` function."
msgstr ""
"这些函数提供了对 Windows 平台上一些有用功能的访问。一些更高级别的模块使用这些函数来构建其服务的 Windows 实现。 例如， "
":mod:`getpass` 模块在实现 :func:`getpass` 函数时使用了这些函数。"

#: ../../library/msvcrt.rst:17
msgid ""
"Further documentation on these functions can be found in the Platform API"
" documentation."
msgstr "关于这些函数的更多信息可以在平台 API 文档中找到。"

#: ../../library/msvcrt.rst:20
msgid ""
"The module implements both the normal and wide char variants of the "
"console I/O api. The normal API deals only with ASCII characters and is "
"of limited use for internationalized applications. The wide char API "
"should be used where ever possible."
msgstr "该模块实现了控制台 I/O API 的普通和宽字符变体。普通的 API 只处理ASCII字符，国际化应用受限。应该尽可能地使用宽字符 API 。"

#: ../../library/msvcrt.rst:25
msgid ""
"Operations in this module now raise :exc:`OSError` where :exc:`IOError` "
"was raised."
msgstr "此模块中过去会引发 :exc:`IOError` 的操作现在将引发 :exc:`OSError`。"

#: ../../library/msvcrt.rst:33
msgid "File Operations"
msgstr "文件操作"

#: ../../library/msvcrt.rst:38
#, fuzzy
msgid ""
"Lock part of a file based on file descriptor *fd* from the C runtime. "
"Raises :exc:`OSError` on failure. The locked region of the file extends "
"from the current file position for *nbytes* bytes, and may continue "
"beyond the end of the file. *mode* must be one of the :const:`!LK_\\*` "
"constants listed below. Multiple regions in a file may be locked at the "
"same time, but may not overlap. Adjacent regions are not merged; they "
"must be unlocked individually."
msgstr ""
"基于文件描述符 *fd* 从 C 运行时锁定文件的某一部分。 失败时引发 :exc:`OSError`。 锁定的文件区域从当前文件位置扩展 "
"*nbytes* 个字节，并可能持续到走出文件末尾。 *mode* 必须为下面列出的 :const:`!LK_\\*` 常量之一。 "
"一个文件中的多个区域可以被同时锁定，但是不能重叠。 相邻的区域不会被合并；它们必须单独被解锁。"

#: ../../library/msvcrt.rst:45
msgid ""
"Raises an :ref:`auditing event <auditing>` ``msvcrt.locking`` with "
"arguments ``fd``, ``mode``, ``nbytes``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``msvcrt.locking``，附带参数 ``fd``, ``mode``, "
"``nbytes``。"

#: ../../library/msvcrt.rst:51
#, fuzzy
msgid ""
"Locks the specified bytes. If the bytes cannot be locked, the program "
"immediately tries again after 1 second. If, after 10 attempts, the bytes "
"cannot be locked, :exc:`OSError` is raised."
msgstr ""
"锁定指定的字节数据。 如果字节数据无法被锁定，程序会在 1 秒之后立即重试。 如果在 10 次尝试后字节数据仍无法被锁定，则会引发 "
":exc:`OSError`。"

#: ../../library/msvcrt.rst:59
msgid ""
"Locks the specified bytes. If the bytes cannot be locked, :exc:`OSError` "
"is raised."
msgstr "锁定指定的字节数据。 如果字节数据无法被锁定，则会引发 :exc:`OSError`。"

#: ../../library/msvcrt.rst:65
msgid "Unlocks the specified bytes, which must have been previously locked."
msgstr "解锁指定的字节数据，该对象必须在之前被锁定。"

#: ../../library/msvcrt.rst:70
msgid ""
"Set the line-end translation mode for the file descriptor *fd*. To set it"
" to text mode, *flags* should be :const:`os.O_TEXT`; for binary, it "
"should be :const:`os.O_BINARY`."
msgstr ""
"设置文件描述符 *fd* 的行结束符转写模式。 要将其设为文本模式，则 *flags* 应当为 "
":const:`os.O_TEXT`；设为二进制模式，则应当为 :const:`os.O_BINARY`。"

#: ../../library/msvcrt.rst:77
#, fuzzy
msgid ""
"Create a C runtime file descriptor from the file handle *handle*. The "
"*flags* parameter should be a bitwise OR of :const:`os.O_APPEND`, "
":const:`os.O_RDONLY`, :const:`os.O_TEXT` and :const:`os.O_NOINHERIT`. The"
" returned file descriptor may be used as a parameter to :func:`os.fdopen`"
" to create a file object."
msgstr ""
"基于文件句柄 *handle* 创建一个 C 运行时文件描述符。 *flags* 形参应当 :const:`os.O_APPEND`, "
":const:`os.O_RDONLY` 和 :const:`os.O_TEXT` 按位 OR 的结果。 返回的文件描述符可以被用作 "
":func:`os.fdopen` 的形参以创建一个文件对象。"

#: ../../library/msvcrt.rst:83
msgid ""
"The file descriptor is inheritable by default. Pass "
":const:`os.O_NOINHERIT` flag to make it non inheritable."
msgstr ""

#: ../../library/msvcrt.rst:86
msgid ""
"Raises an :ref:`auditing event <auditing>` ``msvcrt.open_osfhandle`` with"
" arguments ``handle``, ``flags``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``msvcrt.open_osfhandle``，附带参数 ``handle``, "
"``flags``。"

#: ../../library/msvcrt.rst:91
#, fuzzy
msgid ""
"Return the file handle for the file descriptor *fd*. Raises "
":exc:`OSError` if *fd* is not recognized."
msgstr "返回文件描述符 *fd* 的文件句柄。 如果 *fd* 不能被识别则会引发 :exc:`OSError`。"

#: ../../library/msvcrt.rst:94
msgid ""
"Raises an :ref:`auditing event <auditing>` ``msvcrt.get_osfhandle`` with "
"argument ``fd``."
msgstr "引发一个 :ref:`审计事件 <auditing>` ``msvcrt.get_osfhandle``，附带参数 ``fd``。"

#: ../../library/msvcrt.rst:100
msgid "Console I/O"
msgstr "控制台 I/O"

#: ../../library/msvcrt.rst:105
#, fuzzy
msgid ""
"Returns a nonzero value if a keypress is waiting to be read. Otherwise, "
"return 0."
msgstr "如果有某个按键正在等待被读取则返回 ``True``。"

#: ../../library/msvcrt.rst:111
#, fuzzy
msgid ""
"Read a keypress and return the resulting character as a byte string. "
"Nothing is echoed to the console. This call will block if a keypress is "
"not already available, but will not wait for :kbd:`Enter` to be pressed. "
"If the pressed key was a special function key, this will return "
"``'\\000'`` or ``'\\xe0'``; the next call will return the keycode. The "
":kbd:`Control-C` keypress cannot be read with this function."
msgstr ""
"读取一个按键并将结果字符返回为一个字节串。 不会有内容回显到缝制台。 如果还没有任何键被按下此调用将会阻塞，但它将不会等待 "
":kbd:`Enter` 被按下。 如果按下的键是一个特殊功能键，此函数将返回 ``'\\000'`` 或 "
"``'\\xe0'``；下一次调用将返回键代码。 :kbd:`Control-C` 按钮无法使用此函数来读取。"

#: ../../library/msvcrt.rst:121
msgid "Wide char variant of :func:`getch`, returning a Unicode value."
msgstr ":func:`getch` 的宽字符版本，返回一个 Unicode 值。"

#: ../../library/msvcrt.rst:126
#, fuzzy
msgid ""
"Similar to :func:`getch`, but the keypress will be echoed if it "
"represents a printable character."
msgstr "类似于 :func:`getch`，但按键如果表示一个可打印字符则它将被回显。"

#: ../../library/msvcrt.rst:132
msgid "Wide char variant of :func:`getche`, returning a Unicode value."
msgstr ":func:`getche` 的宽字符版本，返回一个 Unicode 值。"

#: ../../library/msvcrt.rst:137
msgid "Print the byte string *char* to the console without buffering."
msgstr "将字符串 *char* 打印到终端，不使用缓冲区。"

#: ../../library/msvcrt.rst:142
msgid "Wide char variant of :func:`putch`, accepting a Unicode value."
msgstr ":func:`putch` 的宽字符版本，接受一个 Unicode 值。"

#: ../../library/msvcrt.rst:147
msgid ""
"Cause the byte string *char* to be \"pushed back\" into the console "
"buffer; it will be the next character read by :func:`getch` or "
":func:`getche`."
msgstr "使得字节串 *char* 被“推回”终端缓冲区；它将是被 :func:`getch` 或 :func:`getche` 读取的下一个字符。"

#: ../../library/msvcrt.rst:153
msgid "Wide char variant of :func:`ungetch`, accepting a Unicode value."
msgstr ":func:`ungetch` 的宽字符版本，接受一个 Unicode 值。"

#: ../../library/msvcrt.rst:159
msgid "Other Functions"
msgstr "其他函数"

#: ../../library/msvcrt.rst:164
msgid ""
"Force the :c:func:`malloc` heap to clean itself up and return unused "
"blocks to the operating system. On failure, this raises :exc:`OSError`."
msgstr "强制 :c:func:`malloc` 堆清空自身并将未使用的块返回给操作系统。 失败时，这将引发 :exc:`OSError`。"

#: ../../library/msvcrt.rst:170
msgid ""
"Changes the location where the C runtime writes an error message for an "
"error that might end the program. *mode* must be one of the "
":const:`!OUT_\\*` constants listed below  or :const:`REPORT_ERRMODE`. "
"Returns the old setting or -1 if an error occurs. Only available in "
":ref:`debug build of Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:179
msgid ""
"Error sink is determined by the app's type. Only available in :ref:`debug"
" build of Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:185
msgid ""
"Error sink is a standard error. Only available in :ref:`debug build of "
"Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:191
msgid ""
"Error sink is a message box. Only available in :ref:`debug build of "
"Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:197
msgid ""
"Report the current error mode value. Only available in :ref:`debug build "
"of Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:203
msgid ""
"Specifies the destination or destinations for a specific report type "
"generated by :c:func:`!_CrtDbgReport` in the MS VC++ runtime. *type* must"
" be one of the :const:`!CRT_\\*` constants listed below. *mode* must be "
"one of the :const:`!CRTDBG_\\*` constants listed below. Only available in"
" :ref:`debug build of Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:212
msgid ""
"After you use :func:`CrtSetReportMode` to specify "
":const:`CRTDBG_MODE_FILE`, you can specify the file handle to receive the"
" message text. *type* must be one of the :const:`!CRT_\\*` constants "
"listed below. *file* should be the file handle your want specified. Only "
"available in :ref:`debug build of Python <debug-build>`."
msgstr ""

#: ../../library/msvcrt.rst:221
msgid "Warnings, messages, and information that doesn't need immediate attention."
msgstr ""

#: ../../library/msvcrt.rst:226
msgid ""
"Errors, unrecoverable problems, and issues that require immediate "
"attention."
msgstr ""

#: ../../library/msvcrt.rst:231
msgid "Assertion failures."
msgstr ""

#: ../../library/msvcrt.rst:236
msgid "Writes the message to the debugger's output window."
msgstr ""

#: ../../library/msvcrt.rst:241
msgid ""
"Writes the message to a user-supplied file handle. "
":func:`CrtSetReportFile` should be called to define the specific file or "
"stream to use as the destination."
msgstr ""

#: ../../library/msvcrt.rst:248
msgid ""
"Creates a message box to display the message along with the ``Abort``, "
"``Retry``, and ``Ignore`` buttons."
msgstr ""

#: ../../library/msvcrt.rst:254
msgid "Returns current *mode* for the specified *type*."
msgstr ""

#: ../../library/msvcrt.rst:259
msgid "The CRT Assembly version, from the :file:`crtassem.h` header file."
msgstr "CRT 汇编版，来自 :file:`crtassem.h` 头文件。"

#: ../../library/msvcrt.rst:264
msgid "The VC Assembly public key token, from the :file:`crtassem.h` header file."
msgstr "VC 汇编公钥凭据，来自 :file:`crtassem.h` 头文件。"

#: ../../library/msvcrt.rst:269
msgid ""
"The Libraries Assembly name prefix, from the :file:`crtassem.h` header "
"file."
msgstr "库汇编名称前缀，来自 :file:`crtassem.h` 头文件。"

