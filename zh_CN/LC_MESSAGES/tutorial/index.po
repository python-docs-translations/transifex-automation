# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Shengjing Zhu <zsj950618@gmail.com>, 2020
# df2dc1c92e792f7ae8417c51df43db8f_594d92a <0f49be28017426edb1db1a2ab6e67088_717605>, 2020
# Siyuan Xu, 2020
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-23 16:32+0000\n"
"PO-Revision-Date: 2020-05-30 12:16+0000\n"
"Last-Translator: Siyuan Xu, 2020\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/"
"teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../tutorial/index.rst:5
msgid "The Python Tutorial"
msgstr "Python 教程"

#: ../../tutorial/index.rst:7
msgid ""
"Python is an easy to learn, powerful programming language. It has efficient "
"high-level data structures and a simple but effective approach to object-"
"oriented programming. Python's elegant syntax and dynamic typing, together "
"with its interpreted nature, make it an ideal language for scripting and "
"rapid application development in many areas on most platforms."
msgstr ""
"Python 是一种易于学习又功能强大的编程语言。它提供了高效的高级数据结构，还能简"
"单有效地面向对象编程。Python 优雅的语法和动态类型，以及解释型语言的本质，使它"
"成为多数平台上写脚本和快速开发应用的理想语言。"

#: ../../tutorial/index.rst:13
msgid ""
"The Python interpreter and the extensive standard library are freely "
"available in source or binary form for all major platforms from the Python "
"Web site, https://www.python.org/, and may be freely distributed. The same "
"site also contains distributions of and pointers to many free third party "
"Python modules, programs and tools, and additional documentation."
msgstr ""
"Python 解释器及丰富的标准库，提供了适用于各个主要系统平台的源码或机器码，这些"
"可以到 Python 官网 https://www.python.org/ 免费获取，并可自由地分发。许多免费"
"的第三方 Python 模块、程序、工具和它们的文档，也能在这个网站上找到对应内容或"
"链接。"

#: ../../tutorial/index.rst:19
msgid ""
"The Python interpreter is easily extended with new functions and data types "
"implemented in C or C++ (or other languages callable from C). Python is also "
"suitable as an extension language for customizable applications."
msgstr ""
"Python 解释器易于扩展，可以使用 C 或 C++（或者其他可以从 C 调用的语言）扩展新"
"的功能和数据类型。Python 也可用作可定制化软件中的扩展程序语言。"

#: ../../tutorial/index.rst:23
msgid ""
"This tutorial introduces the reader informally to the basic concepts and "
"features of the Python language and system. It helps to have a Python "
"interpreter handy for hands-on experience, but all examples are self-"
"contained, so the tutorial can be read off-line as well."
msgstr ""
"这个教程非正式地介绍了 Python 语言和系统的基本概念和功能。最好在阅读的时候准"
"备一个 Python 解释器进行练习。所有的例子都是相互独立的，所以这个教程也可以离"
"线阅读。"

#: ../../tutorial/index.rst:28
msgid ""
"For a description of standard objects and modules, see :ref:`library-"
"index`. :ref:`reference-index` gives a more formal definition of the "
"language.  To write extensions in C or C++, read :ref:`extending-index` and :"
"ref:`c-api-index`. There are also several books covering Python in depth."
msgstr ""
"有关标准的对象和模块，请参阅 :ref:`library-index`。:ref:`reference-index` 提"
"供了更正式的语言定义。想要编写 C 或者 C++ 扩展可以参考 :ref:`extending-"
"index` 和 :ref:`c-api-index`。另外还有不少书籍深入讲解 Python。"

#: ../../tutorial/index.rst:33
msgid ""
"This tutorial does not attempt to be comprehensive and cover every single "
"feature, or even every commonly used feature. Instead, it introduces many of "
"Python's most noteworthy features, and will give you a good idea of the "
"language's flavor and style. After reading it, you will be able to read and "
"write Python modules and programs, and you will be ready to learn more about "
"the various Python library modules described in :ref:`library-index`."
msgstr ""
"这个教程并没有完整地介绍每一个功能，甚至可能没有涉及全部的常用功能。这个教程"
"只介绍 Python 中最值得注意的功能，也会让你体会到这个语言的风格特色。学习完这"
"个教程，你将可以阅读和编写 Python 模块和程序，也可以开始学习 :ref:`library-"
"index`。"

#: ../../tutorial/index.rst:40
msgid "The :ref:`glossary` is also worth going through."
msgstr ":ref:`glossary` 也很值得一读。"
