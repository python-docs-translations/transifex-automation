# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Freesand Leo <yuqinju@163.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-20 00:52+0000\n"
"PO-Revision-Date: 2024-07-20 00:54+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2024\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../deprecations/pending-removal-in-3.14.rst:2
msgid "Pending Removal in Python 3.14"
msgstr "计划在 Python 3.14 中移除"

#: ../../deprecations/pending-removal-in-3.14.rst:4
msgid ""
":mod:`argparse`: The *type*, *choices*, and *metavar* parameters of "
":class:`!argparse.BooleanOptionalAction` are deprecated and will be removed "
"in 3.14. (Contributed by Nikita Sobolev in :gh:`92248`.)"
msgstr ""
":mod:`argparse`: :class:`!argparse.BooleanOptionalAction` 的 *type*, "
"*choices* 和 *metavar* 形参已被弃用并将在 3.14 中移除。 （由 Nikita Sobolev 在 :gh:`92248` "
"中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:9
msgid ""
":mod:`ast`: The following features have been deprecated in documentation "
"since Python 3.8, now cause a :exc:`DeprecationWarning` to be emitted at "
"runtime when they are accessed or used, and will be removed in Python 3.14:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:13
msgid ":class:`!ast.Num`"
msgstr ":class:`!ast.Num`"

#: ../../deprecations/pending-removal-in-3.14.rst:14
msgid ":class:`!ast.Str`"
msgstr ":class:`!ast.Str`"

#: ../../deprecations/pending-removal-in-3.14.rst:15
msgid ":class:`!ast.Bytes`"
msgstr ":class:`!ast.Bytes`"

#: ../../deprecations/pending-removal-in-3.14.rst:16
msgid ":class:`!ast.NameConstant`"
msgstr ":class:`!ast.NameConstant`"

#: ../../deprecations/pending-removal-in-3.14.rst:17
msgid ":class:`!ast.Ellipsis`"
msgstr ":class:`!ast.Ellipsis`"

#: ../../deprecations/pending-removal-in-3.14.rst:19
msgid ""
"Use :class:`ast.Constant` instead. (Contributed by Serhiy Storchaka in "
":gh:`90953`.)"
msgstr "请改用 :class:`ast.Constant`。 （由 Serhiy Storchaka 在 :gh:`90953` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:22
msgid ""
":mod:`collections.abc`: Deprecated :class:`~collections.abc.ByteString`. "
"Prefer :class:`!Sequence` or :class:`~collections.abc.Buffer`. For use in "
"typing, prefer a union, like ``bytes | bytearray``, or "
":class:`collections.abc.Buffer`. (Contributed by Shantanu Jain in "
":gh:`91896`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:28
msgid ""
":mod:`email`: Deprecated the *isdst* parameter in "
":func:`email.utils.localtime`. (Contributed by Alan Williams in "
":gh:`72346`.)"
msgstr ""
":mod:`email`: 已弃用 :func:`email.utils.localtime` 中的 *isdst* 形参。 （由 Alan "
"Williams 在 :gh:`72346` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:31
msgid ""
":mod:`importlib`: ``__package__`` and ``__cached__`` will cease to be set or"
" taken into consideration by the import system (:gh:`97879`)."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:34
msgid ":mod:`importlib.abc` deprecated classes:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:36
msgid ":class:`!importlib.abc.ResourceReader`"
msgstr ":class:`!importlib.abc.ResourceReader`"

#: ../../deprecations/pending-removal-in-3.14.rst:37
msgid ":class:`!importlib.abc.Traversable`"
msgstr ":class:`!importlib.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:38
msgid ":class:`!importlib.abc.TraversableResources`"
msgstr ":class:`!importlib.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:40
msgid "Use :mod:`importlib.resources.abc` classes instead:"
msgstr "使用 :mod:`importlib.resources.abc` 类代替:"

#: ../../deprecations/pending-removal-in-3.14.rst:42
msgid ":class:`importlib.resources.abc.Traversable`"
msgstr ":class:`importlib.resources.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:43
msgid ":class:`importlib.resources.abc.TraversableResources`"
msgstr ":class:`importlib.resources.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:45
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr "（由 Jason R. Coombs 和 Hugo van Kemenade 在 :gh:`93963` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:47
msgid ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be"
" removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""
":mod:`itertools` 具有对 copy, deepcopy 和 pickle 等操作的未写入文档的、低效的、历史上充满问题的且不稳定的支持。"
" 这将在 3.14 中移除以显著减少代码量和维护负担。 （由 Raymond Hettinger 在 :gh:`101588` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:53
msgid ""
":mod:`multiprocessing`: The default start method will change to a safer one "
"on Linux, BSDs, and other non-macOS POSIX platforms where ``'fork'`` is "
"currently the default (:gh:`84559`). Adding a runtime warning about this was"
" deemed too disruptive as the majority of code is not expected to care. Use "
"the :func:`~multiprocessing.get_context` or "
":func:`~multiprocessing.set_start_method` APIs to explicitly specify when "
"your code *requires* ``'fork'``.  See :ref:`multiprocessing-start-methods`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:61
msgid ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` and "
":meth:`~pathlib.PurePath.relative_to`: passing additional arguments is "
"deprecated."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:65
msgid ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` and :func:`~pkgutil.get_loader`"
" now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:70
msgid ":mod:`pty`:"
msgstr ":mod:`pty`:"

#: ../../deprecations/pending-removal-in-3.14.rst:72
msgid "``master_open()``: use :func:`pty.openpty`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:73
msgid "``slave_open()``: use :func:`pty.openpty`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:75
msgid ":mod:`sqlite3`:"
msgstr ":mod:`sqlite3`:"

#: ../../deprecations/pending-removal-in-3.14.rst:77
msgid ":data:`~sqlite3.version` and :data:`~sqlite3.version_info`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:79
msgid ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if "
":ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* "
"is a sequence instead of a :class:`dict`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:83
msgid ""
"date and datetime adapter, date and timestamp converter: see the "
":mod:`sqlite3` documentation for suggested replacement recipes."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:86
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.14. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:93
msgid ""
":mod:`typing`: :class:`~typing.ByteString`, deprecated since Python 3.9, now"
" causes a :exc:`DeprecationWarning` to be emitted when it is used."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:96
msgid ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in "
":gh:`88168`.)"
msgstr ""
