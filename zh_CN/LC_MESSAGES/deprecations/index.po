# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Unknownuserfrommars, 2024
# Fw[a]rd <howard.main@outlook.com>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-29 04:36+0000\n"
"PO-Revision-Date: 2024-07-29 04:37+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/"
"teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../deprecations/index.rst:2
msgid "Deprecations"
msgstr ""

#: ../../deprecations/pending-removal-in-3.13.rst:2
msgid "Pending Removal in Python 3.13"
msgstr "计划在 Python 3.13 中移除"

#: ../../deprecations/pending-removal-in-3.13.rst:4
msgid "Modules (see :pep:`594`):"
msgstr "模块 (参见 :pep:`594`):"

#: ../../deprecations/pending-removal-in-3.13.rst:6
msgid ":mod:`aifc`"
msgstr ":mod:`aifc`"

#: ../../deprecations/pending-removal-in-3.13.rst:7
msgid ":mod:`audioop`"
msgstr ":mod:`audioop`"

#: ../../deprecations/pending-removal-in-3.13.rst:8
msgid ":mod:`cgi`"
msgstr ":mod:`cgi`"

#: ../../deprecations/pending-removal-in-3.13.rst:9
msgid ":mod:`cgitb`"
msgstr ":mod:`cgitb`"

#: ../../deprecations/pending-removal-in-3.13.rst:10
msgid ":mod:`chunk`"
msgstr ":mod:`chunk`"

#: ../../deprecations/pending-removal-in-3.13.rst:11
msgid ":mod:`crypt`"
msgstr ":mod:`crypt`"

#: ../../deprecations/pending-removal-in-3.13.rst:12
msgid ":mod:`imghdr`"
msgstr ":mod:`imghdr`"

#: ../../deprecations/pending-removal-in-3.13.rst:13
msgid ":mod:`mailcap`"
msgstr ":mod:`mailcap`"

#: ../../deprecations/pending-removal-in-3.13.rst:14
msgid ":mod:`msilib`"
msgstr ":mod:`msilib`"

#: ../../deprecations/pending-removal-in-3.13.rst:15
msgid ":mod:`nis`"
msgstr ":mod:`nis`"

#: ../../deprecations/pending-removal-in-3.13.rst:16
msgid ":mod:`nntplib`"
msgstr ":mod:`nntplib`"

#: ../../deprecations/pending-removal-in-3.13.rst:17
msgid ":mod:`ossaudiodev`"
msgstr ":mod:`ossaudiodev`"

#: ../../deprecations/pending-removal-in-3.13.rst:18
msgid ":mod:`pipes`"
msgstr ":mod:`pipes`"

#: ../../deprecations/pending-removal-in-3.13.rst:19
msgid ":mod:`sndhdr`"
msgstr ":mod:`sndhdr`"

#: ../../deprecations/pending-removal-in-3.13.rst:20
msgid ":mod:`spwd`"
msgstr ":mod:`spwd`"

#: ../../deprecations/pending-removal-in-3.13.rst:21
msgid ":mod:`sunau`"
msgstr ":mod:`sunau`"

#: ../../deprecations/pending-removal-in-3.13.rst:22
msgid ":mod:`telnetlib`"
msgstr ":mod:`telnetlib`"

#: ../../deprecations/pending-removal-in-3.13.rst:23
msgid ":mod:`uu`"
msgstr ":mod:`uu`"

#: ../../deprecations/pending-removal-in-3.13.rst:24
msgid ":mod:`xdrlib`"
msgstr ":mod:`xdrlib`"

#: ../../deprecations/pending-removal-in-3.13.rst:26
msgid "Other modules:"
msgstr "其他模块："

#: ../../deprecations/pending-removal-in-3.13.rst:28
msgid ":mod:`!lib2to3`, and the :program:`2to3` program (:gh:`84540`)"
msgstr ":mod:`!lib2to3`，以及 :program:`2to3` 程序 (:gh:`84540`)"

#: ../../deprecations/pending-removal-in-3.13.rst:30
msgid "APIs:"
msgstr "API:"

#: ../../deprecations/pending-removal-in-3.13.rst:32
msgid ":class:`!configparser.LegacyInterpolation` (:gh:`90765`)"
msgstr ":class:`!configparser.LegacyInterpolation` (:gh:`90765`)"

#: ../../deprecations/pending-removal-in-3.13.rst:33
msgid "``locale.resetlocale()`` (:gh:`90817`)"
msgstr "``locale.resetlocale()`` (:gh:`90817`)"

#: ../../deprecations/pending-removal-in-3.13.rst:34
msgid ":meth:`!turtle.RawTurtle.settiltangle` (:gh:`50096`)"
msgstr ":meth:`!turtle.RawTurtle.settiltangle` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:35
msgid ":func:`!unittest.findTestCases` (:gh:`50096`)"
msgstr ":func:`!unittest.findTestCases` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:36
msgid ":func:`!unittest.getTestCaseNames` (:gh:`50096`)"
msgstr ":func:`!unittest.getTestCaseNames` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:37
msgid ":func:`!unittest.makeSuite` (:gh:`50096`)"
msgstr ":func:`!unittest.makeSuite` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:38
msgid ":meth:`!unittest.TestProgram.usageExit` (:gh:`67048`)"
msgstr ":meth:`!unittest.TestProgram.usageExit` (:gh:`67048`)"

#: ../../deprecations/pending-removal-in-3.13.rst:39
msgid ":class:`!webbrowser.MacOSX` (:gh:`86421`)"
msgstr ":class:`!webbrowser.MacOSX` (:gh:`86421`)"

#: ../../deprecations/pending-removal-in-3.13.rst:40
msgid ":class:`classmethod` descriptor chaining (:gh:`89519`)"
msgstr ":class:`classmethod` 描述器串联 (:gh:`89519`)"

#: ../../deprecations/pending-removal-in-3.13.rst:41
msgid ":mod:`importlib.resources` deprecated methods:"
msgstr ":mod:`importlib.resources` 中已弃用的方法："

#: ../../deprecations/pending-removal-in-3.13.rst:43
msgid "``contents()``"
msgstr "``contents()``"

#: ../../deprecations/pending-removal-in-3.13.rst:44
msgid "``is_resource()``"
msgstr "``is_resource()``"

#: ../../deprecations/pending-removal-in-3.13.rst:45
msgid "``open_binary()``"
msgstr "``open_binary()``"

#: ../../deprecations/pending-removal-in-3.13.rst:46
msgid "``open_text()``"
msgstr "``open_text()``"

#: ../../deprecations/pending-removal-in-3.13.rst:47
msgid "``path()``"
msgstr "``path()``"

#: ../../deprecations/pending-removal-in-3.13.rst:48
msgid "``read_binary()``"
msgstr "``read_binary()``"

#: ../../deprecations/pending-removal-in-3.13.rst:49
msgid "``read_text()``"
msgstr "``read_text()``"

#: ../../deprecations/pending-removal-in-3.13.rst:51
msgid ""
"Use :func:`importlib.resources.files()` instead.  Refer to `importlib-"
"resources: Migrating from Legacy <https://importlib-resources.readthedocs.io/"
"en/latest/using.html#migrating-from-legacy>`_ (:gh:`106531`)"
msgstr ""
"请改用 :func:`importlib.resources.files()`。 参见 `importlib-resources: "
"Migrating from Legacy <https://importlib-resources.readthedocs.io/en/latest/"
"using.html#migrating-from-legacy>`_ (:gh:`106531`)"

#: ../../deprecations/pending-removal-in-3.14.rst:2
msgid "Pending Removal in Python 3.14"
msgstr "计划在 Python 3.14 中移除"

#: ../../deprecations/pending-removal-in-3.14.rst:4
msgid ""
":mod:`argparse`: The *type*, *choices*, and *metavar* parameters of :class:`!"
"argparse.BooleanOptionalAction` are deprecated and will be removed in 3.14. "
"(Contributed by Nikita Sobolev in :gh:`92248`.)"
msgstr ""
":mod:`argparse`: :class:`!argparse.BooleanOptionalAction` 的 *type*, "
"*choices* 和 *metavar* 形参已被弃用并将在 3.14 中移除。 （由 Nikita Sobolev "
"在 :gh:`92248` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:9
msgid ""
":mod:`ast`: The following features have been deprecated in documentation "
"since Python 3.8, now cause a :exc:`DeprecationWarning` to be emitted at "
"runtime when they are accessed or used, and will be removed in Python 3.14:"
msgstr ""
":mod:`ast`: 以下特性自 Python 3.8 起已在文档中声明弃用，现在当运行时如果它们"
"被访问或使用时将发出 :exc:`DeprecationWarning`，并将在 Python 3.14 中移除："

#: ../../deprecations/pending-removal-in-3.14.rst:13
msgid ":class:`!ast.Num`"
msgstr ":class:`!ast.Num`"

#: ../../deprecations/pending-removal-in-3.14.rst:14
msgid ":class:`!ast.Str`"
msgstr ":class:`!ast.Str`"

#: ../../deprecations/pending-removal-in-3.14.rst:15
msgid ":class:`!ast.Bytes`"
msgstr ":class:`!ast.Bytes`"

#: ../../deprecations/pending-removal-in-3.14.rst:16
msgid ":class:`!ast.NameConstant`"
msgstr ":class:`!ast.NameConstant`"

#: ../../deprecations/pending-removal-in-3.14.rst:17
msgid ":class:`!ast.Ellipsis`"
msgstr ":class:`!ast.Ellipsis`"

#: ../../deprecations/pending-removal-in-3.14.rst:19
msgid ""
"Use :class:`ast.Constant` instead. (Contributed by Serhiy Storchaka in :gh:"
"`90953`.)"
msgstr ""
"请改用 :class:`ast.Constant`。 （由 Serhiy Storchaka 在 :gh:`90953` 中贡"
"献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:22
msgid ":mod:`asyncio`:"
msgstr ":mod:`asyncio`:"

#: ../../deprecations/pending-removal-in-3.14.rst:24
msgid ""
"The child watcher classes :class:`~asyncio.MultiLoopChildWatcher`, :class:"
"`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` and :"
"class:`~asyncio.SafeChildWatcher` are deprecated and will be removed in "
"Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:30
msgid ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, :meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` and :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` are deprecated and will be "
"removed in Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
":func:`asyncio.set_child_watcher`、:func:`asyncio.get_child_watcher`、:meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` 和 :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` 已弃用，并将在 Python 3.14 中移"
"除。（由 Kumar Aditya 在 :gh:`94597` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:36
msgid ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van "
"Rossum in :gh:`100160`.)"
msgstr ""
"现在默认事件循环策略的 :meth:`~asyncio.get_event_loop` 方法在当前事件循环未设"
"置并决定创建一个时将发出 :exc:`DeprecationWarning`。 （由 Serhiy Storchaka "
"和 Guido van Rossum 在 :gh:`100160` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:41
msgid ""
":mod:`collections.abc`: Deprecated :class:`~collections.abc.ByteString`. "
"Prefer :class:`!Sequence` or :class:`~collections.abc.Buffer`. For use in "
"typing, prefer a union, like ``bytes | bytearray``, or :class:`collections."
"abc.Buffer`. (Contributed by Shantanu Jain in :gh:`91896`.)"
msgstr ""
":mod:`collections.abc`: 已弃用 :class:`~collections.abc.ByteString`。 推荐改"
"用 :class:`!Sequence` 或 :class:`~collections.abc.Buffer`。 用于类型标注时，"
"则推荐并集运算符，如 ``bytes | bytearray``，或 :class:`collections.abc."
"Buffer`。 （由 Shantanu Jain 在 :gh:`91896` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:47
msgid ""
":mod:`email`: Deprecated the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"
msgstr ""
":mod:`email`: 已弃用 :func:`email.utils.localtime` 中的 *isdst* 形参。 （由 "
"Alan Williams 在 :gh:`72346` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:50
msgid ""
":mod:`importlib`: ``__package__`` and ``__cached__`` will cease to be set or "
"taken into consideration by the import system (:gh:`97879`)."
msgstr ""
":mod:`importlib`: ``__package__`` 和 ``__cached__`` 将不再被设置或是被导入系"
"统纳入考量 (:gh:`97879`)。"

#: ../../deprecations/pending-removal-in-3.14.rst:53
msgid ":mod:`importlib.abc` deprecated classes:"
msgstr ":mod:`importlib.abc` 中已弃用的类："

#: ../../deprecations/pending-removal-in-3.14.rst:55
msgid ":class:`!importlib.abc.ResourceReader`"
msgstr ":class:`!importlib.abc.ResourceReader`"

#: ../../deprecations/pending-removal-in-3.14.rst:56
msgid ":class:`!importlib.abc.Traversable`"
msgstr ":class:`!importlib.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:57
msgid ":class:`!importlib.abc.TraversableResources`"
msgstr ":class:`!importlib.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:59
msgid "Use :mod:`importlib.resources.abc` classes instead:"
msgstr "使用 :mod:`importlib.resources.abc` 类代替:"

#: ../../deprecations/pending-removal-in-3.14.rst:61
msgid ":class:`importlib.resources.abc.Traversable`"
msgstr ":class:`importlib.resources.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:62
msgid ":class:`importlib.resources.abc.TraversableResources`"
msgstr ":class:`importlib.resources.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:64
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr "（由 Jason R. Coombs 和 Hugo van Kemenade 在 :gh:`93963` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:66
msgid ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be "
"removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""
":mod:`itertools` 具有对 copy, deepcopy 和 pickle 等操作的未写入文档的、低效"
"的、历史上充满问题的且不稳定的支持。 这将在 3.14 中移除以显著减少代码量和维护"
"负担。 （由 Raymond Hettinger 在 :gh:`101588` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:72
msgid ""
":mod:`multiprocessing`: The default start method will change to a safer one "
"on Linux, BSDs, and other non-macOS POSIX platforms where ``'fork'`` is "
"currently the default (:gh:`84559`). Adding a runtime warning about this was "
"deemed too disruptive as the majority of code is not expected to care. Use "
"the :func:`~multiprocessing.get_context` or :func:`~multiprocessing."
"set_start_method` APIs to explicitly specify when your code *requires* "
"``'fork'``.  See :ref:`multiprocessing-start-methods`."
msgstr ""
":mod:`multiprocessing`: 默认的启动方法在目前默认使用 ``'fork'`` 的 Linux, "
"BSD 和其他非 macOS POSIX 平台上将改为更安全的方法 (:gh:`84559`)。 为此添加运"
"行时警告将带来糟糕的体验因为大部分代码并不会关心这个问题。 当你的代码 *需要* "
"``'fork'`` 时请使用 :func:`~multiprocessing.get_context` 或 :func:"
"`~multiprocessing.set_start_method` API 来显式地指明。 参见 :ref:"
"`multiprocessing-start-methods`。"

#: ../../deprecations/pending-removal-in-3.14.rst:80
msgid ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` and :meth:`~pathlib."
"PurePath.relative_to`: passing additional arguments is deprecated."
msgstr ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` 和 :meth:`~pathlib."
"PurePath.relative_to`: 传入额外参数的做法已被弃用。"

#: ../../deprecations/pending-removal-in-3.14.rst:84
msgid ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` and :func:`~pkgutil.get_loader` "
"now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""
":mod:`pkgutil`: 现在 :func:`~pkgutil.find_loader` 和 :func:`~pkgutil."
"get_loader` 将引发 :exc:`DeprecationWarning`；请改用 :func:`importlib.util."
"find_spec`。 （由 Nikita Sobolev 在 :gh:`97850` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:89
msgid ":mod:`pty`:"
msgstr ":mod:`pty`:"

#: ../../deprecations/pending-removal-in-3.14.rst:91
msgid "``master_open()``: use :func:`pty.openpty`."
msgstr "``master_open()``: 使用 :func:`pty.openpty`。"

#: ../../deprecations/pending-removal-in-3.14.rst:92
msgid "``slave_open()``: use :func:`pty.openpty`."
msgstr "``slave_open()``: 使用 :func:`pty.openpty`。"

#: ../../deprecations/pending-removal-in-3.14.rst:94
msgid ":mod:`sqlite3`:"
msgstr ":mod:`sqlite3`:"

#: ../../deprecations/pending-removal-in-3.14.rst:96
msgid ":data:`~sqlite3.version` and :data:`~sqlite3.version_info`."
msgstr ":data:`~sqlite3.version` 和 :data:`~sqlite3.version_info`。"

#: ../../deprecations/pending-removal-in-3.14.rst:98
msgid ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if :"
"ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* is "
"a sequence instead of a :class:`dict`."
msgstr ""
"如果使用了 :ref:`命名占位符 <sqlite3-placeholders>` 且 *parameters* 是一个序"
"列而不是 :class:`dict` 则选择 :meth:`~sqlite3.Cursor.execute` 和 :meth:"
"`~sqlite3.Cursor.executemany`。"

#: ../../deprecations/pending-removal-in-3.14.rst:102
msgid ""
"date and datetime adapter, date and timestamp converter: see the :mod:"
"`sqlite3` documentation for suggested replacement recipes."
msgstr ""
"date 和 datetime 适配器，date 和 timestamp 转换器：请参阅 :mod:`sqlite3` 文档"
"了解推荐的替代方案。"

#: ../../deprecations/pending-removal-in-3.14.rst:105
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.14. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
":class:`types.CodeType`: 访问 :attr:`~codeobject.co_lnotab` 的做法自 3.10 起"
"已在 :pep:`626` 中被弃用并曾计划在 3.12 中移除，但实际上在 3.12 中仅设置了 :"
"exc:`DeprecationWarning`。 可能会在 3.14 中移除。 （由 Nikita Sobolev 在 :gh:"
"`101866` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:112
msgid ""
":mod:`typing`: :class:`~typing.ByteString`, deprecated since Python 3.9, now "
"causes a :exc:`DeprecationWarning` to be emitted when it is used."
msgstr ""
":mod:`typing`: :class:`~typing.ByteString` 自 Python 3.9 起已被弃用，现在当被"
"使用时将会发出 :exc:`DeprecationWarning`。"

#: ../../deprecations/pending-removal-in-3.14.rst:115
msgid ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in :gh:"
"`88168`.)"
msgstr ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` 已被弃用：它不应被作为公有 "
"API。 （由 Gregory P. Smith 在 :gh:`88168` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending Removal in Python 3.15"
msgstr "Python 3.15 中的待移除功能"

#: ../../deprecations/pending-removal-in-3.15.rst:4
msgid ""
":class:`http.server.CGIHTTPRequestHandler` will be removed along with its "
"related ``--cgi`` flag to ``python -m http.server``.  It was obsolete and "
"rarely used.  No direct replacement exists.  *Anything* is better than CGI "
"to interface a web server with a request handler."
msgstr ""
":class:`http.server.CGIHTTPRequestHandler` 将同 ``python -m http.server`` 中"
"与其相关的 ``--cgi`` 旗标一起被移除。 它已经过时并且很少被使用。 不存在直接的"
"替代品。 对于建立 Web 服务器与请求处理器的接口的任务来说 *任何东西* 都比 CGI "
"要好。"

#: ../../deprecations/pending-removal-in-3.15.rst:9
msgid ""
":class:`locale`: :func:`locale.getdefaultlocale` was deprecated in Python "
"3.11 and originally planned for removal in Python 3.13 (:gh:`90817`), but "
"removal has been postponed to Python 3.15. Use :func:`locale.setlocale()`, :"
"func:`locale.getencoding()` and :func:`locale.getlocale()` instead. "
"(Contributed by Hugo van Kemenade in :gh:`111187`.)"
msgstr ""
":class:`locale`: :func:`locale.getdefaultlocale` 在 Python 3.11 中已被弃用并"
"且原计划在 Python 3.13 中移除 (:gh:`90817`)，但移除时间已被推迟至 Python "
"3.15。 请改用 :func:`locale.setlocale()`, :func:`locale.getencoding()` 和 :"
"func:`locale.getlocale()`。 （由 Hugo van Kemenade 在 :gh:`111187` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:16
msgid ""
":mod:`pathlib`: :meth:`pathlib.PurePath.is_reserved` is deprecated and "
"scheduled for removal in Python 3.15. From Python 3.13 onwards, use ``os."
"path.isreserved`` to detect reserved paths on Windows."
msgstr ""

#: ../../deprecations/pending-removal-in-3.15.rst:21
msgid ""
":mod:`platform`: :func:`~platform.java_ver` is deprecated and will be "
"removed in 3.15. It was largely untested, had a confusing API, and was only "
"useful for Jython support. (Contributed by Nikita Sobolev in :gh:`116349`.)"
msgstr ""
":mod:`platform`: :func:`~platform.java_ver` 已被弃用并将在 3.15 中移除。 它几"
"乎未经测试，具有令人困惑的 API，并且仅适用于 Jython 支持。 （由 Nikita "
"Sobolev 在 :gh:`116349` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:27
msgid ""
":mod:`threading`: Passing any arguments to :func:`threading.RLock` is now "
"deprecated. C version allows any numbers of args and kwargs, but they are "
"just ignored. Python version does not allow any arguments. All arguments "
"will be removed from :func:`threading.RLock` in Python 3.15. (Contributed by "
"Nikita Sobolev in :gh:`102029`.)"
msgstr ""
":mod:`threading`: 向 :func:`threading.RLock` 传入任意参数的做法现已被弃用。 "
"C 版本允许任意数量的 args 和 kwargs，但它们都会被忽略。 Python 版本不允许任何"
"参数。 在 Python 3.15 中将从 :func:`threading.RLock` 移除所有参数。 （由 "
"Nikita Sobolev 在 :gh:`102029` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:34
msgid ":class:`typing.NamedTuple`:"
msgstr ":class:`typing.NamedTuple`:"

#: ../../deprecations/pending-removal-in-3.15.rst:36
msgid ""
"The undocumented keyword argument syntax for creating :class:`!NamedTuple` "
"classes (``NT = NamedTuple(\"NT\", x=int)``) is deprecated, and will be "
"disallowed in 3.15. Use the class-based syntax or the functional syntax "
"instead."
msgstr ""
"创建 :class:`!NamedTuple` 类 (``NT = NamedTuple(\"NT\", x=int)``) 的关键字参"
"数语法从未写入文档且已被弃用，并将在 3.15 中被禁止。 请改用基于类的语法或函数"
"语法。"

#: ../../deprecations/pending-removal-in-3.15.rst:40
msgid ""
"When using the functional syntax to create a :class:`!NamedTuple` class, "
"failing to pass a value to the *fields* parameter (``NT = "
"NamedTuple(\"NT\")``) is deprecated. Passing ``None`` to the *fields* "
"parameter (``NT = NamedTuple(\"NT\", None)``) is also deprecated. Both will "
"be disallowed in Python 3.15. To create a :class:`!NamedTuple` class with 0 "
"fields, use ``class NT(NamedTuple): pass`` or ``NT = NamedTuple(\"NT\", "
"[])``."
msgstr ""
"当使用函数式语法创建 :class:`!NamedTuple` 类时，不向 *fields* 形参传值的做法 "
"(``NT = NamedTuple(\"NT\")``) 已被弃用。 将 ``None`` 传给 *fields* 形参的做"
"法 (``NT = NamedTuple(\"NT\", None)``) 也已被弃用。 两者都将在 Python 3.15 中"
"被禁止。 要创建拥有 0 个字段的 :class:`!NamedTuple` 类，请使用 ``class "
"NT(NamedTuple): pass`` 或 ``NT = NamedTuple(\"NT\", [])``。"

#: ../../deprecations/pending-removal-in-3.15.rst:47
msgid ""
":class:`typing.TypedDict`: When using the functional syntax to create a :"
"class:`!TypedDict` class, failing to pass a value to the *fields* parameter "
"(``TD = TypedDict(\"TD\")``) is deprecated. Passing ``None`` to the *fields* "
"parameter (``TD = TypedDict(\"TD\", None)``) is also deprecated. Both will "
"be disallowed in Python 3.15. To create a :class:`!TypedDict` class with 0 "
"fields, use ``class TD(TypedDict): pass`` or ``TD = TypedDict(\"TD\", {})``."
msgstr ""
":class:`typing.TypedDict`: 当使用函数语法创建 :class:`!TypedDict` 类时，不向 "
"*fields* 形参传值 (``TD = TypedDict(\"TD\")``) 的行为已被弃用。 将 ``None`` "
"传给 *fields* 形参 (``TD = TypedDict(\"TD\", None)``) 的行为也已被弃用。 两者"
"都将在 Python 3.15 中被禁止。 要创建拥有 0 个字段的 :class:`!TypedDict` 类，"
"请使用 ``class TD(TypedDict): pass`` 或 ``TD = TypedDict(\"TD\", {})``。"

#: ../../deprecations/pending-removal-in-3.15.rst:54
msgid ""
":mod:`wave`: Deprecate the ``getmark()``, ``setmark()`` and ``getmarkers()`` "
"methods of the :class:`wave.Wave_read` and :class:`wave.Wave_write` classes. "
"They will be removed in Python 3.15. (Contributed by Victor Stinner in :gh:"
"`105096`.)"
msgstr ""
":mod:`wave`: 已弃用 :class:`wave.Wave_read` 和 :class:`wave.Wave_write` 类的 "
"``getmark()``, ``setmark()`` 和 ``getmarkers()`` 方法。 它们将在 Python 3.15 "
"中被移除。 （由 Victor Stinner 在 :gh:`105096` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.16.rst:2
msgid "Pending Removal in Python 3.16"
msgstr "计划在 Python 3.16 中移除"

#: ../../deprecations/pending-removal-in-3.16.rst:4
msgid ""
":mod:`array`: :class:`array.array` ``'u'`` type (:c:type:`wchar_t`): use the "
"``'w'`` type instead (``Py_UCS4``)."
msgstr ""

#: ../../deprecations/pending-removal-in-3.16.rst:8
msgid ""
":mod:`symtable`: Deprecate :meth:`symtable.Class.get_methods` due to the "
"lack of interest. (Contributed by Bénédikt Tran in :gh:`119698`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-future.rst:2
msgid "Pending Removal in Future Versions"
msgstr "计划在未来版本中移除"

#: ../../deprecations/pending-removal-in-future.rst:4
msgid ""
"The following APIs will be removed in the future, although there is "
"currently no date scheduled for their removal."
msgstr "以下API将会被移除，尽管具体时间还未确定。"

#: ../../deprecations/pending-removal-in-future.rst:7
msgid ""
":mod:`argparse`: Nesting argument groups and nesting mutually exclusive "
"groups are deprecated."
msgstr ":mod:`argparse`: 嵌套参数分组和嵌套互斥分组的做法已被弃用。"

#: ../../deprecations/pending-removal-in-future.rst:10
msgid ":mod:`array`'s ``'u'`` format code (:gh:`57281`)"
msgstr ":mod:`array` 的 ``'u'`` 格式代码 (:gh:`57281`)"

#: ../../deprecations/pending-removal-in-future.rst:12
msgid ":mod:`builtins`:"
msgstr ":mod:`builtins`:"

#: ../../deprecations/pending-removal-in-future.rst:14
msgid "``~bool``, bitwise inversion on bool."
msgstr "``~bool``，对布尔值按位取反。"

#: ../../deprecations/pending-removal-in-future.rst:15
msgid "``bool(NotImplemented)``."
msgstr "``bool(NotImplemented)``。"

#: ../../deprecations/pending-removal-in-future.rst:16
msgid ""
"Generators: ``throw(type, exc, tb)`` and ``athrow(type, exc, tb)`` signature "
"is deprecated: use ``throw(exc)`` and ``athrow(exc)`` instead, the single "
"argument signature."
msgstr ""
"生成器：``throw(type, exc, tb)`` 和 ``athrow(type, exc, tb)`` 签名已被弃用："
"请改用 ``throw(exc)`` 和 ``athrow(exc)``，即单参数签名。"

#: ../../deprecations/pending-removal-in-future.rst:19
msgid ""
"Currently Python accepts numeric literals immediately followed by keywords, "
"for example ``0in x``, ``1or x``, ``0if 1else 2``.  It allows confusing and "
"ambiguous expressions like ``[0x1for x in y]`` (which can be interpreted as "
"``[0x1 for x in y]`` or ``[0x1f or x in y]``).  A syntax warning is raised "
"if the numeric literal is immediately followed by one of keywords :keyword:"
"`and`, :keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in`, :"
"keyword:`is` and :keyword:`or`.  In a future release it will be changed to a "
"syntax error. (:gh:`87999`)"
msgstr ""
"目前 Python 接受数字类字面值后面紧跟关键字的写法，例如 ``0in x``, ``1or x``, "
"``0if 1else 2``。 它将允许像 ``[0x1for x in y]`` 这样令人困惑且模棱两可的表达"
"式 (它可以被解读为 ``[0x1 for x in y]`` 或者 ``[0x1f or x in y]``)。 从本发布"
"版开始，如果数字类字面值后面紧跟关键字 :keyword:`and`, :keyword:`else`, :"
"keyword:`for`, :keyword:`if`, :keyword:`in`, :keyword:`is` 和 :keyword:`or` "
"中的一个将会引发弃用警告。 在未来的版本中它将改为语法警告，最终将改为语法错"
"误。 (:gh:`87999`)"

#: ../../deprecations/pending-removal-in-future.rst:27
msgid ""
"Support for ``__index__()`` and ``__int__()`` method returning non-int type: "
"these methods will be required to return an instance of a strict subclass "
"of :class:`int`."
msgstr ""
"对``__index__()``和``__int__()``方法返回非整数类型的支持：这些方法将被要求返"
"回:class:`int`的一个严格子类。"

#: ../../deprecations/pending-removal-in-future.rst:30
msgid ""
"Support for ``__float__()`` method returning a strict subclass of :class:"
"`float`: these methods will be required to return an instance of :class:"
"`float`."
msgstr ""
"对``__float__()`` 方法返回:class:`float` 的严格子类的支持：这些方法将要求返"
"回:class:`float`的一个实例。"

#: ../../deprecations/pending-removal-in-future.rst:33
msgid ""
"Support for ``__complex__()`` method returning a strict subclass of :class:"
"`complex`: these methods will be required to return an instance of :class:"
"`complex`."
msgstr ""
"对``__complex__()``方法返回:class:`complex`的严格子类的支持：这些方法将要求返"
"回:class:`complex`的一个实例。"

#: ../../deprecations/pending-removal-in-future.rst:36
msgid "Delegation of ``int()`` to ``__trunc__()`` method."
msgstr "将 ``int()`` 委托给 ``__trunc__()`` 方法。"

#: ../../deprecations/pending-removal-in-future.rst:37
msgid ""
"Passing a complex number as the *real* or *imag* argument in the :func:"
"`complex` constructor is now deprecated; it should only be passed as a "
"single positional argument. (Contributed by Serhiy Storchaka in :gh:"
"`109218`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-future.rst:42
msgid ""
":mod:`calendar`: ``calendar.January`` and ``calendar.February`` constants "
"are deprecated and replaced by :data:`calendar.JANUARY` and :data:`calendar."
"FEBRUARY`. (Contributed by Prince Roshan in :gh:`103636`.)"
msgstr ""
":mod:`calendar`: ``calendar.January`` 和 ``calendar.February`` 常量已被弃用并"
"由 :data:`calendar.JANUARY` 和 :data:`calendar.FEBRUARY` 替代。 （由 Prince "
"Roshan 在 :gh:`103636` 中贡献。）"

#: ../../deprecations/pending-removal-in-future.rst:47
msgid ""
":attr:`codeobject.co_lnotab`: use the :meth:`codeobject.co_lines` method "
"instead."
msgstr ":attr:`codeobject.co_lnotab`: 改用 :meth:`codeobject.co_lines` 方法。"

#: ../../deprecations/pending-removal-in-future.rst:50
msgid ":mod:`datetime`:"
msgstr ":mod:`datetime`:"

#: ../../deprecations/pending-removal-in-future.rst:52
msgid ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcnow`: 使用 ``datetime.datetime.now(tz=datetime."
"UTC)``。"

#: ../../deprecations/pending-removal-in-future.rst:54
msgid ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcfromtimestamp`: 使用 ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``。"

#: ../../deprecations/pending-removal-in-future.rst:57
msgid ":mod:`gettext`: Plural value must be an integer."
msgstr ":mod:`gettext`: 复数值必须是一个整数。"

#: ../../deprecations/pending-removal-in-future.rst:59
msgid ":mod:`importlib`:"
msgstr ":mod:`importlib`:"

#: ../../deprecations/pending-removal-in-future.rst:61
msgid "``load_module()`` method: use ``exec_module()`` instead."
msgstr "``load_module()`` 方法：改用 ``exec_module()``。"

#: ../../deprecations/pending-removal-in-future.rst:62
msgid ""
":func:`~importlib.util.cache_from_source` *debug_override* parameter is "
"deprecated: use the *optimization* parameter instead."
msgstr ""
":func:`~importlib.util.cache_from_source` *debug_override* 形参已被弃用：改"
"用 *optimization* 形能耐。"

#: ../../deprecations/pending-removal-in-future.rst:65
msgid ":mod:`importlib.metadata`:"
msgstr ":mod:`importlib.metadata`:"

#: ../../deprecations/pending-removal-in-future.rst:67
msgid "``EntryPoints`` tuple interface."
msgstr "``EntryPoints`` 元组接口。"

#: ../../deprecations/pending-removal-in-future.rst:68
msgid "Implicit ``None`` on return values."
msgstr "返回值中隐式的 ``None``。"

#: ../../deprecations/pending-removal-in-future.rst:70
msgid ""
":mod:`mailbox`: Use of StringIO input and text mode is deprecated, use "
"BytesIO and binary mode instead."
msgstr ""
":mod:`mailbox`: 对 StringIO 输入和文本模式的使用已被弃用，改用 BytesIO 和二进"
"制模式。"

#: ../../deprecations/pending-removal-in-future.rst:73
msgid ""
":mod:`os`: Calling :func:`os.register_at_fork` in multi-threaded process."
msgstr ":mod:`os`: 在多线程的进程中调用 :func:`os.register_at_fork`。"

#: ../../deprecations/pending-removal-in-future.rst:75
msgid ""
":class:`!pydoc.ErrorDuringImport`: A tuple value for *exc_info* parameter is "
"deprecated, use an exception instance."
msgstr ""
":class:`!pydoc.ErrorDuringImport`: 使用元组值作为 *exc_info* 形参的做法已被弃"
"用，应使用异常实例。"

#: ../../deprecations/pending-removal-in-future.rst:78
msgid ""
":mod:`re`: More strict rules are now applied for numerical group references "
"and group names in regular expressions.  Only sequence of ASCII digits is "
"now accepted as a numerical reference.  The group name in bytes patterns and "
"replacement strings can now only contain ASCII letters and digits and "
"underscore. (Contributed by Serhiy Storchaka in :gh:`91760`.)"
msgstr ""
":mod:`re`：对于正则表达式中的数字分组引用和分组名称将应用更严格的规则。 现在"
"只接受 ASCII 数字序列作为数字引用。 字节串模式和替换字符串中的分组名称现在只"
"能包含 ASCII 字母、数字和下划线。 （由 Serhiy Storchaka 在 :gh:`91760` 中贡"
"献。）"

#: ../../deprecations/pending-removal-in-future.rst:85
msgid ""
":mod:`!sre_compile`, :mod:`!sre_constants` and :mod:`!sre_parse` modules."
msgstr ":mod:`!sre_compile`、:mod:`!sre_constants`和:mod:`!sre_parse`模块。"

#: ../../deprecations/pending-removal-in-future.rst:87
msgid ""
":mod:`shutil`: :func:`~shutil.rmtree`'s *onerror* parameter is deprecated in "
"Python 3.12; use the *onexc* parameter instead."
msgstr ""
":mod:`shutil`：:func:`~shutil.rmtree`的 *onerror* 参数在 Python 3.12 中已被弃"
"用；请使用 *onexc* 参数。"

#: ../../deprecations/pending-removal-in-future.rst:90
msgid ":mod:`ssl` options and protocols:"
msgstr ":mod:`ssl` 选项和协议："

#: ../../deprecations/pending-removal-in-future.rst:92
msgid ":class:`ssl.SSLContext` without protocol argument is deprecated."
msgstr ":class:`ssl.SSLContext`已被弃用。"

#: ../../deprecations/pending-removal-in-future.rst:93
msgid ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` and :meth:"
"`!selected_npn_protocol` are deprecated: use ALPN instead."
msgstr ""
":class:`ssl.SSLContext`：:meth:`~ssl.SSLContext.set_npn_protocols`和:meth:`!"
"selected_npn_protocol`已被弃用：改用ALPN。"

#: ../../deprecations/pending-removal-in-future.rst:96
msgid "``ssl.OP_NO_SSL*`` options"
msgstr "``ssl.OP_NO_SSL*`` 选项"

#: ../../deprecations/pending-removal-in-future.rst:97
msgid "``ssl.OP_NO_TLS*`` options"
msgstr "``ssl.OP_NO_TLS*`` 选项"

#: ../../deprecations/pending-removal-in-future.rst:98
msgid "``ssl.PROTOCOL_SSLv3``"
msgstr "``ssl.PROTOCOL_SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:99
msgid "``ssl.PROTOCOL_TLS``"
msgstr "``ssl.PROTOCOL_TLS``"

#: ../../deprecations/pending-removal-in-future.rst:100
msgid "``ssl.PROTOCOL_TLSv1``"
msgstr "``ssl.PROTOCOL_TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:101
msgid "``ssl.PROTOCOL_TLSv1_1``"
msgstr "``ssl.PROTOCOL_TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:102
msgid "``ssl.PROTOCOL_TLSv1_2``"
msgstr "``ssl.PROTOCOL_TLSv1_2``"

#: ../../deprecations/pending-removal-in-future.rst:103
msgid "``ssl.TLSVersion.SSLv3``"
msgstr "``ssl.TLSVersion.SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:104
msgid "``ssl.TLSVersion.TLSv1``"
msgstr "``ssl.TLSVersion.TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:105
msgid "``ssl.TLSVersion.TLSv1_1``"
msgstr "``ssl.TLSVersion.TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:107
msgid ""
":func:`sysconfig.is_python_build` *check_home* parameter is deprecated and "
"ignored."
msgstr ":func:`sysconfig.is_python_build` *check_home* 参数已过时，将被忽略。"

#: ../../deprecations/pending-removal-in-future.rst:110
msgid ":mod:`threading` methods:"
msgstr ":mod:`threading` 方法："

#: ../../deprecations/pending-removal-in-future.rst:112
msgid ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."
msgstr ""
":meth:`!threading.Condition.notifyAll`：改用:meth:`~threading.Condition."
"notify_all` 。"

#: ../../deprecations/pending-removal-in-future.rst:113
msgid ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."
msgstr ":meth:`!threading.Event.isSet`：改用:meth:`~threading.Event.is_set` 。"

#: ../../deprecations/pending-removal-in-future.rst:114
msgid ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use :"
"attr:`threading.Thread.daemon` attribute."
msgstr ""
":meth:`!threading.Thread.isDaemon`，:meth:`threading.Thread.setDaemon`: 改用:"
"attr:`threading.Thread.daemon`属性。"

#: ../../deprecations/pending-removal-in-future.rst:116
msgid ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use :"
"attr:`threading.Thread.name` attribute."
msgstr ""
":meth:`!threading.Thread.getName`，:meth:`threading.Thread.setName`：改用:"
"attr:`threading.Thread.name`属性。"

#: ../../deprecations/pending-removal-in-future.rst:118
msgid ":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."
msgstr ""
":meth:`!threading.currentThread`：改用:meth:`threading.current_thread` 。"

#: ../../deprecations/pending-removal-in-future.rst:119
msgid ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."
msgstr ":meth:`!threading.activeCount`：改用:meth:`threading.active_count` 。"

#: ../../deprecations/pending-removal-in-future.rst:121
msgid ":class:`typing.Text` (:gh:`92332`)."
msgstr ":class:`typing.Text` ( :gh:`92332`）。"

#: ../../deprecations/pending-removal-in-future.rst:123
msgid ""
":class:`unittest.IsolatedAsyncioTestCase`: it is deprecated to return a "
"value that is not ``None`` from a test case."
msgstr ""
":class:`unittest.IsolatedAsyncioTestCase`：不推荐从测试用例中返回一个非"
"``None``值。"

#: ../../deprecations/pending-removal-in-future.rst:126
msgid ""
":mod:`urllib.parse` deprecated functions: :func:`~urllib.parse.urlparse` "
"instead"
msgstr ":mod:`urllib.parse` 已废弃的函数： 改用:func:`~urllib.parse.urlparse` "

#: ../../deprecations/pending-removal-in-future.rst:128
msgid "``splitattr()``"
msgstr "``splitattr()``"

#: ../../deprecations/pending-removal-in-future.rst:129
msgid "``splithost()``"
msgstr "``splithost()``"

#: ../../deprecations/pending-removal-in-future.rst:130
msgid "``splitnport()``"
msgstr "``splitnport()``"

#: ../../deprecations/pending-removal-in-future.rst:131
msgid "``splitpasswd()``"
msgstr "``splitpasswd()``"

#: ../../deprecations/pending-removal-in-future.rst:132
msgid "``splitport()``"
msgstr "``splitport()``"

#: ../../deprecations/pending-removal-in-future.rst:133
msgid "``splitquery()``"
msgstr "``splitquery()``"

#: ../../deprecations/pending-removal-in-future.rst:134
msgid "``splittag()``"
msgstr "``splittag()``"

#: ../../deprecations/pending-removal-in-future.rst:135
msgid "``splittype()``"
msgstr "``splittype()``"

#: ../../deprecations/pending-removal-in-future.rst:136
msgid "``splituser()``"
msgstr "``splituser()``"

#: ../../deprecations/pending-removal-in-future.rst:137
msgid "``splitvalue()``"
msgstr "``splitvalue()``"

#: ../../deprecations/pending-removal-in-future.rst:138
msgid "``to_bytes()``"
msgstr "``to_bytes()``"

#: ../../deprecations/pending-removal-in-future.rst:140
msgid ""
":mod:`urllib.request`: :class:`~urllib.request.URLopener` and :class:"
"`~urllib.request.FancyURLopener` style of invoking requests is deprecated. "
"Use newer :func:`~urllib.request.urlopen` functions and methods."
msgstr ""
":mod:`urllib.request`：:class:`~urllib.request.URLopener`和:class:`~urllib."
"request.FancyURLopener`调用请求的方式已被弃用。请使用新的:func:`~urllib."
"request.urlopen`的函数和方法。  "

#: ../../deprecations/pending-removal-in-future.rst:144
msgid ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` should not do partial "
"writes."
msgstr ":mod:`wsgiref`：``SimpleHandler.stdout.write()``不应进行部分写入。"

#: ../../deprecations/pending-removal-in-future.rst:147
msgid ""
":mod:`xml.etree.ElementTree`: Testing the truth value of an :class:`~xml."
"etree.ElementTree.Element` is deprecated. In a future release it will always "
"return ``True``. Prefer explicit ``len(elem)`` or ``elem is not None`` tests "
"instead."
msgstr ""

#: ../../deprecations/pending-removal-in-future.rst:152
msgid ""
":meth:`zipimport.zipimporter.load_module` is deprecated: use :meth:"
"`~zipimport.zipimporter.exec_module` instead."
msgstr ""
":meth:`zipimport.zipimporter.load_module`已被弃用：改用:meth:`~zipimport."
"zipimporter.exec_module`。 "
