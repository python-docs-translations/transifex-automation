# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
# Translators:
# Skydelta, 2023
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-10 22:50-0300\n"
"PO-Revision-Date: 2022-11-05 19:49+0000\n"
"Last-Translator: Skydelta, 2023\n"
"Language: ja\n"
"Language-Team: Japanese (https://app.transifex.com/python-"
"doc/teams/5390/ja/)\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../library/importlib.resources.rst:2
msgid ""
":mod:`!importlib.resources` -- Package resource reading, opening and "
"access"
msgstr ""

#: ../../library/importlib.resources.rst:7
msgid "**Source code:** :source:`Lib/importlib/resources/__init__.py`"
msgstr "**ソースコード:** :source:`Lib/importlib/resources/__init__.py`"

#: ../../library/importlib.resources.rst:13
msgid ""
"This module leverages Python's import system to provide access to "
"*resources* within *packages*."
msgstr ""

#: ../../library/importlib.resources.rst:16
msgid ""
"\"Resources\" are file-like resources associated with a module or package"
" in Python. The resources may be contained directly in a package, within "
"a subdirectory contained in that package, or adjacent to modules outside "
"a package. Resources may be text or binary. As a result, Python module "
"sources (.py) of a package and compilation artifacts (pycache) are "
"technically de-facto resources of that package. In practice, however, "
"resources are primarily those non-Python artifacts exposed specifically "
"by the package author."
msgstr ""

#: ../../library/importlib.resources.rst:25
msgid "Resources can be opened or read in either binary or text mode."
msgstr ""

#: ../../library/importlib.resources.rst:27
msgid ""
"Resources are roughly akin to files inside directories, though it's "
"important to keep in mind that this is just a metaphor.  Resources and "
"packages **do not** have to exist as physical files and directories on "
"the file system: for example, a package and its resources can be imported"
" from a zip file using :py:mod:`zipimport`."
msgstr ""
"リソースは大体ディレクトリの中のファイルに似ていますが、これは単なる例え話であることを頭に入れておくことが重要です。例えば、パッケージとそのリソースは"
" :py:mod:`zipimport` を使って zip ファイルからインポートすることができます。"

#: ../../library/importlib.resources.rst:35
msgid ""
"This module provides functionality similar to `pkg_resources "
"<https://setuptools.readthedocs.io/en/latest/pkg_resources.html>`_ `Basic"
" Resource Access "
"<https://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-"
"resource-access>`_ without the performance overhead of that package.  "
"This makes reading resources included in packages easier, with more "
"stable and consistent semantics."
msgstr ""
"このモジュールは、 `pkg_resources "
"<https://setuptools.readthedocs.io/en/latest/pkg_resources.html>`_ `Basic"
" Resource Access "
"<https://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-"
"resource-access>`_ に似た機能を、そのパッケージのパフォーマンスのオーバーヘッドを伴わずに提供します。 "
"これにより、パッケージに含まれるリソースの読み込みがより簡単になり、より安定した一貫した意味付けができるようになります。"

#: ../../library/importlib.resources.rst:43
msgid ""
"The standalone backport of this module provides more information on "
"`using importlib.resources <https://importlib-"
"resources.readthedocs.io/en/latest/using.html>`_ and `migrating from "
"pkg_resources to importlib.resources <https://importlib-"
"resources.readthedocs.io/en/latest/migration.html>`_."
msgstr ""
"このモジュールのスタンドアローンバックポートでは、 `importlib.resources の使用 <https://importlib-"
"resources.readthedocs.io/en/latest/using.html>`_ と `pkg_resources から "
"importlib.resources への移行 <https://importlib-"
"resources.readthedocs.io/en/latest/migration.html>`_ についての詳細情報を提供しています。"

#: ../../library/importlib.resources.rst:49
msgid ""
":class:`Loaders <importlib.abc.Loader>` that wish to support resource "
"reading should implement a ``get_resource_reader(fullname)`` method as "
"specified by :class:`importlib.resources.abc.ResourceReader`."
msgstr ""
":class:`Loaders <importlib.abc.Loader>` でリソースの読み込みをサポートしたい場合は、 "
":class:`importlib.resources.abc.ResourceReader` で指定された "
"``get_resource_reader(fullname)`` メソッドを実装しなければいけません。"

#: ../../library/importlib.resources.rst:55
msgid ""
"Represents an anchor for resources, either a :class:`module object "
"<types.ModuleType>` or a module name as a string. Defined as ``Union[str,"
" ModuleType]``."
msgstr ""

#: ../../library/importlib.resources.rst:61
msgid ""
"Returns a :class:`~importlib.resources.abc.Traversable` object "
"representing the resource container (think directory) and its resources "
"(think files). A Traversable may contain other containers (think "
"subdirectories)."
msgstr ""

#: ../../library/importlib.resources.rst:66
msgid ""
"*anchor* is an optional :class:`Anchor`. If the anchor is a package, "
"resources are resolved from that package. If a module, resources are "
"resolved adjacent to that module (in the same package or the package "
"root). If the anchor is omitted, the caller's module is used."
msgstr ""

#: ../../library/importlib.resources.rst:74
msgid ""
"*package* parameter was renamed to *anchor*. *anchor* can now be a non-"
"package module and if omitted will default to the caller's module. "
"*package* is still accepted for compatibility but will raise a "
":exc:`DeprecationWarning`. Consider passing the anchor positionally or "
"using ``importlib_resources >= 5.10`` for a compatible interface on older"
" Pythons."
msgstr ""

#: ../../library/importlib.resources.rst:84
msgid ""
"Given a :class:`~importlib.resources.abc.Traversable` object representing"
" a file or directory, typically from :func:`importlib.resources.files`, "
"return a context manager for use in a :keyword:`with` statement. The "
"context manager provides a :class:`pathlib.Path` object."
msgstr ""

#: ../../library/importlib.resources.rst:89
msgid ""
"Exiting the context manager cleans up any temporary file or directory "
"created when the resource was extracted from e.g. a zip file."
msgstr ""

#: ../../library/importlib.resources.rst:92
msgid ""
"Use ``as_file`` when the Traversable methods (``read_text``, etc) are "
"insufficient and an actual file or directory on the file system is "
"required."
msgstr ""

#: ../../library/importlib.resources.rst:98
msgid "Added support for *traversable* representing a directory."
msgstr ""

#: ../../library/importlib.resources.rst:105
msgid "Functional API"
msgstr ""

#: ../../library/importlib.resources.rst:107
msgid ""
"A set of simplified, backwards-compatible helpers is available. These "
"allow common operations in a single function call."
msgstr ""

#: ../../library/importlib.resources.rst:110
msgid "For all the following functions:"
msgstr ""

#: ../../library/importlib.resources.rst:112
msgid ""
"*anchor* is an :class:`~importlib.resources.Anchor`, as in "
":func:`~importlib.resources.files`. Unlike in ``files``, it may not be "
"omitted."
msgstr ""

#: ../../library/importlib.resources.rst:116
msgid ""
"*path_names* are components of a resource's path name, relative to the "
"anchor. For example, to get the text of resource named ``info.txt``, "
"use::"
msgstr ""

#: ../../library/importlib.resources.rst:122
msgid ""
"Like :meth:`Traversable.joinpath <importlib.resources.abc.Traversable>`, "
"The individual components should use forward slashes (``/``) as path "
"separators. For example, the following are equivalent::"
msgstr ""

#: ../../library/importlib.resources.rst:130
msgid ""
"For backward compatibility reasons, functions that read text require an "
"explicit *encoding* argument if multiple *path_names* are given. For "
"example, to get the text of ``info/chapter1.txt``, use::"
msgstr ""

#: ../../library/importlib.resources.rst:139
msgid "Open the named resource for binary reading."
msgstr ""

#: ../../library/importlib.resources.rst:141
#: ../../library/importlib.resources.rst:184
#: ../../library/importlib.resources.rst:232
#: ../../library/importlib.resources.rst:249
#: ../../library/importlib.resources.rst:267
msgid ""
"See :ref:`the introduction <importlib_resources_functional>` for details "
"on *anchor* and *path_names*."
msgstr ""

#: ../../library/importlib.resources.rst:144
#, fuzzy
msgid ""
"This function returns a :class:`~typing.BinaryIO` object, that is, a "
"binary stream open for reading."
msgstr "この関数は、テキストI/Oストリームを読み込むために開いている ``typing.TextIO`` のインスタンスを返します。"

#: ../../library/importlib.resources.rst:147
#: ../../library/importlib.resources.rst:171
#: ../../library/importlib.resources.rst:187
#: ../../library/importlib.resources.rst:208
#: ../../library/importlib.resources.rst:235
#: ../../library/importlib.resources.rst:252
#: ../../library/importlib.resources.rst:270
msgid "This function is roughly equivalent to::"
msgstr ""

#: ../../library/importlib.resources.rst:151
#: ../../library/importlib.resources.rst:191
#: ../../library/importlib.resources.rst:256
msgid "Multiple *path_names* are accepted."
msgstr ""

#: ../../library/importlib.resources.rst:157
#, fuzzy
msgid ""
"Open the named resource for text reading. By default, the contents are "
"read as strict UTF-8."
msgstr ""
"*package* 内の *resource* の内容を読み込んで ``str`` "
"として返します。デフォルトでは、内容は厳密なUTF-8として読み込まれます。"

#: ../../library/importlib.resources.rst:160
#: ../../library/importlib.resources.rst:200
msgid ""
"See :ref:`the introduction <importlib_resources_functional>` for details "
"on *anchor* and *path_names*. *encoding* and *errors* have the same "
"meaning as in built-in :func:`open`."
msgstr ""

#: ../../library/importlib.resources.rst:164
#: ../../library/importlib.resources.rst:204
msgid ""
"For backward compatibility reasons, the *encoding* argument must be given"
" explicitly if there are multiple *path_names*. This limitation is "
"scheduled to be removed in Python 3.15."
msgstr ""

#: ../../library/importlib.resources.rst:168
#, fuzzy
msgid ""
"This function returns a :class:`~typing.TextIO` object, that is, a text "
"stream open for reading."
msgstr "この関数は、テキストI/Oストリームを読み込むために開いている ``typing.TextIO`` のインスタンスを返します。"

#: ../../library/importlib.resources.rst:175
#: ../../library/importlib.resources.rst:212
#: ../../library/importlib.resources.rst:239
msgid ""
"Multiple *path_names* are accepted. *encoding* and *errors* must be given"
" as keyword arguments."
msgstr ""

#: ../../library/importlib.resources.rst:182
#, fuzzy
msgid "Read and return the contents of the named resource as :class:`bytes`."
msgstr "*package* 内の *resource* の内容を読み取り、 ``bytes`` として返します。"

#: ../../library/importlib.resources.rst:197
#, fuzzy
msgid ""
"Read and return the contents of the named resource as :class:`str`. By "
"default, the contents are read as strict UTF-8."
msgstr ""
"*package* 内の *resource* の内容を読み込んで ``str`` "
"として返します。デフォルトでは、内容は厳密なUTF-8として読み込まれます。"

#: ../../library/importlib.resources.rst:219
#, fuzzy
msgid ""
"Provides the path to the *resource* as an actual file system path.  This "
"function returns a context manager for use in a :keyword:`with` "
"statement. The context manager provides a :class:`pathlib.Path` object."
msgstr ""
"*resource* へのパスを実際のファイルシステムのパスとして返します。この関数は、 :keyword:`with` "
"文で使用するためのコンテキストマネージャを返します。コンテキストマネージャは :class:`pathlib.Path` "
"オブジェクトを提供します。"

#: ../../library/importlib.resources.rst:223
#, fuzzy
msgid ""
"Exiting the context manager cleans up any temporary files created, e.g. "
"when the resource needs to be extracted from a zip file."
msgstr "コンテキストマネージャーを終了すると、例えば zip ファイルからリソースを抽出する必要がある場合に作成される一時ファイルを削除します。"

#: ../../library/importlib.resources.rst:226
msgid ""
"For example, the :meth:`~pathlib.Path.stat` method requires an actual "
"file system path; it can be used like this::"
msgstr ""

#: ../../library/importlib.resources.rst:246
#, fuzzy
msgid ""
"Return ``True`` if the named resource exists, otherwise ``False``. This "
"function does not consider directories to be resources."
msgstr ""
"パッケージ内に *name* という名前のリソースがある場合は ``True`` を、ない場合は ``False`` "
"を返します。この関数は、ディレクトリをリソースとみなしません。 *package* は、名前か ``Package`` "
"の要件に準拠したモジュールオブジェクトです。"

#: ../../library/importlib.resources.rst:262
#, fuzzy
msgid ""
"Return an iterable over the named items within the package or path. The "
"iterable returns names of resources (e.g. files) and non-resources (e.g. "
"directories) as :class:`str`. The iterable does not recurse into "
"subdirectories."
msgstr ""
"パッケージ内の名前付きアイテムに対するイテラブルを返します。 イテラブルは :class:`str` "
"リソース(ファイルなど)と非リソース(ディレクトリなど)を返します。イテラブルは、サブディレクトリへの再帰は行いません。"

#: ../../library/importlib.resources.rst:275
msgid ""
"Prefer ``iterdir()`` as above, which offers more control over the results"
" and richer functionality."
msgstr ""

#~ msgid "Deprecated functions"
#~ msgstr "非推奨の関数"

#~ msgid ""
#~ "An older, deprecated set of functions"
#~ " is still available, but is scheduled"
#~ " for removal in a future version "
#~ "of Python. The main drawback of "
#~ "these functions is that they do "
#~ "not support directories: they assume all"
#~ " resources are located directly within "
#~ "a *package*."
#~ msgstr ""
#~ "古い、非推奨の関数群はまだ利用可能ですが、Pythonの将来のバージョンで削除される予定です。これらの関数の主な欠点は、ディレクトリをサポートしていないことです:それらはすべてのリソースが"
#~ " *パッケージ* 内に直接配置されていると想定しています。"

#~ msgid ""
#~ "Whenever a function accepts a "
#~ "``Package`` argument, you can pass in"
#~ " either a :class:`module object "
#~ "<types.ModuleType>` or a module name as"
#~ " a string.  You can only pass "
#~ "module objects whose "
#~ "``__spec__.submodule_search_locations`` is not "
#~ "``None``."
#~ msgstr ""
#~ "関数が ``Package`` を引数に取る場合、 :class:`module "
#~ "object <types.ModuleType>` "
#~ "またはモジュール名を文字列で渡すことができます。渡すことができるのは、 "
#~ "``__spec__.submodule_search_locations`` が ``None`` "
#~ "以外のモジュールオブジェクトのみです。"

#~ msgid "The ``Package`` type is defined as ``Union[str, ModuleType]``."
#~ msgstr "``Package`` 型は ``Union[str, ModuleType]`` として定義されています。"

#~ msgid ""
#~ "For *resource* arguments of the "
#~ "functions below, you can pass in "
#~ "the name of a resource as a "
#~ "string or a :class:`path-like object "
#~ "<os.PathLike>`."
#~ msgstr ""
#~ "以下の関数の *resource* 引数には、リソース名を文字列または :class:`path-"
#~ "like オブジェクト <os.PathLike>` として渡すことができます。"

#~ msgid "The ``Resource`` type is defined as ``Union[str, os.PathLike]``."
#~ msgstr "``Resource`` 型は ``Union[str, os.PathLike]`` として定義されています。"

#~ msgid "Open for binary reading the *resource* within *package*."
#~ msgstr "*パッケージ* 内の *リソース* をバイナリ読み取り用に開きます。"

#~ msgid ""
#~ "*package* is either a name or a"
#~ " module object which conforms to the"
#~ " ``Package`` requirements.  *resource* is "
#~ "the name of the resource to open"
#~ " within *package*; it may not contain"
#~ " path separators and it may not "
#~ "have sub-resources (i.e. it cannot "
#~ "be a directory).  This function returns"
#~ " a ``typing.BinaryIO`` instance, a binary"
#~ " I/O stream open for reading."
#~ msgstr ""
#~ "*package* は ``Package`` の要件に従った名前またはモジュールオブジェクトです。"
#~ " *resource* は *package* "
#~ "内で開くリソースの名前です。パス区切り文字を含むことはできず、サブリソースを持つことはできません（つまり、ディレクトリにはなれません）。"
#~ " この関数は、バイナリI/Oストリームを読み込むために開いている ``typing.BinaryIO`` "
#~ "のインスタンスを返します。"

#~ msgid "Calls to this function can be replaced by::"
#~ msgstr "この関数の呼び出しは、次のように置き換えることができます::"

#~ msgid ""
#~ "Open for text reading the *resource* "
#~ "within *package*.  By default, the "
#~ "resource is opened for reading as "
#~ "UTF-8."
#~ msgstr ""
#~ "*package* 内の *resource* をテキスト読み取り用に開きます。 "
#~ "デフォルトでは、リソースはUTF-8として読み取り用に開かれます。"

#~ msgid ""
#~ "*package* is either a name or a"
#~ " module object which conforms to the"
#~ " ``Package`` requirements.  *resource* is "
#~ "the name of the resource to open"
#~ " within *package*; it may not contain"
#~ " path separators and it may not "
#~ "have sub-resources (i.e. it cannot "
#~ "be a directory).  *encoding* and "
#~ "*errors* have the same meaning as "
#~ "with built-in :func:`open`."
#~ msgstr ""
#~ "*package* は ``Package`` の要件に従った名前またはモジュールオブジェクトです。"
#~ " *resource* は *package* "
#~ "内で開くリソースの名前です。パス区切り文字を含むことはできず、サブリソースを持つことはできません（つまり、ディレクトリにはなれません）。"
#~ " *encoding* と *errors* は、組み込みの :func:`open`"
#~ " と同じ意味を持ちます。"

#~ msgid ""
#~ "*package* is either a name or a"
#~ " module object which conforms to the"
#~ " ``Package`` requirements.  *resource* is "
#~ "the name of the resource to open"
#~ " within *package*; it may not contain"
#~ " path separators and it may not "
#~ "have sub-resources (i.e. it cannot "
#~ "be a directory).  This function returns"
#~ " the contents of the resource as "
#~ ":class:`bytes`."
#~ msgstr ""
#~ "*package* は ``Package`` の要件に従った名前またはモジュールオブジェクトです。"
#~ " *resource* は *package* "
#~ "内で開くリソースの名前です。パス区切り文字を含むことはできず、サブリソースを持つことはできません（つまり、ディレクトリにはなれません）。この関数は、リソースの内容を"
#~ " :class:`bytes` として返します。"

#~ msgid ""
#~ "*package* is either a name or a"
#~ " module object which conforms to the"
#~ " ``Package`` requirements.  *resource* is "
#~ "the name of the resource to open"
#~ " within *package*; it may not contain"
#~ " path separators and it may not "
#~ "have sub-resources (i.e. it cannot "
#~ "be a directory).  *encoding* and "
#~ "*errors* have the same meaning as "
#~ "with built-in :func:`open`.  This "
#~ "function returns the contents of the "
#~ "resource as :class:`str`."
#~ msgstr ""
#~ "*package* は ``Package`` の要件に従った名前またはモジュールオブジェクトです。"
#~ " *resource* は *package* "
#~ "内で開くリソースの名前です。パス区切り文字を含むことはできず、サブリソースを持つことはできません（つまり、ディレクトリにはなれません）。"
#~ " *encoding* と *errors* は、組み込みの :func:`open`"
#~ " と同じ意味を持ちます。この関数は、リソースの内容を :class:`str` として返します。"

#~ msgid ""
#~ "*package* is either a name or a"
#~ " module object which conforms to the"
#~ " ``Package`` requirements.  *resource* is "
#~ "the name of the resource to open"
#~ " within *package*; it may not contain"
#~ " path separators and it may not "
#~ "have sub-resources (i.e. it cannot "
#~ "be a directory)."
#~ msgstr ""
#~ "*package* は ``Package`` の要件に従った名前またはモジュールオブジェクトです。"
#~ " *resource* は *package* "
#~ "内で開くリソースの名前です。パス区切り文字を含むことはできず、サブリソースを持つことはできません（つまり、ディレクトリにはなれません）。"

#~ msgid "Calls to this function can be replaced using :func:`as_file`::"
#~ msgstr "この関数の呼び出しは、 :func:`as_file`: を使って置き換えることができます::"

#~ msgid ""
#~ "*package* is either a name or a"
#~ " module object which conforms to the"
#~ " ``Package`` requirements."
#~ msgstr "*package* は、名前または ``Package`` の要件に適合するモジュールオブジェクトのいずれかです。"

