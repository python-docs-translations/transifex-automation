# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# tomo, 2021
# Arihiro TAKASE, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-10 14:14+0000\n"
"PO-Revision-Date: 2021-06-28 01:07+0000\n"
"Last-Translator: Arihiro TAKASE, 2023\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/http.cookies.rst:2
msgid ":mod:`!http.cookies` --- HTTP state management"
msgstr ""

#: ../../library/http.cookies.rst:10
msgid "**Source code:** :source:`Lib/http/cookies.py`"
msgstr "**ソースコード:** :source:`Lib/http/cookies.py`"

#: ../../library/http.cookies.rst:14
msgid ""
"The :mod:`http.cookies` module defines classes for abstracting the concept "
"of cookies, an HTTP state management mechanism. It supports both simple "
"string-only cookies, and provides an abstraction for having any serializable "
"data-type as cookie value."
msgstr ""
":mod:`http.cookies` モジュールはHTTPの状態管理機能であるcookieの概念を抽象"
"化、定義しているクラスです。単純な文字列のみで構成されるcookieのほか、シリア"
"ル化可能なあらゆるデータ型でクッキーの値を保持するための機能も備えています。"

#: ../../library/http.cookies.rst:19
msgid ""
"The module formerly strictly applied the parsing rules described in the :rfc:"
"`2109` and :rfc:`2068` specifications.  It has since been discovered that "
"MSIE 3.0x didn't follow the character rules outlined in those specs; many "
"current-day browsers and servers have also relaxed parsing rules when it "
"comes to cookie handling.  As a result, this module now uses parsing rules "
"that are a bit less strict than they once were."
msgstr ""

#: ../../library/http.cookies.rst:26
msgid ""
"The character set, :data:`string.ascii_letters`, :data:`string.digits` and "
"``!#$%&'*+-.^_`|~:`` denote the set of valid characters allowed by this "
"module in a cookie name (as :attr:`~Morsel.key`)."
msgstr ""

#: ../../library/http.cookies.rst:30
msgid "Allowed ':' as a valid cookie name character."
msgstr ""

#: ../../library/http.cookies.rst:36
msgid ""
"On encountering an invalid cookie, :exc:`CookieError` is raised, so if your "
"cookie data comes from a browser you should always prepare for invalid data "
"and catch :exc:`CookieError` on parsing."
msgstr ""
"不正な cookie に遭遇した場合、 :exc:`CookieError` 例外を送出します。そのた"
"め、ブラウザから持ってきた cookie データをパースするときには常に不正なデータ"
"に備え :exc:`CookieError` 例外を捕捉してください。"

#: ../../library/http.cookies.rst:43
msgid ""
"Exception failing because of :rfc:`2109` invalidity: incorrect attributes, "
"incorrect :mailheader:`Set-Cookie` header, etc."
msgstr ""
"属性や :mailheader:`Set-Cookie` ヘッダが正しくないなど、 :rfc:`2109` に合致し"
"ていないときに発生する例外です。"

#: ../../library/http.cookies.rst:49
msgid ""
"This class is a dictionary-like object whose keys are strings and whose "
"values are :class:`Morsel` instances. Note that upon setting a key to a "
"value, the value is first converted to a :class:`Morsel` containing the key "
"and the value."
msgstr ""
"このクラスはキーが文字列、値が :class:`Morsel` インスタンスで構成される辞書風"
"オブジェクトです。値に対するキーを設定するときは、値がキーと値を含む :class:"
"`Morsel` に変換されることに注意してください。"

#: ../../library/http.cookies.rst:53
msgid "If *input* is given, it is passed to the :meth:`load` method."
msgstr ""
"*input* が与えられたときは、そのまま :meth:`load` メソッドへ渡されます。"

#: ../../library/http.cookies.rst:58
msgid ""
"This class derives from :class:`BaseCookie` and overrides :meth:`~BaseCookie."
"value_decode` and :meth:`~BaseCookie.value_encode`. :class:`!SimpleCookie` "
"supports strings as cookie values. When setting the value, :class:`!"
"SimpleCookie` calls the builtin :func:`str` to convert the value to a "
"string. Values received from HTTP are kept as strings."
msgstr ""

#: ../../library/http.cookies.rst:66
msgid "Module :mod:`http.cookiejar`"
msgstr "モジュール :mod:`http.cookiejar`"

#: ../../library/http.cookies.rst:67
msgid ""
"HTTP cookie handling for web *clients*.  The :mod:`http.cookiejar` and :mod:"
"`http.cookies` modules do not depend on each other."
msgstr ""
"Web *クライアント* 向けの HTTP クッキー処理です。 :mod:`http.cookiejar` と :"
"mod:`http.cookies` は互いに独立しています。"

#: ../../library/http.cookies.rst:70
msgid ":rfc:`2109` - HTTP State Management Mechanism"
msgstr ":rfc:`2109` - HTTP State Management Mechanism"

#: ../../library/http.cookies.rst:71
msgid "This is the state management specification implemented by this module."
msgstr "このモジュールが実装しているHTTPの状態管理に関する規格です。"

#: ../../library/http.cookies.rst:77
msgid "Cookie Objects"
msgstr "Cookieオブジェクト"

#: ../../library/http.cookies.rst:82
msgid ""
"Return a tuple ``(real_value, coded_value)`` from a string representation. "
"``real_value`` can be any type. This method does no decoding in :class:"
"`BaseCookie` --- it exists so it can be overridden."
msgstr ""

#: ../../library/http.cookies.rst:89
msgid ""
"Return a tuple ``(real_value, coded_value)``. *val* can be any type, but "
"``coded_value`` will always be converted to a string. This method does no "
"encoding in :class:`BaseCookie` --- it exists so it can be overridden."
msgstr ""

#: ../../library/http.cookies.rst:94
msgid ""
"In general, it should be the case that :meth:`value_encode` and :meth:"
"`value_decode` are inverses on the range of *value_decode*."
msgstr ""
"通常 :meth:`value_encode` と :meth:`value_decode` はともに *value_decode* の"
"処理内容から逆算した範囲に収まっていなければなりません。"

#: ../../library/http.cookies.rst:100
msgid ""
"Return a string representation suitable to be sent as HTTP headers. *attrs* "
"and *header* are sent to each :class:`Morsel`'s :meth:`output` method. *sep* "
"is used to join the headers together, and is by default the combination "
"``'\\r\\n'`` (CRLF)."
msgstr ""
"HTTPヘッダ形式の文字列表現を返します。 *attrs* と *header* はそれぞれ :class:"
"`Morsel` の :meth:`output` メソッドに送られます。 *sep* はヘッダの連結に用い"
"られる文字で、デフォルトは ``'\\r\\n'`` (CRLF)となっています。"

#: ../../library/http.cookies.rst:108
msgid ""
"Return an embeddable JavaScript snippet, which, if run on a browser which "
"supports JavaScript, will act the same as if the HTTP headers was sent."
msgstr ""
"ブラウザがJavaScriptをサポートしている場合、HTTPヘッダを送信した場合と同様に"
"動作する埋め込み可能なJavaScript snippetを返します。"

#: ../../library/http.cookies.rst:111 ../../library/http.cookies.rst:207
#: ../../library/http.cookies.rst:215
msgid "The meaning for *attrs* is the same as in :meth:`output`."
msgstr "*attrs* の意味は :meth:`output` と同じです。"

#: ../../library/http.cookies.rst:116
msgid ""
"If *rawdata* is a string, parse it as an ``HTTP_COOKIE`` and add the values "
"found there as :class:`Morsel`\\ s. If it is a dictionary, it is equivalent "
"to::"
msgstr ""
"*rawdata* が文字列であれば、 ``HTTP_COOKIE`` として処理し、その値を :class:"
"`Morsel` として追加します。辞書の場合は次と同様の処理をおこないます。 ::"

#: ../../library/http.cookies.rst:126
msgid "Morsel Objects"
msgstr "Morselオブジェクト"

#: ../../library/http.cookies.rst:131
msgid "Abstract a key/value pair, which has some :rfc:`2109` attributes."
msgstr ":rfc:`2109` の属性をキーと値で保持するabstractクラスです。"

#: ../../library/http.cookies.rst:133
msgid ""
"Morsels are dictionary-like objects, whose set of keys is constant --- the "
"valid :rfc:`2109` attributes, which are:"
msgstr ""

#: ../../library/http.cookies.rst:146
msgid ""
"The attribute :attr:`httponly` specifies that the cookie is only transferred "
"in HTTP requests, and is not accessible through JavaScript. This is intended "
"to mitigate some forms of cross-site scripting."
msgstr ""
":attr:`httponly` 属性は、 cookie が HTTP リクエストでのみ送信されて、 "
"JavaScript からのはアクセスできない事を示します。これはいくつかのクロスサイト"
"スクリプティングの脅威を和らげることを意図しています。"

#: ../../library/http.cookies.rst:150
msgid ""
"The attribute :attr:`samesite` specifies that the browser is not allowed to "
"send the cookie along with cross-site requests. This helps to mitigate CSRF "
"attacks. Valid values for this attribute are \"Strict\" and \"Lax\"."
msgstr ""

#: ../../library/http.cookies.rst:154
msgid "The keys are case-insensitive and their default value is ``''``."
msgstr "キーの大小文字は区別されません。そのデフォルト値は ``''`` です。"

#: ../../library/http.cookies.rst:156
msgid ""
":meth:`!__eq__` now takes :attr:`~Morsel.key` and :attr:`~Morsel.value` into "
"account."
msgstr ""

#: ../../library/http.cookies.rst:160
msgid ""
"Attributes :attr:`~Morsel.key`, :attr:`~Morsel.value` and :attr:`~Morsel."
"coded_value` are read-only.  Use :meth:`~Morsel.set` for setting them."
msgstr ""

#: ../../library/http.cookies.rst:165
msgid "Added support for the :attr:`samesite` attribute."
msgstr ":attr:`samesite` 属性がサポートされました。"

#: ../../library/http.cookies.rst:171
msgid "The value of the cookie."
msgstr "クッキーの値。"

#: ../../library/http.cookies.rst:176
msgid "The encoded value of the cookie --- this is what should be sent."
msgstr "実際に送信する形式にエンコードされたcookieの値。"

#: ../../library/http.cookies.rst:181
msgid "The name of the cookie."
msgstr "cookieの名前。"

#: ../../library/http.cookies.rst:186
msgid "Set the *key*, *value* and *coded_value* attributes."
msgstr "属性 *key* 、 *value* 、 *coded_value* に値をセットします。"

#: ../../library/http.cookies.rst:191
msgid "Whether *K* is a member of the set of keys of a :class:`Morsel`."
msgstr "*K* が :class:`Morsel` のキーであるかどうかを判定します。"

#: ../../library/http.cookies.rst:196
msgid ""
"Return a string representation of the Morsel, suitable to be sent as an HTTP "
"header. By default, all the attributes are included, unless *attrs* is "
"given, in which case it should be a list of attributes to use. *header* is "
"by default ``\"Set-Cookie:\"``."
msgstr ""
"MoselをHTTPヘッダ形式の文字列表現にして返します。 *attrs* を指定しない場合、"
"デフォルトですべての属性を含めます。 *attrs* を指定する場合、属性をリストで渡"
"さなければなりません。 *header* のデフォルトは ``\"Set-Cookie:\"`` です。"

#: ../../library/http.cookies.rst:204
msgid ""
"Return an embeddable JavaScript snippet, which, if run on a browser which "
"supports JavaScript, will act the same as if the HTTP header was sent."
msgstr ""
"ブラウザがJavaScriptをサポートしている場合、HTTPヘッダを送信した場合と同様に"
"動作する埋め込み可能なJavaScript snippetを返します。"

#: ../../library/http.cookies.rst:212
msgid ""
"Return a string representing the Morsel, without any surrounding HTTP or "
"JavaScript."
msgstr "Moselの文字列表現をHTTPやJavaScriptで囲まずに出力します。"

#: ../../library/http.cookies.rst:220
msgid ""
"Update the values in the Morsel dictionary with the values in the dictionary "
"*values*.  Raise an error if any of the keys in the *values* dict is not a "
"valid :rfc:`2109` attribute."
msgstr ""
"Morsel 辞書の値を辞書 *values* の値で更新します。*values* 辞書のキーのいずれ"
"かが有効な :rfc:`2109` 属性でない場合エラーを送出します。"

#: ../../library/http.cookies.rst:224
msgid "an error is raised for invalid keys."
msgstr "不正なキーではエラーが送出されます。"

#: ../../library/http.cookies.rst:230
msgid "Return a shallow copy of the Morsel object."
msgstr "Morsel オブジェクトの浅いコピーを返します。"

#: ../../library/http.cookies.rst:232
msgid "return a Morsel object instead of a dict."
msgstr "辞書ではなく Morsel オブジェクトを返します。"

#: ../../library/http.cookies.rst:238
msgid ""
"Raise an error if key is not a valid :rfc:`2109` attribute, otherwise behave "
"the same as :meth:`dict.setdefault`."
msgstr ""
"キーが有効な :rfc:`2109` 属性でない場合エラーを送出します。そうでない場合は :"
"meth:`dict.setdefault` と同じように振る舞います。"

#: ../../library/http.cookies.rst:245
msgid "Example"
msgstr "使用例"

#: ../../library/http.cookies.rst:247
msgid ""
"The following example demonstrates how to use the :mod:`http.cookies` module."
msgstr "次の例は :mod:`http.cookies` の使い方を示したものです。"
