# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Inada Naoki <songofacandy@gmail.com>, 2023
# Naoki Koike, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-12 14:14+0000\n"
"PO-Revision-Date: 2021-06-28 01:50+0000\n"
"Last-Translator: Naoki Koike, 2023\n"
"Language-Team: Japanese (https://app.transifex.com/python-doc/teams/5390/"
"ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../using/configure.rst:3
msgid "Configure Python"
msgstr "Configure"

#: ../../using/configure.rst:6
msgid "Build Requirements"
msgstr ""

#: ../../using/configure.rst:8
msgid "Features required to build CPython:"
msgstr ""

#: ../../using/configure.rst:10
msgid ""
"A `C11 <https://en.cppreference.com/w/c/11>`_ compiler. `Optional C11 "
"features <https://en.wikipedia.org/wiki/"
"C11_(C_standard_revision)#Optional_features>`_ are not required."
msgstr ""

#: ../../using/configure.rst:15
msgid ""
"Support for `IEEE 754 <https://en.wikipedia.org/wiki/IEEE_754>`_ floating "
"point numbers and `floating point Not-a-Number (NaN) <https://en.wikipedia."
"org/wiki/NaN#Floating_point>`_."
msgstr ""

#: ../../using/configure.rst:19
msgid "Support for threads."
msgstr ""

#: ../../using/configure.rst:21
msgid "OpenSSL 1.1.1 or newer for the :mod:`ssl` and :mod:`hashlib` modules."
msgstr ""

#: ../../using/configure.rst:23
msgid "On Windows, Microsoft Visual Studio 2017 or later is required."
msgstr ""

#: ../../using/configure.rst:25
msgid ""
"C11 compiler, IEEE 754 and NaN support are now required. On Windows, Visual "
"Studio 2017 or later is required."
msgstr ""

#: ../../using/configure.rst:29
msgid "OpenSSL 1.1.1 is now required."
msgstr ""

#: ../../using/configure.rst:32
msgid "Thread support and OpenSSL 1.0.2 are now required."
msgstr ""

#: ../../using/configure.rst:35
msgid ""
"Selected C99 features are now required, like ``<stdint.h>`` and ``static "
"inline`` functions."
msgstr ""

#: ../../using/configure.rst:39
msgid "On Windows, Visual Studio 2015 or later is required."
msgstr ""

#: ../../using/configure.rst:42
msgid ""
"See also :pep:`7` \"Style Guide for C Code\" and :pep:`11` \"CPython "
"platform support\"."
msgstr ""

#: ../../using/configure.rst:47
msgid "Generated files"
msgstr ""

#: ../../using/configure.rst:49
msgid ""
"To reduce build dependencies, Python source code contains multiple generated "
"files. Commands to regenerate all generated files::"
msgstr ""

#: ../../using/configure.rst:57
msgid ""
"The ``Makefile.pre.in`` file documents generated files, their inputs, and "
"tools used to regenerate them. Search for ``regen-*`` make targets."
msgstr ""

#: ../../using/configure.rst:61
msgid "configure script"
msgstr ""

#: ../../using/configure.rst:63
msgid ""
"The ``make regen-configure`` command regenerates the ``aclocal.m4`` file and "
"the ``configure`` script using the ``Tools/build/regen-configure.sh`` shell "
"script which uses an Ubuntu container to get the same tools versions and "
"have a reproducible output."
msgstr ""

#: ../../using/configure.rst:68
msgid "The container is optional, the following command can be run locally::"
msgstr ""

#: ../../using/configure.rst:72
msgid ""
"The generated files can change depending on the exact ``autoconf-archive``, "
"``aclocal`` and ``pkg-config`` versions."
msgstr ""

#: ../../using/configure.rst:79
msgid "Configure Options"
msgstr "Configureオプション"

#: ../../using/configure.rst:81
msgid "List all ``./configure`` script options using::"
msgstr "次のコマンドで、全ての ``./configure`` オプションを表示できます。"

#: ../../using/configure.rst:85
msgid ""
"See also the :file:`Misc/SpecialBuilds.txt` in the Python source "
"distribution."
msgstr ""
"Pythonのソース配布の中の :file:`Misc/SpecialBuilds.txt` も参照してください。"

#: ../../using/configure.rst:88
msgid "General Options"
msgstr "一般的なオプション"

#: ../../using/configure.rst:92
msgid ""
"Support loadable extensions in the :mod:`!_sqlite` extension module (default "
"is no) of the :mod:`sqlite3` module."
msgstr ""

#: ../../using/configure.rst:95
msgid ""
"See the :meth:`sqlite3.Connection.enable_load_extension` method of the :mod:"
"`sqlite3` module."
msgstr ""
":mod:`sqlite3` モジュールの :meth:`sqlite3.Connection.enable_load_extension` "
"メソッドを参照してください。"

#: ../../using/configure.rst:102
msgid ""
"Disable IPv6 support (enabled by default if supported), see the :mod:"
"`socket` module."
msgstr ""
"IPv6サポートを無効にします(サポートされている場合はデフォルトで有効)、 :mod:"
"`socket` モジュールを参照してください。"

#: ../../using/configure.rst:107
msgid "Define the size in bits of Python :class:`int` digits: 15 or 30 bits."
msgstr ""
"Python :class:`int` の桁の大きさをビット単位で定義します: 15ビットまたは30"
"ビットです。"

#: ../../using/configure.rst:109
msgid "By default, the digit size is 30."
msgstr "デフォルトでは、桁の大きさは30です。"

#: ../../using/configure.rst:111
msgid "Define the ``PYLONG_BITS_IN_DIGIT`` to ``15`` or ``30``."
msgstr "``PYLONG_BITS_IN_DIGIT`` を ``15`` または ``30`` に定義します。"

#: ../../using/configure.rst:113
msgid "See :data:`sys.int_info.bits_per_digit <sys.int_info>`."
msgstr ""
":data:`sys.int_info.bits_per_digit <sys.int_info>` を参照してください。"

#: ../../using/configure.rst:117
msgid "Set the Python executable suffix to *SUFFIX*."
msgstr "Python の実行ファイルの接頭辞を *SUFFIX* に設定します。"

#: ../../using/configure.rst:119
msgid ""
"The default suffix is ``.exe`` on Windows and macOS (``python.exe`` "
"executable), ``.js`` on Emscripten node, ``.html`` on Emscripten browser, ``."
"wasm`` on WASI, and an empty string on other platforms (``python`` "
"executable)."
msgstr ""
"デフォルトの接尾辞は、 Windows と macOS では ``.exe`` ( ``python.exe`` 実行"
"ファイル)、 Emscripten node では ``.js`` 、 Emscripten browser では ``."
"html`` 、 WASI では ``.wasm`` 、その他のプラットフォームでは空文字列になりま"
"す ( ``python`` 実行ファイル)。"

#: ../../using/configure.rst:124
msgid ""
"The default suffix on WASM platform is one of ``.js``, ``.html`` or ``."
"wasm``."
msgstr ""
"WASM プラットフォームのデフォルトの接頭辞は、 ``.js`` 、 ``.html`` 、 ``."
"wasm`` のうちの1つです。"

#: ../../using/configure.rst:130
msgid ""
"Select the default time zone search path for :const:`zoneinfo.TZPATH`. See "
"the :ref:`Compile-time configuration <zoneinfo_data_compile_time_config>` of "
"the :mod:`zoneinfo` module."
msgstr ""

#: ../../using/configure.rst:134
msgid ""
"Default: ``/usr/share/zoneinfo:/usr/lib/zoneinfo:/usr/share/lib/zoneinfo:/"
"etc/zoneinfo``."
msgstr ""
"デフォルト: ``/usr/share/zoneinfo:/usr/lib/zoneinfo:/usr/share/lib/zoneinfo:/"
"etc/zoneinfo``"

#: ../../using/configure.rst:136
msgid "See :data:`os.pathsep` path separator."
msgstr ":data:`os.pathsep` パスセパレータを参照してください。"

#: ../../using/configure.rst:142
msgid ""
"Build the ``_decimal`` extension module using a thread-local context rather "
"than a coroutine-local context (default), see the :mod:`decimal` module."
msgstr ""
"コルーチンローカルコンテキスト(デフォルト)ではなく、スレッドローカルコンテキ"
"ストを使用して ``_decimal`` 拡張モジュールをビルドします。 :mod:`decimal` モ"
"ジュールを参照してください。"

#: ../../using/configure.rst:145
msgid "See :const:`decimal.HAVE_CONTEXTVAR` and the :mod:`contextvars` module."
msgstr ""

#: ../../using/configure.rst:151
msgid "Override order to check db backends for the :mod:`dbm` module"
msgstr ""
":mod:`dbm` モジュールの DB バックエンドをチェックする順序をオーバーライドしま"
"す。"

#: ../../using/configure.rst:153
msgid ""
"A valid value is a colon (``:``) separated string with the backend names:"
msgstr "有効な値は、バックエンド名をコロン( ``:`` )で区切った文字列です:"

#: ../../using/configure.rst:155
msgid "``ndbm``;"
msgstr ""

#: ../../using/configure.rst:156
msgid "``gdbm``;"
msgstr ""

#: ../../using/configure.rst:157
msgid "``bdb``."
msgstr ""

#: ../../using/configure.rst:161
msgid "Disable C locale coercion to a UTF-8 based locale (enabled by default)."
msgstr ""
"UTF-8 ベースのロケールへの C ロケールの強制を無効にします(デフォルトで有効)。"

#: ../../using/configure.rst:163
msgid "Don't define the ``PY_COERCE_C_LOCALE`` macro."
msgstr "``PY_COERCE_C_LOCALE`` マクロは定義しないでください。"

#: ../../using/configure.rst:165
msgid "See :envvar:`PYTHONCOERCECLOCALE` and the :pep:`538`."
msgstr ":envvar:`PYTHONCOERCECLOCALE` および :pep:`538` を参照してください。"

#: ../../using/configure.rst:169
msgid "Disable all freelists except the empty tuple singleton."
msgstr ""

#: ../../using/configure.rst:175
msgid "Python library directory name (default is ``lib``)."
msgstr "Python のライブラリディレクトリ名(デフォルトは ``lib`` )。"

#: ../../using/configure.rst:177
msgid "Fedora and SuSE use ``lib64`` on 64-bit platforms."
msgstr "Fedora と SuSE は64ビットプラットフォームで ``lib64`` を使用します。"

#: ../../using/configure.rst:179
msgid "See :data:`sys.platlibdir`."
msgstr ":data:`sys.platlibdir` を参照してください。"

#: ../../using/configure.rst:185
msgid ""
"Directory of wheel packages used by the :mod:`ensurepip` module (none by "
"default)."
msgstr ""
":mod:`ensurepip` モジュールが使用する wheel パッケージのディレクトリです(デ"
"フォルトはなし)。"

#: ../../using/configure.rst:188
msgid ""
"Some Linux distribution packaging policies recommend against bundling "
"dependencies. For example, Fedora installs wheel packages in the ``/usr/"
"share/python-wheels/`` directory and don't install the :mod:`!ensurepip."
"_bundled` package."
msgstr ""

#: ../../using/configure.rst:197
msgid ""
"Whether configure should use :program:`pkg-config` to detect build "
"dependencies."
msgstr ""
"configure がビルドの依存関係を検出するために :program:`pkg-config` を使用する"
"かどうかを設定します。"

#: ../../using/configure.rst:200
msgid "``check`` (default): :program:`pkg-config` is optional"
msgstr "``check`` (デフォルト): :program:`pkg-config` はオプションです。"

#: ../../using/configure.rst:201
msgid "``yes``: :program:`pkg-config` is mandatory"
msgstr "``yes`` : :program:`pkg-config` は必須です。"

#: ../../using/configure.rst:202
msgid "``no``: configure does not use :program:`pkg-config` even when present"
msgstr ""
"``no`` : :program:`pkg-config` が存在しても、 configure は使用しません。"

#: ../../using/configure.rst:208
msgid "Turn on internal statistics gathering."
msgstr "内部統計の収集をオンにします。"

#: ../../using/configure.rst:210
msgid ""
"The statistics will be dumped to a arbitrary (probably unique) file in ``/"
"tmp/py_stats/``, or ``C:\\temp\\py_stats\\`` on Windows. If that directory "
"does not exist, results will be printed on stdout."
msgstr ""

#: ../../using/configure.rst:214
msgid "Use ``Tools/scripts/summarize_stats.py`` to read the stats."
msgstr ""
"統計情報を読むには ``Tools/scripts/summarize_stats.py`` を使用してください。"

#: ../../using/configure.rst:219
msgid "WebAssembly Options"
msgstr ""

#: ../../using/configure.rst:223
msgid "Set build flavor for ``wasm32-emscripten``."
msgstr "``wasm32-emscripten`` のビルドフレーバーを設定します。"

#: ../../using/configure.rst:225
msgid "``browser`` (default): preload minimal stdlib, default MEMFS."
msgstr ""
"``browser`` (デフォルト): 最小限の stdlib 、デフォルトの MEMFS をプリロードし"
"ます。"

#: ../../using/configure.rst:226
msgid "``node``: NODERAWFS and pthread support."
msgstr "``node``: NODERAWFS と pthread をサポートします。"

#: ../../using/configure.rst:232
msgid "Turn on dynamic linking support for WASM."
msgstr "WASM のダイナミックリンクサポートをオンにします。"

#: ../../using/configure.rst:234
msgid ""
"Dynamic linking enables ``dlopen``. File size of the executable increases "
"due to limited dead code elimination and additional features."
msgstr ""
"ダイナミックリンクにより ``dlopen`` が可能になります。デッドコードの排除や機"
"能追加に制限があるため、実行ファイルのファイルサイズが大きくなります。"

#: ../../using/configure.rst:241
msgid "Turn on pthreads support for WASM."
msgstr "WASM の pthreads サポートをオンにします。"

#: ../../using/configure.rst:247
msgid "Install Options"
msgstr ""

#: ../../using/configure.rst:251
msgid ""
"Install architecture-independent files in PREFIX. On Unix, it defaults to :"
"file:`/usr/local`."
msgstr ""
"アーキテクチャに依存しないファイルを PREFIX にインストールします。Unix の場"
"合、デフォルトは :file:`/usr/local` です。"

#: ../../using/configure.rst:254
msgid "This value can be retrieved at runtime using :data:`sys.prefix`."
msgstr ""

#: ../../using/configure.rst:256
msgid ""
"As an example, one can use ``--prefix=\"$HOME/.local/\"`` to install a "
"Python in its home directory."
msgstr ""
"例として、 ``--prefix=\"$HOME/.local/\"`` を使用すると、 Python をそのホーム"
"ディレクトリにインストールすることができます。"

#: ../../using/configure.rst:261
msgid ""
"Install architecture-dependent files in EPREFIX, defaults to :option:`--"
"prefix`."
msgstr ""
"アーキテクチャ依存のファイルを EPREFIX にインストールします。デフォルトは :"
"option:`--prefix` です。"

#: ../../using/configure.rst:263
msgid "This value can be retrieved at runtime using :data:`sys.exec_prefix`."
msgstr ""

#: ../../using/configure.rst:267
msgid ""
"Don't build nor install test modules, like the :mod:`test` package or the :"
"mod:`!_testcapi` extension module (built and installed by default)."
msgstr ""

#: ../../using/configure.rst:274
msgid "Select the :mod:`ensurepip` command run on Python installation:"
msgstr ""
"Python のインストール時に実行される :mod:`ensurepip` コマンドを選択します:"

#: ../../using/configure.rst:276
msgid ""
"``upgrade`` (default): run ``python -m ensurepip --altinstall --upgrade`` "
"command."
msgstr ""
"``upgrade`` (デフォルト): ``python -m ensurepip --altinstall --upgrade`` コマ"
"ンドを実行します。"

#: ../../using/configure.rst:278
msgid "``install``: run ``python -m ensurepip --altinstall`` command;"
msgstr ""
"``install``: ``python -m ensurepip --altinstall`` コマンドを実行します。"

#: ../../using/configure.rst:279
msgid "``no``: don't run ensurepip;"
msgstr "``no``: ensurepip を実行しない;"

#: ../../using/configure.rst:285
msgid "Performance options"
msgstr ""

#: ../../using/configure.rst:287
msgid ""
"Configuring Python using ``--enable-optimizations --with-lto`` (PGO + LTO) "
"is recommended for best performance. The experimental ``--enable-bolt`` flag "
"can also be used to improve performance."
msgstr ""

#: ../../using/configure.rst:293
msgid ""
"Enable Profile Guided Optimization (PGO) using :envvar:`PROFILE_TASK` "
"(disabled by default)."
msgstr ""
":envvar:`PROFILE_TASK` を使用して Profile Guided Optimization (PGO) を有効に"
"します(デフォルトでは無効です)。"

#: ../../using/configure.rst:296
msgid ""
"The C compiler Clang requires ``llvm-profdata`` program for PGO. On macOS, "
"GCC also requires it: GCC is just an alias to Clang on macOS."
msgstr ""
"Cコンパイラの Clang では、 PGO のために ``llvm-profdata`` プログラムが必要で"
"す。macOS では、 GCC もこれを必要とします: GCC は macOS の Clang のエイリアス"
"にすぎません。"

#: ../../using/configure.rst:299
msgid ""
"Disable also semantic interposition in libpython if ``--enable-shared`` and "
"GCC is used: add ``-fno-semantic-interposition`` to the compiler and linker "
"flags."
msgstr ""

#: ../../using/configure.rst:305
msgid "Use ``-fno-semantic-interposition`` on GCC."
msgstr "GCC で ``-fno-semantic-interposition`` を使用する。"

#: ../../using/configure.rst:310
msgid ""
"Environment variable used in the Makefile: Python command line arguments for "
"the PGO generation task."
msgstr ""

#: ../../using/configure.rst:313
msgid "Default: ``-m test --pgo --timeout=$(TESTTIMEOUT)``."
msgstr ""

#: ../../using/configure.rst:319
msgid "Enable Link Time Optimization (LTO) in any build (disabled by default)."
msgstr ""

#: ../../using/configure.rst:321
msgid ""
"The C compiler Clang requires ``llvm-ar`` for LTO (``ar`` on macOS), as well "
"as an LTO-aware linker (``ld.gold`` or ``lld``)."
msgstr ""

#: ../../using/configure.rst:326
msgid "To use ThinLTO feature, use ``--with-lto=thin`` on Clang."
msgstr ""

#: ../../using/configure.rst:329
msgid ""
"Use ThinLTO as the default optimization policy on Clang if the compiler "
"accepts the flag."
msgstr ""

#: ../../using/configure.rst:334
msgid ""
"Enable usage of the `BOLT post-link binary optimizer <https://github.com/"
"llvm/llvm-project/tree/main/bolt>`_ (disabled by default)."
msgstr ""

#: ../../using/configure.rst:338
msgid ""
"BOLT is part of the LLVM project but is not always included in their binary "
"distributions. This flag requires that ``llvm-bolt`` and ``merge-fdata`` are "
"available."
msgstr ""

#: ../../using/configure.rst:342
msgid ""
"BOLT is still a fairly new project so this flag should be considered "
"experimental for now. Because this tool operates on machine code its success "
"is dependent on a combination of the build environment + the other "
"optimization configure args + the CPU architecture, and not all combinations "
"are supported. BOLT versions before LLVM 16 are known to crash BOLT under "
"some scenarios. Use of LLVM 16 or newer for BOLT optimization is strongly "
"encouraged."
msgstr ""

#: ../../using/configure.rst:350
msgid ""
"The :envvar:`!BOLT_INSTRUMENT_FLAGS` and :envvar:`!BOLT_APPLY_FLAGS` :"
"program:`configure` variables can be defined to override the default set of "
"arguments for :program:`llvm-bolt` to instrument and apply BOLT data to "
"binaries, respectively."
msgstr ""

#: ../../using/configure.rst:359
msgid ""
"Enable computed gotos in evaluation loop (enabled by default on supported "
"compilers)."
msgstr ""

#: ../../using/configure.rst:364
msgid ""
"Disable the specialized Python memory allocator :ref:`pymalloc <pymalloc>` "
"(enabled by default)."
msgstr ""

#: ../../using/configure.rst:367
msgid "See also :envvar:`PYTHONMALLOC` environment variable."
msgstr ""

#: ../../using/configure.rst:371
msgid ""
"Disable static documentation strings to reduce the memory footprint (enabled "
"by default). Documentation strings defined in Python are not affected."
msgstr ""

#: ../../using/configure.rst:374
msgid "Don't define the ``WITH_DOC_STRINGS`` macro."
msgstr ""

#: ../../using/configure.rst:376
msgid "See the ``PyDoc_STRVAR()`` macro."
msgstr ""

#: ../../using/configure.rst:380
msgid "Enable C-level code profiling with ``gprof`` (disabled by default)."
msgstr ""

#: ../../using/configure.rst:384
msgid ""
"Add ``-fstrict-overflow`` to the C compiler flags (by default we add ``-fno-"
"strict-overflow`` instead)."
msgstr ""

#: ../../using/configure.rst:391
msgid "Python Debug Build"
msgstr ""

#: ../../using/configure.rst:393
msgid ""
"A debug build is Python built with the :option:`--with-pydebug` configure "
"option."
msgstr ""

#: ../../using/configure.rst:396
msgid "Effects of a debug build:"
msgstr ""

#: ../../using/configure.rst:398
msgid ""
"Display all warnings by default: the list of default warning filters is "
"empty in the :mod:`warnings` module."
msgstr ""

#: ../../using/configure.rst:400
msgid "Add ``d`` to :data:`sys.abiflags`."
msgstr ""

#: ../../using/configure.rst:401
msgid "Add :func:`!sys.gettotalrefcount` function."
msgstr ""

#: ../../using/configure.rst:402
msgid "Add :option:`-X showrefcount <-X>` command line option."
msgstr ""

#: ../../using/configure.rst:403
msgid ""
"Add :option:`-d` command line option and :envvar:`PYTHONDEBUG` environment "
"variable to debug the parser."
msgstr ""

#: ../../using/configure.rst:405
msgid ""
"Add support for the ``__lltrace__`` variable: enable low-level tracing in "
"the bytecode evaluation loop if the variable is defined."
msgstr ""

#: ../../using/configure.rst:407
msgid ""
"Install :ref:`debug hooks on memory allocators <default-memory-allocators>` "
"to detect buffer overflow and other memory errors."
msgstr ""

#: ../../using/configure.rst:409
msgid "Define ``Py_DEBUG`` and ``Py_REF_DEBUG`` macros."
msgstr ""

#: ../../using/configure.rst:410
msgid ""
"Add runtime checks: code surrounded by ``#ifdef Py_DEBUG`` and ``#endif``. "
"Enable ``assert(...)`` and ``_PyObject_ASSERT(...)`` assertions: don't set "
"the ``NDEBUG`` macro (see also the :option:`--with-assertions` configure "
"option). Main runtime checks:"
msgstr ""

#: ../../using/configure.rst:415
msgid "Add sanity checks on the function arguments."
msgstr ""

#: ../../using/configure.rst:416
msgid ""
"Unicode and int objects are created with their memory filled with a pattern "
"to detect usage of uninitialized objects."
msgstr ""

#: ../../using/configure.rst:418
msgid ""
"Ensure that functions which can clear or replace the current exception are "
"not called with an exception raised."
msgstr ""

#: ../../using/configure.rst:420
msgid "Check that deallocator functions don't change the current exception."
msgstr ""

#: ../../using/configure.rst:421
msgid ""
"The garbage collector (:func:`gc.collect` function) runs some basic checks "
"on objects consistency."
msgstr ""

#: ../../using/configure.rst:423
msgid ""
"The :c:macro:`!Py_SAFE_DOWNCAST()` macro checks for integer underflow and "
"overflow when downcasting from wide types to narrow types."
msgstr ""

#: ../../using/configure.rst:426
msgid ""
"See also the :ref:`Python Development Mode <devmode>` and the :option:`--"
"with-trace-refs` configure option."
msgstr ""

#: ../../using/configure.rst:429
msgid ""
"Release builds and debug builds are now ABI compatible: defining the "
"``Py_DEBUG`` macro no longer implies the ``Py_TRACE_REFS`` macro (see the :"
"option:`--with-trace-refs` option), which introduces the only ABI "
"incompatibility."
msgstr ""

#: ../../using/configure.rst:437
msgid "Debug options"
msgstr ""

#: ../../using/configure.rst:441
msgid ""
":ref:`Build Python in debug mode <debug-build>`: define the ``Py_DEBUG`` "
"macro (disabled by default)."
msgstr ""

#: ../../using/configure.rst:446
msgid "Enable tracing references for debugging purpose (disabled by default)."
msgstr ""

#: ../../using/configure.rst:448
msgid "Effects:"
msgstr ""

#: ../../using/configure.rst:450
msgid "Define the ``Py_TRACE_REFS`` macro."
msgstr ""

#: ../../using/configure.rst:451
msgid "Add :func:`!sys.getobjects` function."
msgstr ""

#: ../../using/configure.rst:452
msgid "Add :envvar:`PYTHONDUMPREFS` environment variable."
msgstr ""

#: ../../using/configure.rst:454
msgid ""
"This build is not ABI compatible with release build (default build) or debug "
"build (``Py_DEBUG`` and ``Py_REF_DEBUG`` macros)."
msgstr ""

#: ../../using/configure.rst:461
msgid ""
"Build with C assertions enabled (default is no): ``assert(...);`` and "
"``_PyObject_ASSERT(...);``."
msgstr ""

#: ../../using/configure.rst:464
msgid ""
"If set, the ``NDEBUG`` macro is not defined in the :envvar:`OPT` compiler "
"variable."
msgstr ""

#: ../../using/configure.rst:467
msgid ""
"See also the :option:`--with-pydebug` option (:ref:`debug build <debug-"
"build>`) which also enables assertions."
msgstr ""

#: ../../using/configure.rst:474
msgid "Enable Valgrind support (default is no)."
msgstr ""

#: ../../using/configure.rst:478
msgid "Enable DTrace support (default is no)."
msgstr ""

#: ../../using/configure.rst:480
msgid ""
"See :ref:`Instrumenting CPython with DTrace and SystemTap <instrumentation>`."
msgstr ""

#: ../../using/configure.rst:487
msgid ""
"Enable AddressSanitizer memory error detector, ``asan`` (default is no)."
msgstr ""

#: ../../using/configure.rst:493
msgid ""
"Enable MemorySanitizer allocation error detector, ``msan`` (default is no)."
msgstr ""

#: ../../using/configure.rst:499
msgid ""
"Enable UndefinedBehaviorSanitizer undefined behaviour detector, ``ubsan`` "
"(default is no)."
msgstr ""

#: ../../using/configure.rst:506
msgid "Linker options"
msgstr ""

#: ../../using/configure.rst:510
msgid "Enable building a shared Python library: ``libpython`` (default is no)."
msgstr ""

#: ../../using/configure.rst:514
msgid ""
"Do not build ``libpythonMAJOR.MINOR.a`` and do not install ``python.o`` "
"(built and enabled by default)."
msgstr ""

#: ../../using/configure.rst:521
msgid "Libraries options"
msgstr ""

#: ../../using/configure.rst:525
msgid "Link against additional libraries (default is no)."
msgstr ""

#: ../../using/configure.rst:529
msgid ""
"Build the :mod:`!pyexpat` module using an installed ``expat`` library "
"(default is no)."
msgstr ""

#: ../../using/configure.rst:534
msgid ""
"Build the ``_decimal`` extension module using an installed ``mpdec`` "
"library, see the :mod:`decimal` module (default is no)."
msgstr ""

#: ../../using/configure.rst:541
msgid "Use ``editline`` library for backend of the :mod:`readline` module."
msgstr ""

#: ../../using/configure.rst:543
msgid "Define the ``WITH_EDITLINE`` macro."
msgstr ""

#: ../../using/configure.rst:549
msgid "Don't build the :mod:`readline` module (built by default)."
msgstr ""

#: ../../using/configure.rst:551
msgid "Don't define the ``HAVE_LIBREADLINE`` macro."
msgstr ""

#: ../../using/configure.rst:557
msgid ""
"Override ``libm`` math library to *STRING* (default is system-dependent)."
msgstr ""

#: ../../using/configure.rst:561
msgid "Override ``libc`` C library to *STRING* (default is system-dependent)."
msgstr ""

#: ../../using/configure.rst:565
msgid "Root of the OpenSSL directory."
msgstr ""

#: ../../using/configure.rst:571
msgid "Set runtime library directory (rpath) for OpenSSL libraries:"
msgstr ""

#: ../../using/configure.rst:573
msgid "``no`` (default): don't set rpath;"
msgstr ""

#: ../../using/configure.rst:574
msgid ""
"``auto``: auto-detect rpath from :option:`--with-openssl` and ``pkg-config``;"
msgstr ""

#: ../../using/configure.rst:576
msgid "*DIR*: set an explicit rpath."
msgstr ""

#: ../../using/configure.rst:582
msgid "Security Options"
msgstr ""

#: ../../using/configure.rst:586
msgid "Select hash algorithm for use in ``Python/pyhash.c``:"
msgstr ""

#: ../../using/configure.rst:588
msgid "``siphash13`` (default);"
msgstr ""

#: ../../using/configure.rst:589
msgid "``siphash24``;"
msgstr ""

#: ../../using/configure.rst:590
msgid "``fnv``."
msgstr ""

#: ../../using/configure.rst:594
msgid "``siphash13`` is added and it is the new default."
msgstr ""

#: ../../using/configure.rst:599
msgid "Built-in hash modules:"
msgstr ""

#: ../../using/configure.rst:601
msgid "``md5``;"
msgstr ""

#: ../../using/configure.rst:602
msgid "``sha1``;"
msgstr ""

#: ../../using/configure.rst:603
msgid "``sha256``;"
msgstr ""

#: ../../using/configure.rst:604
msgid "``sha512``;"
msgstr ""

#: ../../using/configure.rst:605
msgid "``sha3`` (with shake);"
msgstr ""

#: ../../using/configure.rst:606
msgid "``blake2``."
msgstr ""

#: ../../using/configure.rst:612
msgid "Override the OpenSSL default cipher suites string:"
msgstr ""

#: ../../using/configure.rst:614
msgid "``python`` (default): use Python's preferred selection;"
msgstr ""

#: ../../using/configure.rst:615
msgid "``openssl``: leave OpenSSL's defaults untouched;"
msgstr ""

#: ../../using/configure.rst:616
msgid "*STRING*: use a custom string"
msgstr ""

#: ../../using/configure.rst:618
msgid "See the :mod:`ssl` module."
msgstr ""

#: ../../using/configure.rst:624
msgid ""
"The settings ``python`` and *STRING* also set TLS 1.2 as minimum protocol "
"version."
msgstr ""

#: ../../using/configure.rst:628
msgid "macOS Options"
msgstr ""

#: ../../using/configure.rst:630
msgid "See ``Mac/README.rst``."
msgstr ""

#: ../../using/configure.rst:635
msgid ""
"Create a universal binary build. *SDKDIR* specifies which macOS SDK should "
"be used to perform the build (default is no)."
msgstr ""

#: ../../using/configure.rst:641
msgid ""
"Create a Python.framework rather than a traditional Unix install. Optional "
"*INSTALLDIR* specifies the installation path (default is no)."
msgstr ""

#: ../../using/configure.rst:646
msgid ""
"Specify the kind of universal binary that should be created. This option is "
"only valid when :option:`--enable-universalsdk` is set."
msgstr ""

#: ../../using/configure.rst:649
msgid "Options:"
msgstr ""

#: ../../using/configure.rst:651
msgid "``universal2``;"
msgstr ""

#: ../../using/configure.rst:652
msgid "``32-bit``;"
msgstr ""

#: ../../using/configure.rst:653
msgid "``64-bit``;"
msgstr ""

#: ../../using/configure.rst:654
msgid "``3-way``;"
msgstr ""

#: ../../using/configure.rst:655
msgid "``intel``;"
msgstr ""

#: ../../using/configure.rst:656
msgid "``intel-32``;"
msgstr ""

#: ../../using/configure.rst:657
msgid "``intel-64``;"
msgstr ""

#: ../../using/configure.rst:658
msgid "``all``."
msgstr ""

#: ../../using/configure.rst:662
msgid ""
"Specify the name for the python framework on macOS only valid when :option:"
"`--enable-framework` is set (default: ``Python``)."
msgstr ""

#: ../../using/configure.rst:667
msgid "Cross Compiling Options"
msgstr ""

#: ../../using/configure.rst:669
msgid ""
"Cross compiling, also known as cross building, can be used to build Python "
"for another CPU architecture or platform. Cross compiling requires a Python "
"interpreter for the build platform. The version of the build Python must "
"match the version of the cross compiled host Python."
msgstr ""

#: ../../using/configure.rst:676
msgid ""
"configure for building on BUILD, usually guessed by :program:`config.guess`."
msgstr ""

#: ../../using/configure.rst:680
msgid "cross-compile to build programs to run on HOST (target platform)"
msgstr ""

#: ../../using/configure.rst:684
msgid "path to build ``python`` binary for cross compiling"
msgstr ""

#: ../../using/configure.rst:690
msgid "An environment variable that points to a file with configure overrides."
msgstr ""

#: ../../using/configure.rst:692
msgid "Example *config.site* file::"
msgstr ""

#: ../../using/configure.rst:700
msgid "Cross compiling example::"
msgstr ""

#: ../../using/configure.rst:709
msgid "Python Build System"
msgstr ""

#: ../../using/configure.rst:712
msgid "Main files of the build system"
msgstr ""

#: ../../using/configure.rst:714
msgid ":file:`configure.ac` => :file:`configure`;"
msgstr ""

#: ../../using/configure.rst:715
msgid ""
":file:`Makefile.pre.in` => :file:`Makefile` (created by :file:`configure`);"
msgstr ""

#: ../../using/configure.rst:716
msgid ":file:`pyconfig.h` (created by :file:`configure`);"
msgstr ""

#: ../../using/configure.rst:717
msgid ""
":file:`Modules/Setup`: C extensions built by the Makefile using :file:"
"`Module/makesetup` shell script;"
msgstr ""

#: ../../using/configure.rst:721
msgid "Main build steps"
msgstr ""

#: ../../using/configure.rst:723
msgid "C files (``.c``) are built as object files (``.o``)."
msgstr ""

#: ../../using/configure.rst:724
msgid "A static ``libpython`` library (``.a``) is created from objects files."
msgstr ""

#: ../../using/configure.rst:725
msgid ""
"``python.o`` and the static ``libpython`` library are linked into the final "
"``python`` program."
msgstr ""

#: ../../using/configure.rst:727
msgid "C extensions are built by the Makefile (see :file:`Modules/Setup`)."
msgstr ""

#: ../../using/configure.rst:730
msgid "Main Makefile targets"
msgstr ""

#: ../../using/configure.rst:732
msgid "``make``: Build Python with the standard library."
msgstr ""

#: ../../using/configure.rst:733
msgid ""
"``make platform:``: build the ``python`` program, but don't build the "
"standard library extension modules."
msgstr ""

#: ../../using/configure.rst:735
msgid ""
"``make profile-opt``: build Python using Profile Guided Optimization (PGO). "
"You can use the configure :option:`--enable-optimizations` option to make "
"this the default target of the ``make`` command (``make all`` or just "
"``make``)."
msgstr ""

#: ../../using/configure.rst:739
msgid ""
"``make buildbottest``: Build Python and run the Python test suite, the same "
"way than buildbots test Python. Set ``TESTTIMEOUT`` variable (in seconds) to "
"change the test timeout (1200 by default: 20 minutes)."
msgstr ""

#: ../../using/configure.rst:742
msgid "``make install``: Build and install Python."
msgstr ""

#: ../../using/configure.rst:743
msgid ""
"``make regen-all``: Regenerate (almost) all generated files; ``make regen-"
"stdlib-module-names`` and ``autoconf`` must be run separately for the "
"remaining generated files."
msgstr ""

#: ../../using/configure.rst:746
msgid "``make clean``: Remove built files."
msgstr ""

#: ../../using/configure.rst:747
msgid ""
"``make distclean``: Same than ``make clean``, but remove also files created "
"by the configure script."
msgstr ""

#: ../../using/configure.rst:751
msgid "C extensions"
msgstr ""

#: ../../using/configure.rst:753
msgid ""
"Some C extensions are built as built-in modules, like the ``sys`` module. "
"They are built with the ``Py_BUILD_CORE_BUILTIN`` macro defined. Built-in "
"modules have no ``__file__`` attribute::"
msgstr ""

#: ../../using/configure.rst:765
msgid ""
"Other C extensions are built as dynamic libraries, like the ``_asyncio`` "
"module. They are built with the ``Py_BUILD_CORE_MODULE`` macro defined. "
"Example on Linux x86-64::"
msgstr ""

#: ../../using/configure.rst:775
msgid ""
":file:`Modules/Setup` is used to generate Makefile targets to build C "
"extensions. At the beginning of the files, C extensions are built as built-"
"in modules. Extensions defined after the ``*shared*`` marker are built as "
"dynamic libraries."
msgstr ""

#: ../../using/configure.rst:779
msgid ""
"The :c:macro:`!PyAPI_FUNC()`, :c:macro:`!PyAPI_DATA()` and :c:macro:"
"`PyMODINIT_FUNC` macros of :file:`Include/exports.h` are defined differently "
"depending if the ``Py_BUILD_CORE_MODULE`` macro is defined:"
msgstr ""

#: ../../using/configure.rst:783
msgid "Use ``Py_EXPORTED_SYMBOL`` if the ``Py_BUILD_CORE_MODULE`` is defined"
msgstr ""

#: ../../using/configure.rst:784
msgid "Use ``Py_IMPORTED_SYMBOL`` otherwise."
msgstr ""

#: ../../using/configure.rst:786
msgid ""
"If the ``Py_BUILD_CORE_BUILTIN`` macro is used by mistake on a C extension "
"built as a shared library, its :samp:`PyInit_{xxx}()` function is not "
"exported, causing an :exc:`ImportError` on import."
msgstr ""

#: ../../using/configure.rst:792
msgid "Compiler and linker flags"
msgstr ""

#: ../../using/configure.rst:794
msgid ""
"Options set by the ``./configure`` script and environment variables and used "
"by ``Makefile``."
msgstr ""

#: ../../using/configure.rst:798
msgid "Preprocessor flags"
msgstr ""

#: ../../using/configure.rst:802
msgid ""
"Value of :envvar:`CPPFLAGS` variable passed to the ``./configure`` script."
msgstr ""

#: ../../using/configure.rst:808
msgid ""
"(Objective) C/C++ preprocessor flags, e.g. :samp:`-I{include_dir}` if you "
"have headers in a nonstandard directory *include_dir*."
msgstr ""

#: ../../using/configure.rst:811 ../../using/configure.rst:1001
msgid ""
"Both :envvar:`CPPFLAGS` and :envvar:`LDFLAGS` need to contain the shell's "
"value to be able to build extension modules using the directories specified "
"in the environment variables."
msgstr ""

#: ../../using/configure.rst:821
msgid ""
"Extra preprocessor flags added for building the interpreter object files."
msgstr ""

#: ../../using/configure.rst:823
msgid ""
"Default: ``$(BASECPPFLAGS) -I. -I$(srcdir)/Include $(CONFIGURE_CPPFLAGS) "
"$(CPPFLAGS)``."
msgstr ""

#: ../../using/configure.rst:828
msgid "Compiler flags"
msgstr ""

#: ../../using/configure.rst:832
msgid "C compiler command."
msgstr ""

#: ../../using/configure.rst:834
msgid "Example: ``gcc -pthread``."
msgstr ""

#: ../../using/configure.rst:838
msgid "C++ compiler command."
msgstr ""

#: ../../using/configure.rst:840
msgid "Example: ``g++ -pthread``."
msgstr ""

#: ../../using/configure.rst:844
msgid "C compiler flags."
msgstr ""

#: ../../using/configure.rst:848
msgid ""
":envvar:`CFLAGS_NODIST` is used for building the interpreter and stdlib C "
"extensions.  Use it when a compiler flag should *not* be part of :envvar:"
"`CFLAGS` once Python is installed (:gh:`65320`)."
msgstr ""

#: ../../using/configure.rst:852
msgid "In particular, :envvar:`CFLAGS` should not contain:"
msgstr ""

#: ../../using/configure.rst:854
msgid ""
"the compiler flag ``-I`` (for setting the search path for include files). "
"The ``-I`` flags are processed from left to right, and any flags in :envvar:"
"`CFLAGS` would take precedence over user- and package-supplied ``-I`` flags."
msgstr ""

#: ../../using/configure.rst:859
msgid ""
"hardening flags such as ``-Werror`` because distributions cannot control "
"whether packages installed by users conform to such heightened standards."
msgstr ""

#: ../../using/configure.rst:867
msgid ""
"Options passed to the :mod:`compileall` command line when building PYC files "
"in ``make install``. Default: ``-j0``."
msgstr ""

#: ../../using/configure.rst:874
msgid "Extra C compiler flags."
msgstr ""

#: ../../using/configure.rst:878
msgid ""
"Value of :envvar:`CFLAGS` variable passed to the ``./configure`` script."
msgstr ""

#: ../../using/configure.rst:885
msgid ""
"Value of :envvar:`CFLAGS_NODIST` variable passed to the ``./configure`` "
"script."
msgstr ""

#: ../../using/configure.rst:892
msgid "Base compiler flags."
msgstr ""

#: ../../using/configure.rst:896
msgid "Optimization flags."
msgstr ""

#: ../../using/configure.rst:900
msgid "Strict or non-strict aliasing flags used to compile ``Python/dtoa.c``."
msgstr ""

#: ../../using/configure.rst:906
msgid "Compiler flags used to build a shared library."
msgstr ""

#: ../../using/configure.rst:908
msgid "For example, ``-fPIC`` is used on Linux and on BSD."
msgstr ""

#: ../../using/configure.rst:912
msgid "Extra C flags added for building the interpreter object files."
msgstr ""

#: ../../using/configure.rst:914
msgid ""
"Default: ``$(CCSHARED)`` when :option:`--enable-shared` is used, or an empty "
"string otherwise."
msgstr ""

#: ../../using/configure.rst:919
msgid ""
"Default: ``$(BASECFLAGS) $(OPT) $(CONFIGURE_CFLAGS) $(CFLAGS) "
"$(EXTRA_CFLAGS)``."
msgstr ""

#: ../../using/configure.rst:923
msgid ""
"Default: ``$(CONFIGURE_CFLAGS_NODIST) $(CFLAGS_NODIST) -I$(srcdir)/Include/"
"internal``."
msgstr ""

#: ../../using/configure.rst:929
msgid "C flags used for building the interpreter object files."
msgstr ""

#: ../../using/configure.rst:931
msgid ""
"Default: ``$(PY_CFLAGS) $(PY_CFLAGS_NODIST) $(PY_CPPFLAGS) "
"$(CFLAGSFORSHARED)``."
msgstr ""

#: ../../using/configure.rst:937
msgid "Default: ``$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE``."
msgstr ""

#: ../../using/configure.rst:943
msgid ""
"Compiler flags to build a standard library extension module as a built-in "
"module, like the :mod:`posix` module."
msgstr ""

#: ../../using/configure.rst:946
msgid "Default: ``$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE_BUILTIN``."
msgstr ""

#: ../../using/configure.rst:952
msgid "Purify command. Purify is a memory debugger program."
msgstr ""

#: ../../using/configure.rst:954
msgid "Default: empty string (not used)."
msgstr ""

#: ../../using/configure.rst:958
msgid "Linker flags"
msgstr ""

#: ../../using/configure.rst:962
msgid ""
"Linker command used to build programs like ``python`` and ``_testembed``."
msgstr ""

#: ../../using/configure.rst:964
msgid "Default: ``$(PURIFY) $(CC)``."
msgstr ""

#: ../../using/configure.rst:968
msgid ""
"Value of :envvar:`LDFLAGS` variable passed to the ``./configure`` script."
msgstr ""

#: ../../using/configure.rst:970
msgid ""
"Avoid assigning :envvar:`CFLAGS`, :envvar:`LDFLAGS`, etc. so users can use "
"them on the command line to append to these values without stomping the pre-"
"set values."
msgstr ""

#: ../../using/configure.rst:978
msgid ""
":envvar:`LDFLAGS_NODIST` is used in the same manner as :envvar:"
"`CFLAGS_NODIST`.  Use it when a linker flag should *not* be part of :envvar:"
"`LDFLAGS` once Python is installed (:gh:`65320`)."
msgstr ""

#: ../../using/configure.rst:982
msgid "In particular, :envvar:`LDFLAGS` should not contain:"
msgstr ""

#: ../../using/configure.rst:984
msgid ""
"the compiler flag ``-L`` (for setting the search path for libraries). The ``-"
"L`` flags are processed from left to right, and any flags in :envvar:"
"`LDFLAGS` would take precedence over user- and package-supplied ``-L`` flags."
msgstr ""

#: ../../using/configure.rst:991
msgid ""
"Value of :envvar:`LDFLAGS_NODIST` variable passed to the ``./configure`` "
"script."
msgstr ""

#: ../../using/configure.rst:998
msgid ""
"Linker flags, e.g. :samp:`-L{lib_dir}` if you have libraries in a "
"nonstandard directory *lib_dir*."
msgstr ""

#: ../../using/configure.rst:1007
msgid ""
"Linker flags to pass libraries to the linker when linking the Python "
"executable."
msgstr ""

#: ../../using/configure.rst:1010
msgid "Example: ``-lrt``."
msgstr ""

#: ../../using/configure.rst:1014
msgid "Command to build a shared library."
msgstr ""

#: ../../using/configure.rst:1016
msgid "Default: ``@LDSHARED@ $(PY_LDFLAGS)``."
msgstr ""

#: ../../using/configure.rst:1020
msgid "Command to build ``libpython`` shared library."
msgstr ""

#: ../../using/configure.rst:1022
msgid "Default: ``@BLDSHARED@ $(PY_CORE_LDFLAGS)``."
msgstr ""

#: ../../using/configure.rst:1026
msgid "Default: ``$(CONFIGURE_LDFLAGS) $(LDFLAGS)``."
msgstr ""

#: ../../using/configure.rst:1030
msgid "Default: ``$(CONFIGURE_LDFLAGS_NODIST) $(LDFLAGS_NODIST)``."
msgstr ""

#: ../../using/configure.rst:1036
msgid "Linker flags used for building the interpreter object files."
msgstr ""
