# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-04-20 00:12+0000\n"
"PO-Revision-Date: 2020-05-30 11:51+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Spanish (Spain) (https://app.transifex.com/python-doc/"
"teams/5390/es_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_ES\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: ../../c-api/type.rst:6
msgid "Type Objects"
msgstr "Objetos tipo "

#: ../../c-api/type.rst:13
msgid "The C structure of the objects used to describe built-in types."
msgstr ""
"La estructura C de los objetos utilizados para describir los tipos "
"incorporados."

#: ../../c-api/type.rst:18
msgid ""
"This is the type object for type objects; it is the same object as :class:"
"`type` in the Python layer."
msgstr ""
"Este es el objeto de tipo para los objetos de tipo; es el mismo objeto que :"
"class:`type` en la capa de Python."

#: ../../c-api/type.rst:24
msgid ""
"Return true if the object *o* is a type object, including instances of types "
"derived from the standard type object.  Return false in all other cases."
msgstr ""

#: ../../c-api/type.rst:30
msgid ""
"Return true if the object *o* is a type object, but not a subtype of the "
"standard type object.  Return false in all other cases."
msgstr ""

#: ../../c-api/type.rst:36
msgid "Clear the internal lookup cache. Return the current version tag."
msgstr ""
"Borrar la caché interna de búsqueda. Devolver la etiqueta de la versión "
"actual."

#: ../../c-api/type.rst:40
msgid ""
"Return the :c:member:`~PyTypeObject.tp_flags` member of *type*. This "
"function is primarily meant for use with `Py_LIMITED_API`; the individual "
"flag bits are guaranteed to be stable across Python releases, but access to :"
"c:member:`~PyTypeObject.tp_flags` itself is not part of the limited API."
msgstr ""

#: ../../c-api/type.rst:47
msgid "The return type is now ``unsigned long`` rather than ``long``."
msgstr "El tipo de retorno ahora es ``unsigned long`` en lugar de ``long``."

#: ../../c-api/type.rst:53
msgid ""
"Invalidate the internal lookup cache for the type and all of its subtypes.  "
"This function must be called after any manual modification of the attributes "
"or base classes of the type."
msgstr ""
"Invalida la caché de búsqueda interna para el tipo y todos sus subtipos.  "
"Esta función debe invocarse después de cualquier modificación manual de los "
"atributos o clases base del tipo."

#: ../../c-api/type.rst:60
msgid ""
"Return true if the type object *o* sets the feature *feature*.  Type "
"features are denoted by single bit flags."
msgstr ""

#: ../../c-api/type.rst:66
msgid ""
"Return true if the type object includes support for the cycle detector; this "
"tests the type flag :const:`Py_TPFLAGS_HAVE_GC`."
msgstr ""
"Devuelve verdadero si el objeto de tipo incluye soporte para el detector de "
"ciclos; esto prueba la bandera de tipo :const:`Py_TPFLAGS_HAVE_GC`."

#: ../../c-api/type.rst:72
msgid "Return true if *a* is a subtype of *b*."
msgstr "Devuelve true si *a* es un subtipo de *b*."

#: ../../c-api/type.rst:74
msgid ""
"This function only checks for actual subtypes, which means that :meth:"
"`~class.__subclasscheck__` is not called on *b*.  Call :c:func:"
"`PyObject_IsSubclass` to do the same check that :func:`issubclass` would do."
msgstr ""
"Esta función solo verifica los subtipos reales, lo que significa que no se "
"llama a :meth:`~class.__subclasscheck__` en *b*. Llama a :c:func:"
"`PyObject_IsSubclass` para hacer la misma verificación que haría :func:"
"`issubclass`."

#: ../../c-api/type.rst:82
msgid ""
"Generic handler for the :c:member:`~PyTypeObject.tp_alloc` slot of a type "
"object.  Use Python's default memory allocation mechanism to allocate a new "
"instance and initialize all its contents to ``NULL``."
msgstr ""
"Manejador genérico para la ranura :c:member:`~PyTypeObject.tp_alloc` de un "
"objeto de tipo. Utilizar el mecanismo de asignación de memoria "
"predeterminado de Python para asignar una nueva instancia e inicializar "
"todos sus contenidos a ``NULL``."

#: ../../c-api/type.rst:88
msgid ""
"Generic handler for the :c:member:`~PyTypeObject.tp_new` slot of a type "
"object.  Create a new instance using the type's :c:member:`~PyTypeObject."
"tp_alloc` slot."
msgstr ""
"Manejador genérico para la ranura :c:member:`~PyTypeObject.tp_new` de un "
"objeto de tipo. Crea una nueva instancia utilizando la ranura :c:member:"
"`~PyTypeObject.tp_alloc` del tipo."

#: ../../c-api/type.rst:93
msgid ""
"Finalize a type object.  This should be called on all type objects to finish "
"their initialization.  This function is responsible for adding inherited "
"slots from a type's base class.  Return ``0`` on success, or return ``-1`` "
"and sets an exception on error."
msgstr ""
"Finaliza un objeto de tipo.  Se debe llamar en todos los objetos de tipo "
"para finalizar su inicialización.  Esta función es responsable de añadir las "
"ranuras heredadas de la clase base de un tipo.  Devuelve ``0`` en caso de "
"éxito, o devuelve ``-1`` y establece una excepción en caso de error."

#: ../../c-api/type.rst:100
msgid ""
"Return the function pointer stored in the given slot. If the result is "
"``NULL``, this indicates that either the slot is ``NULL``, or that the "
"function was called with invalid parameters. Callers will typically cast the "
"result pointer into the appropriate function type."
msgstr ""
"Devuelve el puntero de la función almacenada en la ranura dada. Si el "
"resultado es ``NULL``, esto indica que la ranura es ``NULL``, o que se llamó "
"la función con parámetros inválidos. Quienes llaman a la función normalmente "
"convertirán el puntero resultante en el tipo de función apropiado."

#: ../../c-api/type.rst:106
msgid ""
"See :c:member:`PyType_Slot.slot` for possible values of the *slot* argument."
msgstr ""
"Ver :c:member:`PyType_Slot.slot` para los posibles valores del argumento "
"*slot*."

#: ../../c-api/type.rst:108
msgid "An exception is raised if *type* is not a heap type."
msgstr ""

#: ../../c-api/type.rst:114
msgid "Creating Heap-Allocated Types"
msgstr "Crear Tipos Asignados en el Montón"

#: ../../c-api/type.rst:116
msgid ""
"The following functions and structs are used to create :ref:`heap types "
"<heap-types>`."
msgstr ""
"Las siguientes funciones y estructuras se utilizan para crear tipos :ref:"
"`heap <heap-types>`."

#: ../../c-api/type.rst:121
msgid ""
"Creates and returns a heap type object from the *spec* (:const:"
"`Py_TPFLAGS_HEAPTYPE`)."
msgstr ""

#: ../../c-api/type.rst:124
msgid ""
"If *bases* is a tuple, the created heap type contains all types contained in "
"it as base types."
msgstr ""

#: ../../c-api/type.rst:127
msgid ""
"If *bases* is ``NULL``, the *Py_tp_bases* slot is used instead. If that also "
"is ``NULL``, the *Py_tp_base* slot is used instead. If that also is "
"``NULL``, the new type derives from :class:`object`."
msgstr ""

#: ../../c-api/type.rst:131
msgid "This function calls :c:func:`PyType_Ready` on the new type."
msgstr "Esta función llama a :c:func:`PyType_Ready` en el nuevo tipo."

#: ../../c-api/type.rst:137
msgid "Equivalent to ``PyType_FromSpecWithBases(spec, NULL)``."
msgstr "Equivalente a ``PyType_FromSpecWithBases(spec, NULL)``."

#: ../../c-api/type.rst:141
msgid "Structure defining a type's behavior."
msgstr "Estructura que define el comportamiento de un tipo."

#: ../../c-api/type.rst:145
msgid "Name of the type, used to set :c:member:`PyTypeObject.tp_name`."
msgstr ""
"Nombre del tipo, utilizado para establecer :c:member:`PyTypeObject.tp_name`."

#: ../../c-api/type.rst:150
msgid ""
"Size of the instance in bytes, used to set :c:member:`PyTypeObject."
"tp_basicsize` and :c:member:`PyTypeObject.tp_itemsize`."
msgstr ""
"Tamaño de la instancia en bytes, utilizado para establecer :c:member:"
"`PyTypeObject.tp_basicsize` y :c:member:`PyTypeObject.tp_itemsize`."

#: ../../c-api/type.rst:156
msgid "Type flags, used to set :c:member:`PyTypeObject.tp_flags`."
msgstr ""
"Banderas de tipo, utilizadas para establecer :c:member:`PyTypeObject."
"tp_flags`."

#: ../../c-api/type.rst:158
msgid ""
"If the ``Py_TPFLAGS_HEAPTYPE`` flag is not set, :c:func:"
"`PyType_FromSpecWithBases` sets it automatically."
msgstr ""
"Si la bandera ``Py_TPFLAGS_HEAPTYPE`` no está activada, :c:func:"
"`PyType_FromSpecWithBases` la activa automáticamente."

#: ../../c-api/type.rst:163
msgid ""
"Array of :c:type:`PyType_Slot` structures. Terminated by the special slot "
"value ``{0, NULL}``."
msgstr ""
"Matriz de estructuras :c:type:`PyType_Slot`. Terminado por el valor de "
"ranura especial ``{0, NULL}``."

#: ../../c-api/type.rst:168
msgid ""
"Structure defining optional functionality of a type, containing a slot ID "
"and a value pointer."
msgstr ""
"Estructura que define la funcionalidad opcional de un tipo, que contiene un "
"ID de ranura y un puntero de valor."

#: ../../c-api/type.rst:173
msgid "A slot ID."
msgstr "Un ID de ranura."

#: ../../c-api/type.rst:175
msgid ""
"Slot IDs are named like the field names of the structures :c:type:"
"`PyTypeObject`, :c:type:`PyNumberMethods`, :c:type:`PySequenceMethods`, :c:"
"type:`PyMappingMethods` and :c:type:`PyAsyncMethods` with an added ``Py_`` "
"prefix. For example, use:"
msgstr ""
"Los IDs de las ranuras se nombran como los nombres de campo de las "
"estructuras :c:type:`PyTypeObject`, :c:type:`PyNumberMethods`, :c:type:"
"`PySequenceMethods`, :c:type:`PyMappingMethods` y :c:type:`PyAsyncMethods` "
"con un prefijo ``Py_`` añadido. Por ejemplo, utiliza:"

#: ../../c-api/type.rst:181
msgid "``Py_tp_dealloc`` to set :c:member:`PyTypeObject.tp_dealloc`"
msgstr "``Py_tp_dealloc`` para establecer :c:member:`PyTypeObject.tp_dealloc`"

#: ../../c-api/type.rst:182
msgid "``Py_nb_add`` to set :c:member:`PyNumberMethods.nb_add`"
msgstr "``Py_nb_add`` para establecer :c:member:`PyNumberMethods.nb_add`"

#: ../../c-api/type.rst:183
msgid "``Py_sq_length`` to set :c:member:`PySequenceMethods.sq_length`"
msgstr ""
"``Py_sq_length`` para establecer :c:member:`PySequenceMethods.sq_length`"

#: ../../c-api/type.rst:185
msgid ""
"The following fields cannot be set using :c:type:`PyType_Spec` and :c:type:"
"`PyType_Slot`:"
msgstr ""

#: ../../c-api/type.rst:187
msgid ":c:member:`~PyTypeObject.tp_dict`"
msgstr ":c:member:`~PyTypeObject.tp_dict`"

#: ../../c-api/type.rst:188
msgid ":c:member:`~PyTypeObject.tp_mro`"
msgstr ":c:member:`~PyTypeObject.tp_mro`"

#: ../../c-api/type.rst:189
msgid ":c:member:`~PyTypeObject.tp_cache`"
msgstr ":c:member:`~PyTypeObject.tp_cache`"

#: ../../c-api/type.rst:190
msgid ":c:member:`~PyTypeObject.tp_subclasses`"
msgstr ":c:member:`~PyTypeObject.tp_subclasses`"

#: ../../c-api/type.rst:191
msgid ":c:member:`~PyTypeObject.tp_weaklist`"
msgstr ":c:member:`~PyTypeObject.tp_weaklist`"

#: ../../c-api/type.rst:192
msgid ":c:member:`~PyTypeObject.tp_print`"
msgstr ""

#: ../../c-api/type.rst:193
msgid ":c:member:`~PyTypeObject.tp_weaklistoffset`"
msgstr ":c:member:`~PyTypeObject.tp_weaklistoffset`"

#: ../../c-api/type.rst:194
msgid ":c:member:`~PyTypeObject.tp_dictoffset`"
msgstr ":c:member:`~PyTypeObject.tp_dictoffset`"

#: ../../c-api/type.rst:195
msgid ":c:member:`~PyBufferProcs.bf_getbuffer`"
msgstr ":c:member:`~PyBufferProcs.bf_getbuffer`"

#: ../../c-api/type.rst:196
msgid ":c:member:`~PyBufferProcs.bf_releasebuffer`"
msgstr ":c:member:`~PyBufferProcs.bf_releasebuffer`"

#: ../../c-api/type.rst:198
msgid ""
"Setting :c:data:`Py_tp_bases` or :c:data:`Py_tp_base` may be problematic on "
"some platforms. To avoid issues, use the *bases* argument of :py:func:"
"`PyType_FromSpecWithBases` instead."
msgstr ""
"Establecer :c:data:`Py_tp_bases` o :c:data:`Py_tp_base` puede ser "
"problemático en algunas plataformas. Para evitar problemas, utilizar en su "
"lugar el argumento *bases* de :py:func:`PyType_FromSpecWithBases`."

#: ../../c-api/type.rst:205
msgid ""
"The desired value of the slot. In most cases, this is a pointer to a "
"function."
msgstr ""
"El valor deseado de la ranura. En la mayoría de los casos, se trata de un "
"puntero a una función."

#: ../../c-api/type.rst:208
msgid "May not be ``NULL``."
msgstr ""
