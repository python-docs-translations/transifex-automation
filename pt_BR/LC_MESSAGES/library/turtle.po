# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Ruan Aragão <ruanaragao2@gmail.com>, 2021
# Marco Rougeth <marco@rougeth.com>, 2021
# Danilo Lima <djkcond@gmail.com>, 2021
# i17obot <i17obot@rougeth.com>, 2021
# Kattson Bastos, 2022
# ramalho <luciano@ramalho.org>, 2022
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2023
# And Past <andrepgs@gmail.com>, 2023
# Rafael Fontenelle <rffontenelle@gmail.com>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-15 14:13+0000\n"
"PO-Revision-Date: 2021-06-28 01:16+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2023\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/turtle.rst:3
msgid ":mod:`turtle` --- Turtle graphics"
msgstr ":mod:`turtle` --- Gráficos Tartaruga"

#: ../../library/turtle.rst:10
msgid "**Source code:** :source:`Lib/turtle.py`"
msgstr "**Código-fonte:** :source:`Lib/turtle.py`"

#: ../../library/turtle.rst:20
msgid "Introduction"
msgstr "Introdução"

#: ../../library/turtle.rst:22
msgid ""
"Turtle graphics is an implementation of `the popular geometric drawing tools "
"introduced in Logo <https://en.wikipedia.org/wiki/Turtle_ (robot)>`_, "
"developed by Wally Feurzeig, Seymour Papert and Cynthia Solomon in 1967."
msgstr ""
"Os gráficos Turtle são uma implementação das `populares ferramentas de "
"desenho geométrico introduzidas em Logo <https://en.wikipedia.org/wiki/"
"Turtle_(robot)>`_, desenvolvido por Wally Feurzeig, Seymour Papert e Cynthia "
"Solomon em 1967."

#: ../../library/turtle.rst:29
msgid ""
"Turtle can draw intricate shapes using programs that repeat simple moves."
msgstr ""
"A tartaruga pode desenhar formas intrincadas usando programas que repetem "
"movimentos simples."

#: ../../library/turtle.rst:35
msgid ""
"In Python, turtle graphics provides a representation of a physical "
"\"turtle\" (a little robot with a pen) that draws on a sheet of paper on the "
"floor."
msgstr ""

#: ../../library/turtle.rst:38
msgid ""
"It's an effective and well-proven way for learners to encounter programming "
"concepts and interaction with software, as it provides instant, visible "
"feedback. It also provides convenient access to graphical output in general."
msgstr ""

#: ../../library/turtle.rst:43
msgid ""
"Turtle drawing was originally created as an educational tool, to be used by "
"teachers in the classroom. For the programmer who needs to produce some "
"graphical output it can be a way to do that without the overhead of "
"introducing more complex or external libraries into their work."
msgstr ""

#: ../../library/turtle.rst:52
msgid "Tutorial"
msgstr "Tutorial"

#: ../../library/turtle.rst:54
msgid ""
"New users should start here. In this tutorial we'll explore some of the "
"basics of turtle drawing."
msgstr ""

#: ../../library/turtle.rst:59
msgid "Starting a turtle environment"
msgstr ""

#: ../../library/turtle.rst:61
msgid "In a Python shell, import all the objects of the ``turtle`` module::"
msgstr ""

#: ../../library/turtle.rst:65
msgid ""
"If you run into a ``No module named '_tkinter'`` error, you'll have to "
"install the :mod:`Tk interface package <tkinter>` on your system."
msgstr ""

#: ../../library/turtle.rst:70
msgid "Basic drawing"
msgstr ""

#: ../../library/turtle.rst:72
msgid "Send the turtle forward 100 steps::"
msgstr ""

#: ../../library/turtle.rst:76
msgid ""
"You should see (most likely, in a new window on your display) a line drawn "
"by the turtle, heading East. Change the direction of the turtle, so that it "
"turns 120 degrees left (anti-clockwise)::"
msgstr ""

#: ../../library/turtle.rst:82
msgid "Let's continue by drawing a triangle::"
msgstr ""

#: ../../library/turtle.rst:88
msgid ""
"Notice how the turtle, represented by an arrow, points in different "
"directions as you steer it."
msgstr ""

#: ../../library/turtle.rst:91
msgid ""
"Experiment with those commands, and also with ``backward()`` and ``right()``."
msgstr ""

#: ../../library/turtle.rst:96 ../../library/turtle.rst:346
#: ../../library/turtle.rst:1016
msgid "Pen control"
msgstr "Controle da Caneta"

#: ../../library/turtle.rst:98
msgid ""
"Try changing the color - for example, ``color('blue')`` - and width of the "
"line - for example, ``width(3)`` - and then drawing again."
msgstr ""

#: ../../library/turtle.rst:101
msgid ""
"You can also move the turtle around without drawing, by lifting up the pen: "
"``up()`` before moving. To start drawing again, use ``down()``."
msgstr ""

#: ../../library/turtle.rst:106
msgid "The turtle's position"
msgstr ""

#: ../../library/turtle.rst:108
msgid ""
"Send your turtle back to its starting-point (useful if it has disappeared "
"off-screen)::"
msgstr ""

#: ../../library/turtle.rst:113
msgid ""
"The home position is at the center of the turtle's screen. If you ever need "
"to know them, get the turtle's x-y co-ordinates with::"
msgstr ""

#: ../../library/turtle.rst:118
msgid "Home is at ``(0, 0)``."
msgstr ""

#: ../../library/turtle.rst:120
msgid ""
"And after a while, it will probably help to clear the window so we can start "
"anew::"
msgstr ""

#: ../../library/turtle.rst:127
msgid "Making algorithmic patterns"
msgstr ""

#: ../../library/turtle.rst:129
msgid "Using loops, it's possible to build up geometric patterns::"
msgstr ""

#: ../../library/turtle.rst:138
msgid "\\ - which of course, are limited only by the imagination!"
msgstr ""

#: ../../library/turtle.rst:140
msgid ""
"Let's draw the star shape at the top of this page. We want red lines, filled "
"in with yellow::"
msgstr ""

#: ../../library/turtle.rst:146
msgid ""
"Just as ``up()`` and ``down()`` determine whether lines will be drawn, "
"filling can be turned on and off::"
msgstr ""

#: ../../library/turtle.rst:151
msgid "Next we'll create a loop::"
msgstr ""

#: ../../library/turtle.rst:159
msgid ""
"``abs(pos()) < 1`` is a good way to know when the turtle is back at its home "
"position."
msgstr ""

#: ../../library/turtle.rst:162
msgid "Finally, complete the filling::"
msgstr ""

#: ../../library/turtle.rst:166
msgid ""
"(Note that filling only actually takes place when you give the "
"``end_fill()`` command.)"
msgstr ""

#: ../../library/turtle.rst:173
msgid "How to..."
msgstr ""

#: ../../library/turtle.rst:175
msgid "This section covers some typical turtle use-cases and approaches."
msgstr ""

#: ../../library/turtle.rst:179
msgid "Get started as quickly as possible"
msgstr ""

#: ../../library/turtle.rst:181
msgid ""
"One of the joys of turtle graphics is the immediate, visual feedback that's "
"available from simple commands - it's an excellent way to introduce children "
"to programming ideas, with a minimum of overhead (not just children, of "
"course)."
msgstr ""

#: ../../library/turtle.rst:186
msgid ""
"The turtle module makes this possible by exposing all its basic "
"functionality as functions, available with ``from turtle import *``. The :"
"ref:`turtle graphics tutorial <turtle-tutorial>` covers this approach."
msgstr ""

#: ../../library/turtle.rst:190
msgid ""
"It's worth noting that many of the turtle commands also have even more terse "
"equivalents, such as ``fd()`` for :func:`forward`. These are especially "
"useful when working with learners for whom typing is not a skill."
msgstr ""

#: ../../library/turtle.rst:196
msgid ""
"You'll need to have the :mod:`Tk interface package <tkinter>` installed on "
"your system for turtle graphics to work. Be warned that this is not always "
"straightforward, so check this in advance if you're planning to use turtle "
"graphics with a learner."
msgstr ""

#: ../../library/turtle.rst:203
msgid "Use the ``turtle`` module namespace"
msgstr ""

#: ../../library/turtle.rst:205
msgid ""
"Using ``from turtle import *`` is convenient - but be warned that it imports "
"a rather large collection of objects, and if you're doing anything but "
"turtle graphics you run the risk of a name conflict (this becomes even more "
"an issue if you're using turtle graphics in a script where other modules "
"might be imported)."
msgstr ""

#: ../../library/turtle.rst:211
msgid ""
"The solution is to use ``import turtle`` - ``fd()`` becomes ``turtle.fd()``, "
"``width()`` becomes ``turtle.width()`` and so on. (If typing \"turtle\" over "
"and over again becomes tedious, use for example ``import turtle as t`` "
"instead.)"
msgstr ""

#: ../../library/turtle.rst:218
msgid "Use turtle graphics in a script"
msgstr ""

#: ../../library/turtle.rst:220
msgid ""
"It's recommended to use the ``turtle`` module namespace as described "
"immediately above, for example::"
msgstr ""

#: ../../library/turtle.rst:232
msgid ""
"Another step is also required though - as soon as the script ends, Python "
"will also close the turtle's window. Add::"
msgstr ""

#: ../../library/turtle.rst:237
msgid ""
"to the end of the script. The script will now wait to be dismissed and will "
"not exit until it is terminated, for example by closing the turtle graphics "
"window."
msgstr ""

#: ../../library/turtle.rst:243
msgid "Use object-oriented turtle graphics"
msgstr ""

#: ../../library/turtle.rst:245
msgid ""
":ref:`Explanation of the object-oriented interface <turtle-explanation>`"
msgstr ""

#: ../../library/turtle.rst:247
msgid ""
"Other than for very basic introductory purposes, or for trying things out as "
"quickly as possible, it's more usual and much more powerful to use the "
"object-oriented approach to turtle graphics. For example, this allows "
"multiple turtles on screen at once."
msgstr ""

#: ../../library/turtle.rst:252
msgid ""
"In this approach, the various turtle commands are methods of objects (mostly "
"of ``Turtle`` objects). You *can* use the object-oriented approach in the "
"shell, but it would be more typical in a Python script."
msgstr ""

#: ../../library/turtle.rst:256
msgid "The example above then becomes::"
msgstr ""

#: ../../library/turtle.rst:270
msgid ""
"Note the last line. ``t.screen`` is an instance of the :class:`Screen` that "
"a Turtle instance exists on; it's created automatically along with the "
"turtle."
msgstr ""

#: ../../library/turtle.rst:274
msgid "The turtle's screen can be customised, for example::"
msgstr ""

#: ../../library/turtle.rst:281
msgid "Turtle graphics reference"
msgstr ""

#: ../../library/turtle.rst:285
msgid ""
"In the following documentation the argument list for functions is given. "
"Methods, of course, have the additional first argument *self* which is "
"omitted here."
msgstr ""
"Na documentação a seguir, a lista de argumentos para funções é fornecida. Os "
"métodos, é claro, têm o primeiro argumento adicional *self* que é omitido "
"aqui."

#: ../../library/turtle.rst:291
msgid "Turtle methods"
msgstr "Métodos de Turtle"

#: ../../library/turtle.rst:323 ../../library/turtle.rst:433
msgid "Turtle motion"
msgstr "Movimentos de Turtle"

#: ../../library/turtle.rst:311
msgid "Move and draw"
msgstr "Movimento e desenho"

#: ../../library/turtle.rst:0
msgid ":func:`forward` | :func:`fd`"
msgstr ":func:`forward` | :func:`fd`"

#: ../../library/turtle.rst:0
msgid ":func:`backward` | :func:`bk` | :func:`back`"
msgstr ":func:`backward` | :func:`bk` | :func:`back`"

#: ../../library/turtle.rst:0
msgid ":func:`right` | :func:`rt`"
msgstr ":func:`right` | :func:`rt`"

#: ../../library/turtle.rst:0
msgid ":func:`left` | :func:`lt`"
msgstr ":func:`left` | :func:`lt`"

#: ../../library/turtle.rst:0
msgid ":func:`goto` | :func:`setpos` | :func:`setposition`"
msgstr ":func:`goto` | :func:`setpos` | :func:`setposition`"

#: ../../library/turtle.rst:0
msgid ":func:`teleport`"
msgstr ""

#: ../../library/turtle.rst:0
msgid ":func:`setx`"
msgstr ":func:`setx`"

#: ../../library/turtle.rst:0
msgid ":func:`sety`"
msgstr ":func:`sety`"

#: ../../library/turtle.rst:0
msgid ":func:`setheading` | :func:`seth`"
msgstr ":func:`setheading` | :func:`seth`"

#: ../../library/turtle.rst:0
msgid ":func:`home`"
msgstr ":func:`home`"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2723
msgid ":func:`circle`"
msgstr ":func:`circle`"

#: ../../library/turtle.rst:0
msgid ":func:`dot`"
msgstr ":func:`dot`"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2701
msgid ":func:`stamp`"
msgstr ":func:`stamp`"

#: ../../library/turtle.rst:0
msgid ":func:`clearstamp`"
msgstr ":func:`clearstamp`"

#: ../../library/turtle.rst:0
msgid ":func:`clearstamps`"
msgstr ":func:`clearstamps`"

#: ../../library/turtle.rst:0
msgid ":func:`undo`"
msgstr ":func:`undo`"

#: ../../library/turtle.rst:0
msgid ":func:`speed`"
msgstr ":func:`speed`"

#: ../../library/turtle.rst:319 ../../library/turtle.rst:865
msgid "Tell Turtle's state"
msgstr "Fala o estado de Turtle"

#: ../../library/turtle.rst:0
msgid ":func:`position` | :func:`pos`"
msgstr ":func:`position` | :func:`pos`"

#: ../../library/turtle.rst:0
msgid ":func:`towards`"
msgstr ":func:`towards`"

#: ../../library/turtle.rst:0
msgid ":func:`xcor`"
msgstr ":func:`xcor`"

#: ../../library/turtle.rst:0
msgid ":func:`ycor`"
msgstr ":func:`ycor`"

#: ../../library/turtle.rst:0
msgid ":func:`heading`"
msgstr ":func:`heading`"

#: ../../library/turtle.rst:0
msgid ":func:`distance`"
msgstr ":func:`distance`"

#: ../../library/turtle.rst:323
msgid "Setting and measurement"
msgstr "Configuração e Medidas"

#: ../../library/turtle.rst:0
msgid ":func:`degrees`"
msgstr ":func:`degrees`"

#: ../../library/turtle.rst:0
msgid ":func:`radians`"
msgstr ":func:`radians`"

#: ../../library/turtle.rst:331 ../../library/turtle.rst:1019
msgid "Drawing state"
msgstr "Estado do Desenho"

#: ../../library/turtle.rst:0
msgid ":func:`pendown` | :func:`pd` | :func:`down`"
msgstr ":func:`pendown` | :func:`pd` | :func:`down`"

#: ../../library/turtle.rst:0
msgid ":func:`penup` | :func:`pu` | :func:`up`"
msgstr ":func:`penup` | :func:`pu` | :func:`up`"

#: ../../library/turtle.rst:0
msgid ":func:`pensize` | :func:`width`"
msgstr ":func:`pensize` | :func:`width`"

#: ../../library/turtle.rst:0
msgid ":func:`pen`"
msgstr ":func:`pen`"

#: ../../library/turtle.rst:0
msgid ":func:`isdown`"
msgstr ":func:`isdown`"

#: ../../library/turtle.rst:336 ../../library/turtle.rst:1111
msgid "Color control"
msgstr "Controle da Cor"

#: ../../library/turtle.rst:0
msgid ":func:`color`"
msgstr ":func:`color`"

#: ../../library/turtle.rst:0
msgid ":func:`pencolor`"
msgstr ":func:`pencolor`"

#: ../../library/turtle.rst:0
msgid ":func:`fillcolor`"
msgstr ":func:`fillcolor`"

#: ../../library/turtle.rst:341 ../../library/turtle.rst:1243
msgid "Filling"
msgstr "Preenchimento"

#: ../../library/turtle.rst:0
msgid ":func:`filling`"
msgstr ":func:`filling`"

#: ../../library/turtle.rst:0
msgid ":func:`begin_fill`"
msgstr ":func:`begin_fill`"

#: ../../library/turtle.rst:0
msgid ":func:`end_fill`"
msgstr ":func:`end_fill`"

#: ../../library/turtle.rst:346 ../../library/turtle.rst:1290
msgid "More drawing control"
msgstr "Mais sobre o Controle do Desenho"

#: ../../library/turtle.rst:0
msgid ":func:`reset`"
msgstr ":func:`reset`"

#: ../../library/turtle.rst:0
msgid ":func:`clear`"
msgstr ":func:`clear`"

#: ../../library/turtle.rst:0
msgid ":func:`write`"
msgstr ":func:`write`"

#: ../../library/turtle.rst:363 ../../library/turtle.rst:1336
msgid "Turtle state"
msgstr "Estado da tartaruga"

#: ../../library/turtle.rst:352 ../../library/turtle.rst:1339
msgid "Visibility"
msgstr "Visibilidade"

#: ../../library/turtle.rst:0
msgid ":func:`showturtle` | :func:`st`"
msgstr ":func:`showturtle` | :func:`st`"

#: ../../library/turtle.rst:0
msgid ":func:`hideturtle` | :func:`ht`"
msgstr ":func:`hideturtle` | :func:`ht`"

#: ../../library/turtle.rst:0
msgid ":func:`isvisible`"
msgstr ":func:`isvisible`"

#: ../../library/turtle.rst:363 ../../library/turtle.rst:1378
msgid "Appearance"
msgstr "Aparência"

#: ../../library/turtle.rst:0
msgid ":func:`shape`"
msgstr ":func:`shape`"

#: ../../library/turtle.rst:0
msgid ":func:`resizemode`"
msgstr ":func:`resizemode`"

#: ../../library/turtle.rst:0
msgid ":func:`shapesize` | :func:`turtlesize`"
msgstr ":func:`shapesize` | :func:`turtlesize`"

#: ../../library/turtle.rst:0
msgid ":func:`shearfactor`"
msgstr ":func:`shearfactor`"

#: ../../library/turtle.rst:0
msgid ":func:`settiltangle`"
msgstr ":func:`settiltangle`"

#: ../../library/turtle.rst:0
msgid ":func:`tiltangle`"
msgstr ":func:`tiltangle`"

#: ../../library/turtle.rst:0
msgid ":func:`tilt`"
msgstr ":func:`tilt`"

#: ../../library/turtle.rst:0
msgid ":func:`shapetransform`"
msgstr ":func:`shapetransform`"

#: ../../library/turtle.rst:0
msgid ":func:`get_shapepoly`"
msgstr ":func:`get_shapepoly`"

#: ../../library/turtle.rst:368 ../../library/turtle.rst:1583
msgid "Using events"
msgstr "Eventos Utilizados"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2695
msgid ":func:`onclick`"
msgstr ":func:`onclick`"

#: ../../library/turtle.rst:0
msgid ":func:`onrelease`"
msgstr ":func:`onrelease`"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2678
msgid ":func:`ondrag`"
msgstr ":func:`ondrag`"

#: ../../library/turtle.rst:379 ../../library/turtle.rst:1657
msgid "Special Turtle methods"
msgstr "Métodos Especiais da Tartaruga"

#: ../../library/turtle.rst:0
msgid ":func:`begin_poly`"
msgstr ":func:`begin_poly`"

#: ../../library/turtle.rst:0
msgid ":func:`end_poly`"
msgstr ":func:`end_poly`"

#: ../../library/turtle.rst:0
msgid ":func:`get_poly`"
msgstr ":func:`get_poly`"

#: ../../library/turtle.rst:0 ../../library/turtle.rst:2717
msgid ":func:`clone`"
msgstr ":func:`clone`"

#: ../../library/turtle.rst:0
msgid ":func:`getturtle` | :func:`getpen`"
msgstr ":func:`getturtle` | :func:`getpen`"

#: ../../library/turtle.rst:0
msgid ":func:`getscreen`"
msgstr ":func:`getscreen`"

#: ../../library/turtle.rst:0
msgid ":func:`setundobuffer`"
msgstr ":func:`setundobuffer`"

#: ../../library/turtle.rst:0
msgid ":func:`undobufferentries`"
msgstr ":func:`undobufferentries`"

#: ../../library/turtle.rst:382
msgid "Methods of TurtleScreen/Screen"
msgstr "Métodos de TurtleScreen/Screen"

#: ../../library/turtle.rst:390 ../../library/turtle.rst:1811
msgid "Window control"
msgstr "Controle da Janela"

#: ../../library/turtle.rst:0
msgid ":func:`bgcolor`"
msgstr ":func:`bgcolor`"

#: ../../library/turtle.rst:0
msgid ":func:`bgpic`"
msgstr ":func:`bgpic`"

#: ../../library/turtle.rst:0
msgid ":func:`clearscreen`"
msgstr ":func:`clearscreen`"

#: ../../library/turtle.rst:0
msgid ":func:`resetscreen`"
msgstr ":func:`resetscreen`"

#: ../../library/turtle.rst:0
msgid ":func:`screensize`"
msgstr ":func:`screensize`"

#: ../../library/turtle.rst:0
msgid ":func:`setworldcoordinates`"
msgstr ":func:`setworldcoordinates`"

#: ../../library/turtle.rst:395 ../../library/turtle.rst:1934
msgid "Animation control"
msgstr "Controle da animação"

#: ../../library/turtle.rst:0
msgid ":func:`delay`"
msgstr ":func:`delay`"

#: ../../library/turtle.rst:0
msgid ":func:`tracer`"
msgstr ":func:`tracer`"

#: ../../library/turtle.rst:0
msgid ":func:`update`"
msgstr ":func:`update`"

#: ../../library/turtle.rst:403 ../../library/turtle.rst:1987
msgid "Using screen events"
msgstr "Usando os eventos de tela"

#: ../../library/turtle.rst:0
msgid ":func:`listen`"
msgstr ":func:`listen`"

#: ../../library/turtle.rst:0
msgid ":func:`onkey` | :func:`onkeyrelease`"
msgstr ":func:`onkey` | :func:`onkeyrelease`"

#: ../../library/turtle.rst:0
msgid ":func:`onkeypress`"
msgstr ":func:`onkeypress`"

#: ../../library/turtle.rst:0
msgid ":func:`onclick` | :func:`onscreenclick`"
msgstr ":func:`onclick` | :func:`onscreenclick`"

#: ../../library/turtle.rst:0
msgid ":func:`ontimer`"
msgstr ":func:`ontimer`"

#: ../../library/turtle.rst:0
msgid ":func:`mainloop` | :func:`done`"
msgstr ":func:`mainloop` | :func:`done`"

#: ../../library/turtle.rst:413 ../../library/turtle.rst:2132
msgid "Settings and special methods"
msgstr "Configurações e métodos especiais"

#: ../../library/turtle.rst:0
msgid ":func:`mode`"
msgstr ":func:`mode`"

#: ../../library/turtle.rst:0
msgid ":func:`colormode`"
msgstr ":func:`colormode`"

#: ../../library/turtle.rst:0
msgid ":func:`getcanvas`"
msgstr ":func:`getcanvas`"

#: ../../library/turtle.rst:0
msgid ":func:`getshapes`"
msgstr ":func:`getshapes`"

#: ../../library/turtle.rst:0
msgid ":func:`register_shape` | :func:`addshape`"
msgstr ":func:`register_shape` | :func:`addshape`"

#: ../../library/turtle.rst:0
msgid ":func:`turtles`"
msgstr ":func:`turtles`"

#: ../../library/turtle.rst:0
msgid ":func:`window_height`"
msgstr ":func:`window_height`"

#: ../../library/turtle.rst:0
msgid ":func:`window_width`"
msgstr ":func:`window_width`"

#: ../../library/turtle.rst:417 ../../library/turtle.rst:2096
msgid "Input methods"
msgstr "Métodos de entrada"

#: ../../library/turtle.rst:0
msgid ":func:`textinput`"
msgstr ":func:`textinput`"

#: ../../library/turtle.rst:0
msgid ":func:`numinput`"
msgstr ":func:`numinput`"

#: ../../library/turtle.rst:424
msgid "Methods specific to Screen"
msgstr "Métodos específicos para Screen"

#: ../../library/turtle.rst:0
msgid ":func:`bye`"
msgstr ":func:`bye`"

#: ../../library/turtle.rst:0
msgid ":func:`exitonclick`"
msgstr ":func:`exitonclick`"

#: ../../library/turtle.rst:0
msgid ":func:`setup`"
msgstr ":func:`setup`"

#: ../../library/turtle.rst:0
msgid ":func:`title`"
msgstr ":func:`title`"

#: ../../library/turtle.rst:427
msgid "Methods of RawTurtle/Turtle and corresponding functions"
msgstr "Métodos de RawTurtle/Turtle e funções correspondentes"

#: ../../library/turtle.rst:429
msgid ""
"Most of the examples in this section refer to a Turtle instance called "
"``turtle``."
msgstr ""
"A maioria dos exemplos desta seção referem-se a uma instância Turtle chamada "
"``turtle``."

#: ../../library/turtle.rst:0
msgid "Parameters"
msgstr "Parâmetros"

#: ../../library/turtle.rst:438 ../../library/turtle.rst:483
#: ../../library/turtle.rst:508 ../../library/turtle.rst:606
#: ../../library/turtle.rst:629 ../../library/turtle.rst:652
msgid "a number (integer or float)"
msgstr "um número (inteiro ou ponto flutuante)"

#: ../../library/turtle.rst:440
msgid ""
"Move the turtle forward by the specified *distance*, in the direction the "
"turtle is headed."
msgstr ""
"Move a tartaruga para frente pela *distance* especificada, na direção em que "
"a tartaruga está indo."

#: ../../library/turtle.rst:460 ../../library/turtle.rst:702
#: ../../library/turtle.rst:969 ../../library/turtle.rst:1477
#: ../../library/turtle.rst:1496
msgid "a number"
msgstr "um número"

#: ../../library/turtle.rst:462
msgid ""
"Move the turtle backward by *distance*, opposite to the direction the turtle "
"is headed.  Do not change the turtle's heading."
msgstr ""
"Move a tartaruga para trás por *distance*, na direção oposta à direção em "
"que a tartaruga está indo. Não muda o rumo da tartaruga."

#: ../../library/turtle.rst:485
msgid ""
"Turn turtle right by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""
"Vira a tartaruga à direita por unidades de *angle*. (As unidades são por "
"padrão graus, mas podem ser definidas através das funções :func:`degrees` e :"
"func:`radians`.) A orientação do ângulo depende do modo tartaruga, veja :"
"func:`mode`."

#: ../../library/turtle.rst:510
msgid ""
"Turn turtle left by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""
"Vira a tartaruga à esquerda por unidades de *angle*. (As unidades são por "
"padrão graus, mas podem ser definidas através das funções :func:`degrees` e :"
"func:`radians`.) A orientação do ângulo depende do modo tartaruga, veja :"
"func:`mode`."

#: ../../library/turtle.rst:534
msgid "a number or a pair/vector of numbers"
msgstr "um número ou um par/vetor de números"

#: ../../library/turtle.rst:535 ../../library/turtle.rst:568
#: ../../library/turtle.rst:569
msgid "a number or ``None``"
msgstr "um número ou ``None``"

#: ../../library/turtle.rst:537
msgid ""
"If *y* is ``None``, *x* must be a pair of coordinates or a :class:`Vec2D` (e."
"g. as returned by :func:`pos`)."
msgstr ""
"Se *y* for ``None``, *x* deve ser um par de coordenadas ou uma classe :class:"
"`Vec2D` (por exemplo, como retornado pela função :func:`pos`)."

#: ../../library/turtle.rst:540
msgid ""
"Move turtle to an absolute position.  If the pen is down, draw line.  Do not "
"change the turtle's orientation."
msgstr ""
"Move a tartaruga para uma posição absoluta. Caso a caneta esteja virada para "
"baixo, traça a linha. Não altera a orientação da tartaruga."

#: ../../library/turtle.rst:570
msgid "a boolean"
msgstr ""

#: ../../library/turtle.rst:572
msgid ""
"Move turtle to an absolute position. Unlike goto(x, y), a line will not be "
"drawn. The turtle's orientation does not change. If currently filling, the "
"polygon(s) teleported from will be filled after leaving, and filling will "
"begin again after teleporting. This can be disabled with fill_gap=True, "
"which makes the imaginary line traveled during teleporting act as a fill "
"barrier like in goto(x, y)."
msgstr ""

#: ../../library/turtle.rst:608
msgid ""
"Set the turtle's first coordinate to *x*, leave second coordinate unchanged."
msgstr ""
"Define a primeira coordenada da tartaruga para *x*, deixa a segunda "
"coordenada inalterada."

#: ../../library/turtle.rst:631
msgid ""
"Set the turtle's second coordinate to *y*, leave first coordinate unchanged."
msgstr ""
"Defina a segunda coordenada da tartaruga para *y*, deixa a primeira "
"coordenada inalterada."

#: ../../library/turtle.rst:654
msgid ""
"Set the orientation of the turtle to *to_angle*.  Here are some common "
"directions in degrees:"
msgstr ""
"Define a orientação da tartaruga para  *to_angle*. Aqui estão algumas "
"direções mais comuns em graus:"

#: ../../library/turtle.rst:658
msgid "standard mode"
msgstr "modo padrão"

#: ../../library/turtle.rst:658
msgid "logo mode"
msgstr "modo logo"

#: ../../library/turtle.rst:660
msgid "0 - east"
msgstr "0 - leste"

#: ../../library/turtle.rst:660
msgid "0 - north"
msgstr "0 - norte"

#: ../../library/turtle.rst:661
msgid "90 - north"
msgstr "90 - norte"

#: ../../library/turtle.rst:661
msgid "90 - east"
msgstr "90 - leste"

#: ../../library/turtle.rst:662
msgid "180 - west"
msgstr "180 - oeste"

#: ../../library/turtle.rst:662
msgid "180 - south"
msgstr "180 - sul"

#: ../../library/turtle.rst:663
msgid "270 - south"
msgstr "270 - sul"

#: ../../library/turtle.rst:663
msgid "270 - west"
msgstr "270 - oeste"

#: ../../library/turtle.rst:676
msgid ""
"Move turtle to the origin -- coordinates (0,0) -- and set its heading to its "
"start-orientation (which depends on the mode, see :func:`mode`)."
msgstr ""
"Move a tartaruga para a origem -- coordenadas (0,0) -- e define seu rumo "
"para sua orientação inicial (que depende do modo, veja :func:`mode`)."

#: ../../library/turtle.rst:703
msgid "a number (or ``None``)"
msgstr "um número (ou ``None``)"

#: ../../library/turtle.rst:704 ../../library/turtle.rst:797
msgid "an integer (or ``None``)"
msgstr "um inteiro  (ou ``None``)"

#: ../../library/turtle.rst:706
msgid ""
"Draw a circle with given *radius*.  The center is *radius* units left of the "
"turtle; *extent* -- an angle -- determines which part of the circle is "
"drawn.  If *extent* is not given, draw the entire circle.  If *extent* is "
"not a full circle, one endpoint of the arc is the current pen position.  "
"Draw the arc in counterclockwise direction if *radius* is positive, "
"otherwise in clockwise direction.  Finally the direction of the turtle is "
"changed by the amount of *extent*."
msgstr ""
"Desenha um círculo com dado *radius*. O centro são as unidades de *radius* à "
"esquerda da tartaruga; *extent* -- um ângulo -- determina qual parte do "
"círculo é desenhada. Se *extent* não for fornecida, desenha o círculo "
"inteiro. Se *extent* não for um círculo completo, uma extremidade do arco "
"será a posição atual da caneta. Desenha o arco no sentido anti-horário se "
"*radius* for positivo, caso contrário, no sentido horário. Finalmente, a "
"direção da tartaruga é alterada pela quantidade de *extent*."

#: ../../library/turtle.rst:714
msgid ""
"As the circle is approximated by an inscribed regular polygon, *steps* "
"determines the number of steps to use.  If not given, it will be calculated "
"automatically.  May be used to draw regular polygons."
msgstr ""
"Como o círculo é aproximado por um polígono regular inscrito, *steps* "
"determina o número de passos a serem usados. Caso não seja informado, será "
"calculado automaticamente. Pode ser usado para desenhar polígonos regulares."

#: ../../library/turtle.rst:740
msgid "an integer >= 1 (if given)"
msgstr "um inteiro >= 1  (caso seja fornecido)"

#: ../../library/turtle.rst:741
msgid "a colorstring or a numeric color tuple"
msgstr "uma string de cores ou uma tupla de cores numéricas"

#: ../../library/turtle.rst:743
msgid ""
"Draw a circular dot with diameter *size*, using *color*.  If *size* is not "
"given, the maximum of pensize+4 and 2*pensize is used."
msgstr ""
"Desenha um ponto circular com diâmetro *size*, usando *color*. Se *size* não "
"for fornecido, o máximo de pensize+4 e 2*pensize será usado."

#: ../../library/turtle.rst:761
msgid ""
"Stamp a copy of the turtle shape onto the canvas at the current turtle "
"position.  Return a stamp_id for that stamp, which can be used to delete it "
"by calling ``clearstamp(stamp_id)``."
msgstr ""
"Carimba uma cópia da forma da tartaruga na tela na posição atual da "
"tartaruga. Retorna um stamp_id para esse carimbo, que pode ser usado para "
"excluí-lo chamando ``clearstamp(stamp_id)``."

#: ../../library/turtle.rst:775
msgid "an integer, must be return value of previous :func:`stamp` call"
msgstr ""
"um inteiro, deve ser o valor de retorno da chamada de :func:`stamp` anterior"

#: ../../library/turtle.rst:778
msgid "Delete stamp with given *stampid*."
msgstr "Exclui o carimbo com o *stamp* fornecido."

#: ../../library/turtle.rst:799
msgid ""
"Delete all or first/last *n* of turtle's stamps.  If *n* is ``None``, delete "
"all stamps, if *n* > 0 delete first *n* stamps, else if *n* < 0 delete last "
"*n* stamps."
msgstr ""
"Exclui todos ou o primeiro/último *n* dos selos da tartaruga. Se *n* for "
"``None``, exclui todos os carimbos, se *n* > 0 exclui os primeiros *n* "
"carimbos, senão se *n* < 0 exclui os últimos *n* carimbos."

#: ../../library/turtle.rst:815
msgid ""
"Undo (repeatedly) the last turtle action(s).  Number of available undo "
"actions is determined by the size of the undobuffer."
msgstr ""
"Desfaz (repetidamente) a(s) última(s) ação(ões) da tartaruga. O número de "
"ações de desfazer disponíveis é determinado pelo tamanho do buffer de "
"desfazer."

#: ../../library/turtle.rst:830
msgid "an integer in the range 0..10 or a speedstring (see below)"
msgstr ""
"um inteiro no intervalo 0..10 ou uma string de velocidade (veja abaixo)"

#: ../../library/turtle.rst:832
msgid ""
"Set the turtle's speed to an integer value in the range 0..10.  If no "
"argument is given, return current speed."
msgstr ""
"Define a velocidade da tartaruga para um valor inteiro no intervalo 0..10. "
"Se nenhum argumento for fornecido, retorna a velocidade atual."

#: ../../library/turtle.rst:835
msgid ""
"If input is a number greater than 10 or smaller than 0.5, speed is set to "
"0.  Speedstrings are mapped to speedvalues as follows:"
msgstr ""
"Se a entrada for um número maior que 10 ou menor que 0,5, a velocidade é "
"definida como 0. As strings de velocidade são mapeadas para valores de "
"velocidade da seguinte forma:"

#: ../../library/turtle.rst:838
msgid "\"fastest\":  0"
msgstr "\"fastest\": 0"

#: ../../library/turtle.rst:839
msgid "\"fast\":  10"
msgstr "\"fast\": 10"

#: ../../library/turtle.rst:840
msgid "\"normal\":  6"
msgstr "\"normal\": 6"

#: ../../library/turtle.rst:841
msgid "\"slow\":  3"
msgstr "\"slow\": 3"

#: ../../library/turtle.rst:842
msgid "\"slowest\":  1"
msgstr "\"slowest\": 1"

#: ../../library/turtle.rst:844
msgid ""
"Speeds from 1 to 10 enforce increasingly faster animation of line drawing "
"and turtle turning."
msgstr ""
"Velocidades de 1 a 10  tornam a animação cada vez mais rápida, tanto para o "
"desenho da linha  como para a rotação da tartaruga."

#: ../../library/turtle.rst:847
msgid ""
"Attention: *speed* = 0 means that *no* animation takes place. forward/back "
"makes turtle jump and likewise left/right make the turtle turn instantly."
msgstr ""
"Atenção: *speed* = 0 significa que *nenhuma* animação ocorre. Para frente/"
"trás faz a tartaruga pular e da mesma forma para esquerda/direita faz a "
"tartaruga girar instantaneamente."

#: ../../library/turtle.rst:870
msgid ""
"Return the turtle's current location (x,y) (as a :class:`Vec2D` vector)."
msgstr ""
"Retorna a localização atual da tartaruga (x,y) (como um vetor :class:"
"`Vec2D`)."

#: ../../library/turtle.rst:881 ../../library/turtle.rst:944
msgid "a number or a pair/vector of numbers or a turtle instance"
msgstr "um número ou um par/vetor de números ou uma instância de tartaruga"

#: ../../library/turtle.rst:882 ../../library/turtle.rst:945
msgid "a number if *x* is a number, else ``None``"
msgstr "um número caso *x* seja um número, senão ``None``"

#: ../../library/turtle.rst:884
msgid ""
"Return the angle between the line from turtle position to position specified "
"by (x,y), the vector or the other turtle.  This depends on the turtle's "
"start orientation which depends on the mode - \"standard\"/\"world\" or "
"\"logo\"."
msgstr ""
"Retorna o ângulo entre a linha da posição da tartaruga para a posição "
"especificada por (x,y), o vetor ou a outra tartaruga. Isso depende da "
"orientação inicial da tartaruga, que depende do modo - \"standard\"/"
"\"world\" ou \"logo\"."

#: ../../library/turtle.rst:898
msgid "Return the turtle's x coordinate."
msgstr "Retorna a coordenada X da tartaruga."

#: ../../library/turtle.rst:914
msgid "Return the turtle's y coordinate."
msgstr "Retorna a coordenada Y da tartaruga."

#: ../../library/turtle.rst:930
msgid ""
"Return the turtle's current heading (value depends on the turtle mode, see :"
"func:`mode`)."
msgstr ""
"Retorna o título atual da tartaruga (o valor depende do modo da tartaruga, "
"veja :func:`mode`)."

#: ../../library/turtle.rst:947
msgid ""
"Return the distance from the turtle to (x,y), the given vector, or the given "
"other turtle, in turtle step units."
msgstr ""
"Retorna a distância da tartaruga para (x,y), o vetor dado, ou a outra "
"tartaruga dada, em unidades de passo de tartaruga."

#: ../../library/turtle.rst:965
msgid "Settings for measurement"
msgstr "Configurações de medida"

#: ../../library/turtle.rst:971
msgid ""
"Set angle measurement units, i.e. set number of \"degrees\" for a full "
"circle. Default value is 360 degrees."
msgstr ""
"Define as unidades de medição do ângulo, ou seja, defina o número de "
"\"graus\" para um círculo completo. O valor padrão é 360 graus."

#: ../../library/turtle.rst:994
msgid ""
"Set the angle measurement units to radians.  Equivalent to ``degrees(2*math."
"pi)``."
msgstr ""
"Define as unidades de medida de ângulo para radianos. Equivalente a "
"``degrees(2*math.pi)``."

#: ../../library/turtle.rst:1025
msgid "Pull the pen down -- drawing when moving."
msgstr "Desce a caneta - desenha ao se mover."

#: ../../library/turtle.rst:1032
msgid "Pull the pen up -- no drawing when moving."
msgstr "Levanta a caneta -- sem qualquer desenho ao se mover."

#: ../../library/turtle.rst:1038
msgid "a positive number"
msgstr "um número positivo"

#: ../../library/turtle.rst:1040
msgid ""
"Set the line thickness to *width* or return it.  If resizemode is set to "
"\"auto\" and turtleshape is a polygon, that polygon is drawn with the same "
"line thickness.  If no argument is given, the current pensize is returned."
msgstr ""
"Define a espessura da linha para *width* ou retorne-a. Se resizemode estiver "
"definido como \"auto\" e a forma de tartaruga for um polígono, esse polígono "
"será desenhado com a mesma espessura de linha. Se nenhum argumento for "
"fornecido, o tamanho da pena atual será retornado."

#: ../../library/turtle.rst:1054
msgid "a dictionary with some or all of the below listed keys"
msgstr "um dicionário com algumas ou todas as chaves listadas abaixo"

#: ../../library/turtle.rst:1055
msgid "one or more keyword-arguments with the below listed keys as keywords"
msgstr ""
"um ou mais argumentos nomeados com as chaves listadas abaixo como palavras-"
"chave"

#: ../../library/turtle.rst:1057
msgid ""
"Return or set the pen's attributes in a \"pen-dictionary\" with the "
"following key/value pairs:"
msgstr ""
"Retorna ou define os atributos da caneta em um \"dicionário da caneta\" com "
"os seguintes pares de chave/valor:"

#: ../../library/turtle.rst:1060
msgid "\"shown\": True/False"
msgstr "\"shown\": True/False"

#: ../../library/turtle.rst:1061
msgid "\"pendown\": True/False"
msgstr "\"pendown\": True/False"

#: ../../library/turtle.rst:1062
msgid "\"pencolor\": color-string or color-tuple"
msgstr "\"pencolor\": string de cores ou tupla de cores"

#: ../../library/turtle.rst:1063
msgid "\"fillcolor\": color-string or color-tuple"
msgstr "\"fillcolor\": string de cores ou tupla de cores"

#: ../../library/turtle.rst:1064
msgid "\"pensize\": positive number"
msgstr "\"pensize\": número positivo"

#: ../../library/turtle.rst:1065
msgid "\"speed\": number in range 0..10"
msgstr "\"speed\": número na faixa de 0..10"

#: ../../library/turtle.rst:1066
msgid "\"resizemode\": \"auto\" or \"user\" or \"noresize\""
msgstr "\"resizemode\": \"auto\", \"user\" ou \"noresize\""

#: ../../library/turtle.rst:1067
msgid "\"stretchfactor\": (positive number, positive number)"
msgstr "\"stretchfactor\": (número positivo, número positivo)"

#: ../../library/turtle.rst:1068
msgid "\"outline\": positive number"
msgstr "\"outline\": número positivo"

#: ../../library/turtle.rst:1069
msgid "\"tilt\": number"
msgstr "\"tilt\": número"

#: ../../library/turtle.rst:1071
msgid ""
"This dictionary can be used as argument for a subsequent call to :func:`pen` "
"to restore the former pen-state.  Moreover one or more of these attributes "
"can be provided as keyword-arguments.  This can be used to set several pen "
"attributes in one statement."
msgstr ""
"Este dicionário pode ser usado como argumento para uma chamada subsequente "
"para :func:`pen` para restaurar o estado da caneta anterior. Além disso, um "
"ou mais desses atributos podem ser fornecidos como argumentos nomeados. Isso "
"pode ser usado para definir vários atributos de caneta em uma instrução."

#: ../../library/turtle.rst:1097
msgid "Return ``True`` if pen is down, ``False`` if it's up."
msgstr ""
"Retorna ``True`` se a caneta estiver abaixada, ``False`` se estiver "
"levantada."

#: ../../library/turtle.rst:1115
msgid "Return or set the pencolor."
msgstr "Retorna ou define a cor da caneta ou pencolor."

#: ../../library/turtle.rst:1117 ../../library/turtle.rst:1166
msgid "Four input formats are allowed:"
msgstr "São permitidos quatro formatos de entrada:"

#: ../../library/turtle.rst:1122
msgid "``pencolor()``"
msgstr "``pencolor()``"

#: ../../library/turtle.rst:1120
msgid ""
"Return the current pencolor as color specification string or as a tuple (see "
"example).  May be used as input to another color/pencolor/fillcolor call."
msgstr ""
"Retorna a cor da caneta atual como string de especificação de cor ou como "
"uma tupla (veja o exemplo). Pode ser usado como entrada para outra chamada "
"color/pencolor/fillcolor."

#: ../../library/turtle.rst:1126
msgid "``pencolor(colorstring)``"
msgstr "``pencolor(colorstring)``"

#: ../../library/turtle.rst:1125
msgid ""
"Set pencolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""
"Define pencolor como *colorstring*, que é uma string de especificação de cor "
"Tk, como ``\"red\"``, ``\"yellow\"`` ou ``\"#33cc8c\"``."

#: ../../library/turtle.rst:1131
msgid "``pencolor((r, g, b))``"
msgstr "``pencolor((r, g, b))``"

#: ../../library/turtle.rst:1129
msgid ""
"Set pencolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""
"Define a cor da caneta como a cor RGB representada pela tupla *r*, *g*, e "
"*b*. Os valores de *r*, *g*, and *b* precisam estar na faixa 0..colormode, "
"onde colormode é 1.0 ou 255 (ver :func:`colormode`)."

#: ../../library/turtle.rst:1135
msgid "``pencolor(r, g, b)``"
msgstr "``pencolor(r, g, b)``"

#: ../../library/turtle.rst:1134
msgid ""
"Set pencolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""
"Define a cor da caneta como a cor RGB representada por *r*, *g*, e *b*. Os "
"valores de *r*, *g*, and *b* precisam estar na faixa 0..colormode."

#: ../../library/turtle.rst:1137
msgid ""
"If turtleshape is a polygon, the outline of that polygon is drawn with the "
"newly set pencolor."
msgstr ""
"Se a forma da tartaruga for um polígono, o contorno desse polígono será "
"desenhado com a nova cor de caneta definida."

#: ../../library/turtle.rst:1164
msgid "Return or set the fillcolor."
msgstr "Retorna ou define o fillcolor."

#: ../../library/turtle.rst:1171
msgid "``fillcolor()``"
msgstr "``fillcolor()``"

#: ../../library/turtle.rst:1169
msgid ""
"Return the current fillcolor as color specification string, possibly in "
"tuple format (see example).  May be used as input to another color/pencolor/"
"fillcolor call."
msgstr ""

#: ../../library/turtle.rst:1175
msgid "``fillcolor(colorstring)``"
msgstr "``fillcolor(colorstring)``"

#: ../../library/turtle.rst:1174
msgid ""
"Set fillcolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""

#: ../../library/turtle.rst:1180
msgid "``fillcolor((r, g, b))``"
msgstr "``fillcolor((r, g, b))``"

#: ../../library/turtle.rst:1178
msgid ""
"Set fillcolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""

#: ../../library/turtle.rst:1184
msgid "``fillcolor(r, g, b)``"
msgstr "``fillcolor(r, g, b)``"

#: ../../library/turtle.rst:1183
msgid ""
"Set fillcolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""

#: ../../library/turtle.rst:1186
msgid ""
"If turtleshape is a polygon, the interior of that polygon is drawn with the "
"newly set fillcolor."
msgstr ""

#: ../../library/turtle.rst:1207
msgid "Return or set pencolor and fillcolor."
msgstr ""

#: ../../library/turtle.rst:1209
msgid ""
"Several input formats are allowed.  They use 0 to 3 arguments as follows:"
msgstr ""

#: ../../library/turtle.rst:1215
msgid "``color()``"
msgstr "``color()``"

#: ../../library/turtle.rst:1213
msgid ""
"Return the current pencolor and the current fillcolor as a pair of color "
"specification strings or tuples as returned by :func:`pencolor` and :func:"
"`fillcolor`."
msgstr ""

#: ../../library/turtle.rst:1219
msgid "``color(colorstring)``, ``color((r,g,b))``, ``color(r,g,b)``"
msgstr "``color(colorstring)``, ``color((r,g,b))``, ``color(r,g,b)``"

#: ../../library/turtle.rst:1218
msgid ""
"Inputs as in :func:`pencolor`, set both, fillcolor and pencolor, to the "
"given value."
msgstr ""

#: ../../library/turtle.rst:1223
msgid ""
"``color(colorstring1, colorstring2)``, ``color((r1,g1,b1), (r2,g2,b2))``"
msgstr ""
"``color(colorstring1, colorstring2)``, ``color((r1,g1,b1), (r2,g2,b2))``"

#: ../../library/turtle.rst:1222
msgid ""
"Equivalent to ``pencolor(colorstring1)`` and ``fillcolor(colorstring2)`` and "
"analogously if the other input format is used."
msgstr ""

#: ../../library/turtle.rst:1225
msgid ""
"If turtleshape is a polygon, outline and interior of that polygon is drawn "
"with the newly set colors."
msgstr ""

#: ../../library/turtle.rst:1239
msgid "See also: Screen method :func:`colormode`."
msgstr "Veja também: Método da tela :func:`colormode`."

#: ../../library/turtle.rst:1253
msgid "Return fillstate (``True`` if filling, ``False`` else)."
msgstr ""
"Retorna fillstate (``True`` se estiver preenchido, ``False`` caso contrário)."

#: ../../library/turtle.rst:1268
msgid "To be called just before drawing a shape to be filled."
msgstr ""

#: ../../library/turtle.rst:1273
msgid "Fill the shape drawn after the last call to :func:`begin_fill`."
msgstr ""

#: ../../library/turtle.rst:1275
msgid ""
"Whether or not overlap regions for self-intersecting polygons or multiple "
"shapes are filled depends on the operating system graphics, type of overlap, "
"and number of overlaps.  For example, the Turtle star above may be either "
"all yellow or have some white regions."
msgstr ""

#: ../../library/turtle.rst:1294
msgid ""
"Delete the turtle's drawings from the screen, re-center the turtle and set "
"variables to the default values."
msgstr ""

#: ../../library/turtle.rst:1315
msgid ""
"Delete the turtle's drawings from the screen.  Do not move turtle.  State "
"and position of the turtle as well as drawings of other turtles are not "
"affected."
msgstr ""

#: ../../library/turtle.rst:1321
msgid "object to be written to the TurtleScreen"
msgstr ""

#: ../../library/turtle.rst:1322
msgid "True/False"
msgstr "True/False"

#: ../../library/turtle.rst:1323
msgid "one of the strings \"left\", \"center\" or right\""
msgstr "uma das Strings \"left\", \"center\" ou right\""

#: ../../library/turtle.rst:1324
msgid "a triple (fontname, fontsize, fonttype)"
msgstr "a triple (fontname, fontsize, fonttype)"

#: ../../library/turtle.rst:1326
msgid ""
"Write text - the string representation of *arg* - at the current turtle "
"position according to *align* (\"left\", \"center\" or \"right\") and with "
"the given font.  If *move* is true, the pen is moved to the bottom-right "
"corner of the text.  By default, *move* is ``False``."
msgstr ""

#: ../../library/turtle.rst:1344
msgid ""
"Make the turtle invisible.  It's a good idea to do this while you're in the "
"middle of doing some complex drawing, because hiding the turtle speeds up "
"the drawing observably."
msgstr ""

#: ../../library/turtle.rst:1357
msgid "Make the turtle visible."
msgstr "Tornar a tartaruga visível."

#: ../../library/turtle.rst:1367
msgid "Return ``True`` if the Turtle is shown, ``False`` if it's hidden."
msgstr ""

#: ../../library/turtle.rst:1382
msgid "a string which is a valid shapename"
msgstr ""

#: ../../library/turtle.rst:1384
msgid ""
"Set turtle shape to shape with given *name* or, if name is not given, return "
"name of current shape.  Shape with *name* must exist in the TurtleScreen's "
"shape dictionary.  Initially there are the following polygon shapes: "
"\"arrow\", \"turtle\", \"circle\", \"square\", \"triangle\", \"classic\".  "
"To learn about how to deal with shapes see Screen method :func:"
"`register_shape`."
msgstr ""

#: ../../library/turtle.rst:1402
msgid "one of the strings \"auto\", \"user\", \"noresize\""
msgstr "uma das Strings \"auto\", \"user\", \"noresize\""

#: ../../library/turtle.rst:1404
msgid ""
"Set resizemode to one of the values: \"auto\", \"user\", \"noresize\".  If "
"*rmode* is not given, return current resizemode.  Different resizemodes have "
"the following effects:"
msgstr ""

#: ../../library/turtle.rst:1408
msgid ""
"\"auto\": adapts the appearance of the turtle corresponding to the value of "
"pensize."
msgstr ""
"\"auto\": adapta a aparência da tartaruga correspondente ao valor do pensize."

#: ../../library/turtle.rst:1409
msgid ""
"\"user\": adapts the appearance of the turtle according to the values of "
"stretchfactor and outlinewidth (outline), which are set by :func:`shapesize`."
msgstr ""

#: ../../library/turtle.rst:1412
msgid "\"noresize\": no adaption of the turtle's appearance takes place."
msgstr ""

#: ../../library/turtle.rst:1414
msgid ""
"``resizemode(\"user\")`` is called by :func:`shapesize` when used with "
"arguments."
msgstr ""

#: ../../library/turtle.rst:1429 ../../library/turtle.rst:1430
#: ../../library/turtle.rst:1431
msgid "positive number"
msgstr "número positivo"

#: ../../library/turtle.rst:1433
msgid ""
"Return or set the pen's attributes x/y-stretchfactors and/or outline.  Set "
"resizemode to \"user\".  If and only if resizemode is set to \"user\", the "
"turtle will be displayed stretched according to its stretchfactors: "
"*stretch_wid* is stretchfactor perpendicular to its orientation, "
"*stretch_len* is stretchfactor in direction of its orientation, *outline* "
"determines the width of the shape's outline."
msgstr ""

#: ../../library/turtle.rst:1456 ../../library/turtle.rst:2115
#: ../../library/turtle.rst:2116 ../../library/turtle.rst:2117
msgid "number (optional)"
msgstr "número (opcional)"

#: ../../library/turtle.rst:1458
msgid ""
"Set or return the current shearfactor. Shear the turtleshape according to "
"the given shearfactor shear, which is the tangent of the shear angle. Do "
"*not* change the turtle's heading (direction of movement). If shear is not "
"given: return the current shearfactor, i. e. the tangent of the shear angle, "
"by which lines parallel to the heading of the turtle are sheared."
msgstr ""

#: ../../library/turtle.rst:1479
msgid ""
"Rotate the turtleshape by *angle* from its current tilt-angle, but do *not* "
"change the turtle's heading (direction of movement)."
msgstr ""

#: ../../library/turtle.rst:1498
msgid ""
"Rotate the turtleshape to point in the direction specified by *angle*, "
"regardless of its current tilt-angle.  *Do not* change the turtle's heading "
"(direction of movement)."
msgstr ""

#: ../../library/turtle.rst:1518 ../../library/turtle.rst:1541
#: ../../library/turtle.rst:1542 ../../library/turtle.rst:1543
#: ../../library/turtle.rst:1544
msgid "a number (optional)"
msgstr "um número (opcional)"

#: ../../library/turtle.rst:1520
msgid ""
"Set or return the current tilt-angle. If angle is given, rotate the "
"turtleshape to point in the direction specified by angle, regardless of its "
"current tilt-angle. Do *not* change the turtle's heading (direction of "
"movement). If angle is not given: return the current tilt-angle, i. e. the "
"angle between the orientation of the turtleshape and the heading of the "
"turtle (its direction of movement)."
msgstr ""

#: ../../library/turtle.rst:1546
msgid "Set or return the current transformation matrix of the turtle shape."
msgstr ""

#: ../../library/turtle.rst:1548
msgid ""
"If none of the matrix elements are given, return the transformation matrix "
"as a tuple of 4 elements. Otherwise set the given elements and transform the "
"turtleshape according to the matrix consisting of first row t11, t12 and "
"second row t21, t22. The determinant t11 * t22 - t12 * t21 must not be zero, "
"otherwise an error is raised. Modify stretchfactor, shearfactor and "
"tiltangle according to the given matrix."
msgstr ""

#: ../../library/turtle.rst:1570
msgid ""
"Return the current shape polygon as tuple of coordinate pairs. This can be "
"used to define a new shape or components of a compound shape."
msgstr ""

#: ../../library/turtle.rst:1588 ../../library/turtle.rst:1610
#: ../../library/turtle.rst:1635 ../../library/turtle.rst:2039
msgid ""
"a function with two arguments which will be called with the coordinates of "
"the clicked point on the canvas"
msgstr ""

#: ../../library/turtle.rst:1590 ../../library/turtle.rst:1612
#: ../../library/turtle.rst:1637 ../../library/turtle.rst:2041
msgid "number of the mouse-button, defaults to 1 (left mouse button)"
msgstr ""

#: ../../library/turtle.rst:1591 ../../library/turtle.rst:1613
#: ../../library/turtle.rst:1638 ../../library/turtle.rst:2042
msgid ""
"``True`` or ``False`` -- if ``True``, a new binding will be added, otherwise "
"it will replace a former binding"
msgstr ""

#: ../../library/turtle.rst:1594
msgid ""
"Bind *fun* to mouse-click events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed.  Example for the anonymous turtle, i.e. the "
"procedural way:"
msgstr ""

#: ../../library/turtle.rst:1616
msgid ""
"Bind *fun* to mouse-button-release events on this turtle.  If *fun* is "
"``None``, existing bindings are removed."
msgstr ""

#: ../../library/turtle.rst:1641
msgid ""
"Bind *fun* to mouse-move events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""

#: ../../library/turtle.rst:1644
msgid ""
"Remark: Every sequence of mouse-move-events on a turtle is preceded by a "
"mouse-click event on that turtle."
msgstr ""

#: ../../library/turtle.rst:1652
msgid ""
"Subsequently, clicking and dragging the Turtle will move it across the "
"screen thereby producing handdrawings (if pen is down)."
msgstr ""

#: ../../library/turtle.rst:1661
msgid ""
"Start recording the vertices of a polygon.  Current turtle position is first "
"vertex of polygon."
msgstr ""

#: ../../library/turtle.rst:1667
msgid ""
"Stop recording the vertices of a polygon.  Current turtle position is last "
"vertex of polygon.  This will be connected with the first vertex."
msgstr ""

#: ../../library/turtle.rst:1673
msgid "Return the last recorded polygon."
msgstr ""

#: ../../library/turtle.rst:1692
msgid ""
"Create and return a clone of the turtle with same position, heading and "
"turtle properties."
msgstr ""

#: ../../library/turtle.rst:1705
msgid ""
"Return the Turtle object itself.  Only reasonable use: as a function to "
"return the \"anonymous turtle\":"
msgstr ""

#: ../../library/turtle.rst:1719
msgid ""
"Return the :class:`TurtleScreen` object the turtle is drawing on. "
"TurtleScreen methods can then be called for that object."
msgstr ""

#: ../../library/turtle.rst:1733
msgid "an integer or ``None``"
msgstr "um inteiro ou ``None``"

#: ../../library/turtle.rst:1735
msgid ""
"Set or disable undobuffer.  If *size* is an integer, an empty undobuffer of "
"given size is installed.  *size* gives the maximum number of turtle actions "
"that can be undone by the :func:`undo` method/function.  If *size* is "
"``None``, the undobuffer is disabled."
msgstr ""

#: ../../library/turtle.rst:1748
msgid "Return number of entries in the undobuffer."
msgstr ""

#: ../../library/turtle.rst:1761
msgid "Compound shapes"
msgstr "Formas compostas"

#: ../../library/turtle.rst:1763
msgid ""
"To use compound turtle shapes, which consist of several polygons of "
"different color, you must use the helper class :class:`Shape` explicitly as "
"described below:"
msgstr ""

#: ../../library/turtle.rst:1767
msgid "Create an empty Shape object of type \"compound\"."
msgstr ""

#: ../../library/turtle.rst:1768
msgid ""
"Add as many components to this object as desired, using the :meth:`~Shape."
"addcomponent` method."
msgstr ""

#: ../../library/turtle.rst:1771
msgid "For example:"
msgstr "Por exemplo:"

#: ../../library/turtle.rst:1782
msgid "Now add the Shape to the Screen's shapelist and use it:"
msgstr ""

#: ../../library/turtle.rst:1793
msgid ""
"The :class:`Shape` class is used internally by the :func:`register_shape` "
"method in different ways.  The application programmer has to deal with the "
"Shape class *only* when using compound shapes like shown above!"
msgstr ""

#: ../../library/turtle.rst:1799
msgid "Methods of TurtleScreen/Screen and corresponding functions"
msgstr ""

#: ../../library/turtle.rst:1801
msgid ""
"Most of the examples in this section refer to a TurtleScreen instance called "
"``screen``."
msgstr ""

#: ../../library/turtle.rst:1815
msgid ""
"a color string or three numbers in the range 0..colormode or a 3-tuple of "
"such numbers"
msgstr ""

#: ../../library/turtle.rst:1819
msgid "Set or return background color of the TurtleScreen."
msgstr ""

#: ../../library/turtle.rst:1834
msgid "a string, name of a gif-file or ``\"nopic\"``, or ``None``"
msgstr ""

#: ../../library/turtle.rst:1836
msgid ""
"Set background image or return name of current backgroundimage.  If "
"*picname* is a filename, set the corresponding image as background.  If "
"*picname* is ``\"nopic\"``, delete background image, if present.  If "
"*picname* is ``None``, return the filename of the current backgroundimage. ::"
msgstr ""

#: ../../library/turtle.rst:1852
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``clearscreen``.  The global function ``clear`` is a different one "
"derived from the Turtle method ``clear``."
msgstr ""

#: ../../library/turtle.rst:1859
msgid ""
"Delete all drawings and all turtles from the TurtleScreen.  Reset the now "
"empty TurtleScreen to its initial state: white background, no background "
"image, no event bindings and tracing on."
msgstr ""

#: ../../library/turtle.rst:1868
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``resetscreen``.  The global function ``reset`` is another one derived "
"from the Turtle method ``reset``."
msgstr ""

#: ../../library/turtle.rst:1875
msgid "Reset all Turtles on the Screen to their initial state."
msgstr ""

#: ../../library/turtle.rst:1880
msgid "positive integer, new width of canvas in pixels"
msgstr ""

#: ../../library/turtle.rst:1881
msgid "positive integer, new height of canvas in pixels"
msgstr ""

#: ../../library/turtle.rst:1882
msgid "colorstring or color-tuple, new background color"
msgstr ""

#: ../../library/turtle.rst:1884
msgid ""
"If no arguments are given, return current (canvaswidth, canvasheight).  Else "
"resize the canvas the turtles are drawing on.  Do not alter the drawing "
"window.  To observe hidden parts of the canvas, use the scrollbars. With "
"this method, one can make visible those parts of a drawing which were "
"outside the canvas before."
msgstr ""

#: ../../library/turtle.rst:1896
msgid "e.g. to search for an erroneously escaped turtle ;-)"
msgstr ""

#: ../../library/turtle.rst:1901
msgid "a number, x-coordinate of lower left corner of canvas"
msgstr ""

#: ../../library/turtle.rst:1902
msgid "a number, y-coordinate of lower left corner of canvas"
msgstr ""

#: ../../library/turtle.rst:1903
msgid "a number, x-coordinate of upper right corner of canvas"
msgstr ""

#: ../../library/turtle.rst:1904
msgid "a number, y-coordinate of upper right corner of canvas"
msgstr ""

#: ../../library/turtle.rst:1906
msgid ""
"Set up user-defined coordinate system and switch to mode \"world\" if "
"necessary.  This performs a ``screen.reset()``.  If mode \"world\" is "
"already active, all drawings are redrawn according to the new coordinates."
msgstr ""

#: ../../library/turtle.rst:1910
msgid ""
"**ATTENTION**: in user-defined coordinate systems angles may appear "
"distorted."
msgstr ""

#: ../../library/turtle.rst:1938
msgid "positive integer"
msgstr ""

#: ../../library/turtle.rst:1940
msgid ""
"Set or return the drawing *delay* in milliseconds.  (This is approximately "
"the time interval between two consecutive canvas updates.)  The longer the "
"drawing delay, the slower the animation."
msgstr ""

#: ../../library/turtle.rst:1944
msgid "Optional argument:"
msgstr "Argumentos opcionais:"

#: ../../library/turtle.rst:1958 ../../library/turtle.rst:1959
msgid "nonnegative integer"
msgstr "inteiro não-negativo"

#: ../../library/turtle.rst:1961
msgid ""
"Turn turtle animation on/off and set delay for update drawings.  If *n* is "
"given, only each n-th regular screen update is really performed.  (Can be "
"used to accelerate the drawing of complex graphics.)  When called without "
"arguments, returns the currently stored value of n. Second argument sets "
"delay value (see :func:`delay`)."
msgstr ""

#: ../../library/turtle.rst:1981
msgid "Perform a TurtleScreen update. To be used when tracer is turned off."
msgstr ""

#: ../../library/turtle.rst:1983
msgid "See also the RawTurtle/Turtle method :func:`speed`."
msgstr "Veja também o método RawTurtle/Turtle :func:`speed`."

#: ../../library/turtle.rst:1991
msgid ""
"Set focus on TurtleScreen (in order to collect key-events).  Dummy arguments "
"are provided in order to be able to pass :func:`listen` to the onclick "
"method."
msgstr ""

#: ../../library/turtle.rst:1998 ../../library/turtle.rst:2018
msgid "a function with no arguments or ``None``"
msgstr ""

#: ../../library/turtle.rst:1999 ../../library/turtle.rst:2019
msgid "a string: key (e.g. \"a\") or key-symbol (e.g. \"space\")"
msgstr ""

#: ../../library/turtle.rst:2001
msgid ""
"Bind *fun* to key-release event of key.  If *fun* is ``None``, event "
"bindings are removed. Remark: in order to be able to register key-events, "
"TurtleScreen must have the focus. (See method :func:`listen`.)"
msgstr ""

#: ../../library/turtle.rst:2021
msgid ""
"Bind *fun* to key-press event of key if key is given, or to any key-press-"
"event if no key is given. Remark: in order to be able to register key-"
"events, TurtleScreen must have focus. (See method :func:`listen`.)"
msgstr ""

#: ../../library/turtle.rst:2045
msgid ""
"Bind *fun* to mouse-click events on this screen.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""

#: ../../library/turtle.rst:2048
msgid ""
"Example for a TurtleScreen instance named ``screen`` and a Turtle instance "
"named ``turtle``:"
msgstr ""

#: ../../library/turtle.rst:2059
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``onscreenclick``.  The global function ``onclick`` is another one "
"derived from the Turtle method ``onclick``."
msgstr ""

#: ../../library/turtle.rst:2066
msgid "a function with no arguments"
msgstr "um função sem nenhum argumento"

#: ../../library/turtle.rst:2067
msgid "a number >= 0"
msgstr "um número >= 0"

#: ../../library/turtle.rst:2069
msgid "Install a timer that calls *fun* after *t* milliseconds."
msgstr ""

#: ../../library/turtle.rst:2087
msgid ""
"Starts event loop - calling Tkinter's mainloop function. Must be the last "
"statement in a turtle graphics program. Must *not* be used if a script is "
"run from within IDLE in -n mode (No subprocess) - for interactive use of "
"turtle graphics. ::"
msgstr ""

#: ../../library/turtle.rst:2100 ../../library/turtle.rst:2101
#: ../../library/turtle.rst:2113 ../../library/turtle.rst:2114
msgid "string"
msgstr "string"

#: ../../library/turtle.rst:2103
msgid ""
"Pop up a dialog window for input of a string. Parameter title is the title "
"of the dialog window, prompt is a text mostly describing what information to "
"input. Return the string input. If the dialog is canceled, return "
"``None``. ::"
msgstr ""

#: ../../library/turtle.rst:2119
msgid ""
"Pop up a dialog window for input of a number. title is the title of the "
"dialog window, prompt is a text mostly describing what numerical information "
"to input. default: default value, minval: minimum value for input, maxval: "
"maximum value for input. The number input must be in the range minval .. "
"maxval if these are given. If not, a hint is issued and the dialog remains "
"open for correction. Return the number input. If the dialog is canceled,  "
"return ``None``. ::"
msgstr ""

#: ../../library/turtle.rst:2136
msgid "one of the strings \"standard\", \"logo\" or \"world\""
msgstr ""

#: ../../library/turtle.rst:2138
msgid ""
"Set turtle mode (\"standard\", \"logo\" or \"world\") and perform reset.  If "
"mode is not given, current mode is returned."
msgstr ""

#: ../../library/turtle.rst:2141
msgid ""
"Mode \"standard\" is compatible with old :mod:`turtle`.  Mode \"logo\" is "
"compatible with most Logo turtle graphics.  Mode \"world\" uses user-defined "
"\"world coordinates\". **Attention**: in this mode angles appear distorted "
"if ``x/y`` unit-ratio doesn't equal 1."
msgstr ""

#: ../../library/turtle.rst:2147
msgid "Mode"
msgstr "Modo"

#: ../../library/turtle.rst:2147
msgid "Initial turtle heading"
msgstr "Título inicial da tartaruga"

#: ../../library/turtle.rst:2147
msgid "positive angles"
msgstr "ângulos positivos"

#: ../../library/turtle.rst:2149
msgid "\"standard\""
msgstr "\"standard\""

#: ../../library/turtle.rst:2149
msgid "to the right (east)"
msgstr "para a direita (east)"

#: ../../library/turtle.rst:2149
msgid "counterclockwise"
msgstr "counterclockwise"

#: ../../library/turtle.rst:2150
msgid "\"logo\""
msgstr "\"logo\""

#: ../../library/turtle.rst:2150
msgid "upward    (north)"
msgstr "upward (north)"

#: ../../library/turtle.rst:2150
msgid "clockwise"
msgstr "sentido horário"

#: ../../library/turtle.rst:2163
msgid "one of the values 1.0 or 255"
msgstr "um dos valroes 1.0 ou 255"

#: ../../library/turtle.rst:2165
msgid ""
"Return the colormode or set it to 1.0 or 255.  Subsequently *r*, *g*, *b* "
"values of color triples have to be in the range 0..*cmode*."
msgstr ""

#: ../../library/turtle.rst:2186
msgid ""
"Return the Canvas of this TurtleScreen.  Useful for insiders who know what "
"to do with a Tkinter Canvas."
msgstr ""

#: ../../library/turtle.rst:2199
msgid "Return a list of names of all currently available turtle shapes."
msgstr ""
"Retorna uma lista dos nomes de todas as formas de tartarugas disponíveis no "
"momento."

#: ../../library/turtle.rst:2211
msgid "There are three different ways to call this function:"
msgstr "Há três maneiras diferentes de chamar essa função:"

#: ../../library/turtle.rst:2213
msgid ""
"*name* is the name of a gif-file and *shape* is ``None``: Install the "
"corresponding image shape. ::"
msgstr ""

#: ../../library/turtle.rst:2219
msgid ""
"Image shapes *do not* rotate when turning the turtle, so they do not display "
"the heading of the turtle!"
msgstr ""

#: ../../library/turtle.rst:2222
msgid ""
"*name* is an arbitrary string and *shape* is a tuple of pairs of "
"coordinates: Install the corresponding polygon shape."
msgstr ""

#: ../../library/turtle.rst:2230
msgid ""
"*name* is an arbitrary string and *shape* is a (compound) :class:`Shape` "
"object: Install the corresponding compound shape."
msgstr ""

#: ../../library/turtle.rst:2233
msgid ""
"Add a turtle shape to TurtleScreen's shapelist.  Only thusly registered "
"shapes can be used by issuing the command ``shape(shapename)``."
msgstr ""

#: ../../library/turtle.rst:2239
msgid "Return the list of turtles on the screen."
msgstr "Retorne uma lista de tartarugas na tela."

#: ../../library/turtle.rst:2250
msgid "Return the height of the turtle window. ::"
msgstr "Retorna a altura da janela da tartaruga. ::"

#: ../../library/turtle.rst:2258
msgid "Return the width of the turtle window. ::"
msgstr "Retorna a largura da janela da tartaruga. ::"

#: ../../library/turtle.rst:2267
msgid "Methods specific to Screen, not inherited from TurtleScreen"
msgstr ""

#: ../../library/turtle.rst:2271
msgid "Shut the turtlegraphics window."
msgstr ""

#: ../../library/turtle.rst:2276
msgid "Bind ``bye()`` method to mouse clicks on the Screen."
msgstr ""

#: ../../library/turtle.rst:2279
msgid ""
"If the value \"using_IDLE\" in the configuration dictionary is ``False`` "
"(default value), also enter mainloop.  Remark: If IDLE with the ``-n`` "
"switch (no subprocess) is used, this value should be set to ``True`` in :"
"file:`turtle.cfg`.  In this case IDLE's own mainloop is active also for the "
"client script."
msgstr ""

#: ../../library/turtle.rst:2288
msgid ""
"Set the size and position of the main window.  Default values of arguments "
"are stored in the configuration dictionary and can be changed via a :file:"
"`turtle.cfg` file."
msgstr ""

#: ../../library/turtle.rst:2292
msgid ""
"if an integer, a size in pixels, if a float, a fraction of the screen; "
"default is 50% of screen"
msgstr ""

#: ../../library/turtle.rst:2294
msgid ""
"if an integer, the height in pixels, if a float, a fraction of the screen; "
"default is 75% of screen"
msgstr ""

#: ../../library/turtle.rst:2296
msgid ""
"if positive, starting position in pixels from the left edge of the screen, "
"if negative from the right edge, if ``None``, center window horizontally"
msgstr ""

#: ../../library/turtle.rst:2299
msgid ""
"if positive, starting position in pixels from the top edge of the screen, if "
"negative from the bottom edge, if ``None``, center window vertically"
msgstr ""

#: ../../library/turtle.rst:2314
msgid "a string that is shown in the titlebar of the turtle graphics window"
msgstr ""

#: ../../library/turtle.rst:2317
msgid "Set title of turtle window to *titlestring*."
msgstr ""

#: ../../library/turtle.rst:2326
msgid "Public classes"
msgstr "Classes Públicas"

#: ../../library/turtle.rst:2332
msgid ""
"a :class:`!tkinter.Canvas`, a :class:`ScrolledCanvas` or a :class:"
"`TurtleScreen`"
msgstr ""

#: ../../library/turtle.rst:2335
msgid ""
"Create a turtle.  The turtle has all methods described above as \"methods of "
"Turtle/RawTurtle\"."
msgstr ""

#: ../../library/turtle.rst:2341
msgid ""
"Subclass of RawTurtle, has the same interface but draws on a default :class:"
"`Screen` object created automatically when needed for the first time."
msgstr ""

#: ../../library/turtle.rst:2347
msgid "a :class:`!tkinter.Canvas`"
msgstr ""

#: ../../library/turtle.rst:2349
msgid ""
"Provides screen oriented methods like :func:`bgcolor` etc. that are "
"described above."
msgstr ""

#: ../../library/turtle.rst:2354
msgid ""
"Subclass of TurtleScreen, with :ref:`four methods added <screenspecific>`."
msgstr ""

#: ../../library/turtle.rst:2359
msgid ""
"some Tkinter widget to contain the ScrolledCanvas, i.e. a Tkinter-canvas "
"with scrollbars added"
msgstr ""

#: ../../library/turtle.rst:2362
msgid ""
"Used by class Screen, which thus automatically provides a ScrolledCanvas as "
"playground for the turtles."
msgstr ""

#: ../../library/turtle.rst:2367
msgid "one of the strings \"polygon\", \"image\", \"compound\""
msgstr ""

#: ../../library/turtle.rst:2369
msgid ""
"Data structure modeling shapes.  The pair ``(type_, data)`` must follow this "
"specification:"
msgstr ""

#: ../../library/turtle.rst:2374
msgid "*type_*"
msgstr "*type_*"

#: ../../library/turtle.rst:2374
msgid "*data*"
msgstr "*data*"

#: ../../library/turtle.rst:2376
msgid "\"polygon\""
msgstr "\"polygon\""

#: ../../library/turtle.rst:2376
msgid "a polygon-tuple, i.e. a tuple of pairs of coordinates"
msgstr ""

#: ../../library/turtle.rst:2377
msgid "\"image\""
msgstr "\"image\""

#: ../../library/turtle.rst:2377
msgid "an image  (in this form only used internally!)"
msgstr ""

#: ../../library/turtle.rst:2378
msgid "\"compound\""
msgstr "\"compound\""

#: ../../library/turtle.rst:2378
msgid ""
"``None`` (a compound shape has to be constructed using the :meth:"
"`addcomponent` method)"
msgstr ""

#: ../../library/turtle.rst:2384
msgid "a polygon, i.e. a tuple of pairs of numbers"
msgstr ""

#: ../../library/turtle.rst:2385
msgid "a color the *poly* will be filled with"
msgstr ""

#: ../../library/turtle.rst:2386
msgid "a color for the poly's outline (if given)"
msgstr ""

#: ../../library/turtle.rst:2388
msgid "Example:"
msgstr "Exemplo:"

#: ../../library/turtle.rst:2398
msgid "See :ref:`compoundshapes`."
msgstr ""

#: ../../library/turtle.rst:2403
msgid ""
"A two-dimensional vector class, used as a helper class for implementing "
"turtle graphics.  May be useful for turtle graphics programs too.  Derived "
"from tuple, so a vector is a tuple!"
msgstr ""

#: ../../library/turtle.rst:2407
msgid "Provides (for *a*, *b* vectors, *k* number):"
msgstr ""

#: ../../library/turtle.rst:2409
msgid "``a + b`` vector addition"
msgstr "``a + b`` vetor adicional"

#: ../../library/turtle.rst:2410
msgid "``a - b`` vector subtraction"
msgstr "``a - b`` subtração de vetor"

#: ../../library/turtle.rst:2411
msgid "``a * b`` inner product"
msgstr "``a * b`` produto interno"

#: ../../library/turtle.rst:2412
msgid "``k * a`` and ``a * k`` multiplication with scalar"
msgstr "``k * a`` e ``a * k`` multiplicação com escalar"

#: ../../library/turtle.rst:2413
msgid "``abs(a)`` absolute value of a"
msgstr "``abs(a)`` valor absoluto de um"

#: ../../library/turtle.rst:2414
msgid "``a.rotate(angle)`` rotation"
msgstr "rotação ``a.rotate(angle)``"

#: ../../library/turtle.rst:2420
msgid "Explanation"
msgstr "Explanação"

#: ../../library/turtle.rst:2422
msgid ""
"A turtle object draws on a screen object, and there a number of key classes "
"in the turtle object-oriented interface that can be used to create them and "
"relate them to each other."
msgstr ""

#: ../../library/turtle.rst:2426
msgid ""
"A :class:`Turtle` instance will automatically create a :class:`Screen` "
"instance if one is not already present."
msgstr ""

#: ../../library/turtle.rst:2429
msgid ""
"``Turtle`` is a subclass of :class:`RawTurtle`, which *doesn't* "
"automatically create a drawing surface - a *canvas* will need to be provided "
"or created for it. The *canvas* can be a :class:`!tkinter.Canvas`, :class:"
"`ScrolledCanvas` or :class:`TurtleScreen`."
msgstr ""

#: ../../library/turtle.rst:2435
msgid ""
":class:`TurtleScreen` is the basic drawing surface for a turtle. :class:"
"`Screen` is a subclass of ``TurtleScreen``, and includes :ref:`some "
"additional methods <screenspecific>` for managing its appearance (including "
"size and title) and behaviour. ``TurtleScreen``'s constructor needs a :class:"
"`!tkinter.Canvas` or a :class:`ScrolledCanvas` as an argument."
msgstr ""

#: ../../library/turtle.rst:2442
msgid ""
"The functional interface for turtle graphics uses the various methods of "
"``Turtle`` and ``TurtleScreen``/``Screen``. Behind the scenes, a screen "
"object is automatically created whenever a function derived from a "
"``Screen`` method is called. Similarly, a turtle object is automatically "
"created whenever any of the functions derived from a Turtle method is called."
msgstr ""

#: ../../library/turtle.rst:2448
msgid ""
"To use multiple turtles on a screen, the object-oriented interface must be "
"used."
msgstr ""

#: ../../library/turtle.rst:2453
msgid "Help and configuration"
msgstr "Ajuda e Configuração"

#: ../../library/turtle.rst:2456
msgid "How to use help"
msgstr "Como usar a Ajuda"

#: ../../library/turtle.rst:2458
msgid ""
"The public methods of the Screen and Turtle classes are documented "
"extensively via docstrings.  So these can be used as online-help via the "
"Python help facilities:"
msgstr ""

#: ../../library/turtle.rst:2462
msgid ""
"When using IDLE, tooltips show the signatures and first lines of the "
"docstrings of typed in function-/method calls."
msgstr ""

#: ../../library/turtle.rst:2465
msgid "Calling :func:`help` on methods or functions displays the docstrings::"
msgstr ""

#: ../../library/turtle.rst:2496
msgid ""
"The docstrings of the functions which are derived from methods have a "
"modified form::"
msgstr ""

#: ../../library/turtle.rst:2530
msgid ""
"These modified docstrings are created automatically together with the "
"function definitions that are derived from the methods at import time."
msgstr ""

#: ../../library/turtle.rst:2535
msgid "Translation of docstrings into different languages"
msgstr ""

#: ../../library/turtle.rst:2537
msgid ""
"There is a utility to create a dictionary the keys of which are the method "
"names and the values of which are the docstrings of the public methods of "
"the classes Screen and Turtle."
msgstr ""

#: ../../library/turtle.rst:2543
msgid "a string, used as filename"
msgstr ""

#: ../../library/turtle.rst:2545
msgid ""
"Create and write docstring-dictionary to a Python script with the given "
"filename.  This function has to be called explicitly (it is not used by the "
"turtle graphics classes).  The docstring dictionary will be written to the "
"Python script :file:`{filename}.py`.  It is intended to serve as a template "
"for translation of the docstrings into different languages."
msgstr ""

#: ../../library/turtle.rst:2551
msgid ""
"If you (or your students) want to use :mod:`turtle` with online help in your "
"native language, you have to translate the docstrings and save the resulting "
"file as e.g. :file:`turtle_docstringdict_german.py`."
msgstr ""

#: ../../library/turtle.rst:2555
msgid ""
"If you have an appropriate entry in your :file:`turtle.cfg` file this "
"dictionary will be read in at import time and will replace the original "
"English docstrings."
msgstr ""

#: ../../library/turtle.rst:2558
msgid ""
"At the time of this writing there are docstring dictionaries in German and "
"in Italian.  (Requests please to glingl@aon.at.)"
msgstr ""

#: ../../library/turtle.rst:2564
msgid "How to configure Screen and Turtles"
msgstr ""

#: ../../library/turtle.rst:2566
msgid ""
"The built-in default configuration mimics the appearance and behaviour of "
"the old turtle module in order to retain best possible compatibility with it."
msgstr ""

#: ../../library/turtle.rst:2569
msgid ""
"If you want to use a different configuration which better reflects the "
"features of this module or which better fits to your needs, e.g. for use in "
"a classroom, you can prepare a configuration file ``turtle.cfg`` which will "
"be read at import time and modify the configuration according to its "
"settings."
msgstr ""

#: ../../library/turtle.rst:2574
msgid ""
"The built in configuration would correspond to the following ``turtle.cfg``:"
msgstr ""

#: ../../library/turtle.rst:2599
msgid "Short explanation of selected entries:"
msgstr "Breve explicação das entradas selecionadas:"

#: ../../library/turtle.rst:2601
msgid ""
"The first four lines correspond to the arguments of the :func:`Screen.setup "
"<setup>` method."
msgstr ""

#: ../../library/turtle.rst:2603
msgid ""
"Line 5 and 6 correspond to the arguments of the method :func:`Screen."
"screensize <screensize>`."
msgstr ""

#: ../../library/turtle.rst:2605
msgid ""
"*shape* can be any of the built-in shapes, e.g: arrow, turtle, etc.  For "
"more info try ``help(shape)``."
msgstr ""

#: ../../library/turtle.rst:2607
msgid ""
"If you want to use no fill color (i.e. make the turtle transparent), you "
"have to write ``fillcolor = \"\"`` (but all nonempty strings must not have "
"quotes in the cfg file)."
msgstr ""

#: ../../library/turtle.rst:2610
msgid ""
"If you want to reflect the turtle its state, you have to use ``resizemode = "
"auto``."
msgstr ""

#: ../../library/turtle.rst:2612
msgid ""
"If you set e.g. ``language = italian`` the docstringdict :file:"
"`turtle_docstringdict_italian.py` will be loaded at import time (if present "
"on the import path, e.g. in the same directory as :mod:`turtle`)."
msgstr ""

#: ../../library/turtle.rst:2615
msgid ""
"The entries *exampleturtle* and *examplescreen* define the names of these "
"objects as they occur in the docstrings.  The transformation of method-"
"docstrings to function-docstrings will delete these names from the "
"docstrings."
msgstr ""

#: ../../library/turtle.rst:2619
msgid ""
"*using_IDLE*: Set this to ``True`` if you regularly work with IDLE and its "
"``-n`` switch (\"no subprocess\").  This will prevent :func:`exitonclick` to "
"enter the mainloop."
msgstr ""

#: ../../library/turtle.rst:2623
msgid ""
"There can be a :file:`turtle.cfg` file in the directory where :mod:`turtle` "
"is stored and an additional one in the current working directory.  The "
"latter will override the settings of the first one."
msgstr ""

#: ../../library/turtle.rst:2627
msgid ""
"The :file:`Lib/turtledemo` directory contains a :file:`turtle.cfg` file.  "
"You can study it as an example and see its effects when running the demos "
"(preferably not from within the demo-viewer)."
msgstr ""

#: ../../library/turtle.rst:2633
msgid ":mod:`turtledemo` --- Demo scripts"
msgstr ":mod:`turtledemo` --- Scripts de Demonstração"

#: ../../library/turtle.rst:2638
msgid ""
"The :mod:`turtledemo` package includes a set of demo scripts.  These scripts "
"can be run and viewed using the supplied demo viewer as follows::"
msgstr ""

#: ../../library/turtle.rst:2643
msgid ""
"Alternatively, you can run the demo scripts individually.  For example, ::"
msgstr ""

#: ../../library/turtle.rst:2647
msgid "The :mod:`turtledemo` package directory contains:"
msgstr ""

#: ../../library/turtle.rst:2649
msgid ""
"A demo viewer :file:`__main__.py` which can be used to view the sourcecode "
"of the scripts and run them at the same time."
msgstr ""

#: ../../library/turtle.rst:2651
msgid ""
"Multiple scripts demonstrating different features of the :mod:`turtle` "
"module.  Examples can be accessed via the Examples menu.  They can also be "
"run standalone."
msgstr ""

#: ../../library/turtle.rst:2654
msgid ""
"A :file:`turtle.cfg` file which serves as an example of how to write and use "
"such files."
msgstr ""

#: ../../library/turtle.rst:2657
msgid "The demo scripts are:"
msgstr "Os scripts de demonstração são:"

#: ../../library/turtle.rst:2664
msgid "Name"
msgstr "Nome"

#: ../../library/turtle.rst:2664
msgid "Description"
msgstr "Descrição"

#: ../../library/turtle.rst:2664
msgid "Features"
msgstr "Recursos"

#: ../../library/turtle.rst:2666
msgid "bytedesign"
msgstr "bytedesign"

#: ../../library/turtle.rst:2666
msgid "complex classical turtle graphics pattern"
msgstr "Padrão de gráficos de tartaruga clássico complexo"

#: ../../library/turtle.rst:2666
msgid ":func:`tracer`, delay, :func:`update`"
msgstr ":func:`tracer`, delay, :func:`update`"

#: ../../library/turtle.rst:2669
msgid "chaos"
msgstr "chaos"

#: ../../library/turtle.rst:2669
msgid ""
"graphs Verhulst dynamics, shows that computer's computations can generate "
"results sometimes against the common sense expectations"
msgstr ""

#: ../../library/turtle.rst:2669
msgid "world coordinates"
msgstr "coordenadas mundiais"

#: ../../library/turtle.rst:2675
msgid "clock"
msgstr "relógio"

#: ../../library/turtle.rst:2675
msgid "analog clock showing time of your computer"
msgstr "Relógio analógico que mostra o horário do seu computador"

#: ../../library/turtle.rst:2675
msgid "turtles as clock's hands, ontimer"
msgstr "tartarugas como as mãos do relógio, ontimer"

#: ../../library/turtle.rst:2678
msgid "colormixer"
msgstr "colormixer"

#: ../../library/turtle.rst:2678
msgid "experiment with r, g, b"
msgstr "experimento com r, g, b"

#: ../../library/turtle.rst:2680
msgid "forest"
msgstr "forest"

#: ../../library/turtle.rst:2680
msgid "3 breadth-first trees"
msgstr "3 breadth-first trees"

#: ../../library/turtle.rst:2680
msgid "randomization"
msgstr "randomization"

#: ../../library/turtle.rst:2682
msgid "fractalcurves"
msgstr "fractalcurves"

#: ../../library/turtle.rst:2682
msgid "Hilbert & Koch curves"
msgstr "Curvas de Hilbert & Koch"

#: ../../library/turtle.rst:2682
msgid "recursion"
msgstr "recursão"

#: ../../library/turtle.rst:2684
msgid "lindenmayer"
msgstr "lindenmayer"

#: ../../library/turtle.rst:2684
msgid "ethnomathematics (indian kolams)"
msgstr "ethnomathematics (indian kolams)"

#: ../../library/turtle.rst:2684
msgid "L-System"
msgstr "L-System"

#: ../../library/turtle.rst:2687
msgid "minimal_hanoi"
msgstr "minimal_hanoi"

#: ../../library/turtle.rst:2687
msgid "Towers of Hanoi"
msgstr "Torres de Hanoi"

#: ../../library/turtle.rst:2687
msgid "Rectangular Turtles as Hanoi discs (shape, shapesize)"
msgstr "Tartarugas retângulos como discos de Hanói (shape, shapesize)"

#: ../../library/turtle.rst:2691
msgid "nim"
msgstr "nim"

#: ../../library/turtle.rst:2691
msgid ""
"play the classical nim game with three heaps of sticks against the computer."
msgstr ""

#: ../../library/turtle.rst:2691
msgid "turtles as nimsticks, event driven (mouse, keyboard)"
msgstr ""

#: ../../library/turtle.rst:2695
msgid "paint"
msgstr "paint"

#: ../../library/turtle.rst:2695
msgid "super minimalistic drawing program"
msgstr "programa de desenho super minimalista"

#: ../../library/turtle.rst:2698
msgid "peace"
msgstr "peça"

#: ../../library/turtle.rst:2698
msgid "elementary"
msgstr "elementar"

#: ../../library/turtle.rst:2698
msgid "turtle: appearance and animation"
msgstr "tartaruga: aparência e animação"

#: ../../library/turtle.rst:2701
msgid "penrose"
msgstr "penrose"

#: ../../library/turtle.rst:2701
msgid "aperiodic tiling with kites and darts"
msgstr ""

#: ../../library/turtle.rst:2704
msgid "planet_and_moon"
msgstr "planet_and_moon"

#: ../../library/turtle.rst:2704
msgid "simulation of gravitational system"
msgstr "simulação do sistema gravitacional"

#: ../../library/turtle.rst:2704
msgid "compound shapes, :class:`Vec2D`"
msgstr "formas compostas, :class:`Vec2D`"

#: ../../library/turtle.rst:2707
msgid "rosette"
msgstr ""

#: ../../library/turtle.rst:2707
msgid "a pattern from the wikipedia article on turtle graphics"
msgstr "um padrão do artigo Wikipédia sobre gráficos de tartaruga"

#: ../../library/turtle.rst:2707
msgid ":func:`clone`, :func:`undo`"
msgstr ":func:`clone`, :func:`undo`"

#: ../../library/turtle.rst:2710
msgid "round_dance"
msgstr "round_dance"

#: ../../library/turtle.rst:2710
msgid "dancing turtles rotating pairwise in opposite direction"
msgstr ""

#: ../../library/turtle.rst:2710
msgid "compound shapes, clone shapesize, tilt, get_shapepoly, update"
msgstr ""

#: ../../library/turtle.rst:2714
msgid "sorting_animate"
msgstr "sorting_animate"

#: ../../library/turtle.rst:2714
msgid "visual demonstration of different sorting methods"
msgstr ""

#: ../../library/turtle.rst:2714
msgid "simple alignment, randomization"
msgstr ""

#: ../../library/turtle.rst:2717
msgid "tree"
msgstr "tree"

#: ../../library/turtle.rst:2717
msgid "a (graphical) breadth first tree (using generators)"
msgstr ""

#: ../../library/turtle.rst:2720
msgid "two_canvases"
msgstr "two_canvases"

#: ../../library/turtle.rst:2720
msgid "simple design"
msgstr "desenho simples"

#: ../../library/turtle.rst:2720
msgid "turtles on two canvases"
msgstr "tartarugas em duas telas"

#: ../../library/turtle.rst:2723
msgid "yinyang"
msgstr "yinyang"

#: ../../library/turtle.rst:2723
msgid "another elementary example"
msgstr "outro exemplo elementar"

#: ../../library/turtle.rst:2726
msgid "Have fun!"
msgstr "Diverta-se!"

#: ../../library/turtle.rst:2730
msgid "Changes since Python 2.6"
msgstr "Modificações desde a versão do Python 2.6"

#: ../../library/turtle.rst:2732
msgid ""
"The methods :func:`Turtle.tracer <tracer>`, :func:`Turtle.window_width "
"<window_width>` and :func:`Turtle.window_height <window_height>` have been "
"eliminated. Methods with these names and functionality are now available "
"only as methods of :class:`Screen`. The functions derived from these remain "
"available. (In fact already in Python 2.6 these methods were merely "
"duplications of the corresponding :class:`TurtleScreen`/:class:`Screen` "
"methods.)"
msgstr ""

#: ../../library/turtle.rst:2740
msgid ""
"The method :func:`!Turtle.fill` has been eliminated. The behaviour of :func:"
"`begin_fill` and :func:`end_fill` have changed slightly: now every filling "
"process must be completed with an ``end_fill()`` call."
msgstr ""

#: ../../library/turtle.rst:2745
msgid ""
"A method :func:`Turtle.filling <filling>` has been added. It returns a "
"boolean value: ``True`` if a filling process is under way, ``False`` "
"otherwise. This behaviour corresponds to a ``fill()`` call without arguments "
"in Python 2.6."
msgstr ""

#: ../../library/turtle.rst:2751
msgid "Changes since Python 3.0"
msgstr "Modificações desde a versão do Python 3.0"

#: ../../library/turtle.rst:2753
msgid ""
"The :class:`Turtle` methods :func:`shearfactor`, :func:`shapetransform` and :"
"func:`get_shapepoly` have been added. Thus the full range of regular linear "
"transforms is now available for transforming turtle shapes. :func:"
"`tiltangle` has been enhanced in functionality: it now can be used to get or "
"set the tilt angle. :func:`settiltangle` has been deprecated."
msgstr ""

#: ../../library/turtle.rst:2760
msgid ""
"The :class:`Screen` method :func:`onkeypress` has been added as a complement "
"to :func:`onkey`. As the latter binds actions to the key release event, an "
"alias: :func:`onkeyrelease` was also added for it."
msgstr ""

#: ../../library/turtle.rst:2764
msgid ""
"The method :func:`Screen.mainloop <mainloop>` has been added, so there is no "
"longer a need to use the standalone :func:`mainloop` function when working "
"with :class:`Screen` and :class:`Turtle` objects."
msgstr ""

#: ../../library/turtle.rst:2768
msgid ""
"Two input methods have been added: :func:`Screen.textinput <textinput>` and :"
"func:`Screen.numinput <numinput>`. These pop up input dialogs and return "
"strings and numbers respectively."
msgstr ""

#: ../../library/turtle.rst:2772
msgid ""
"Two example scripts :file:`tdemo_nim.py` and :file:`tdemo_round_dance.py` "
"have been added to the :file:`Lib/turtledemo` directory."
msgstr ""
