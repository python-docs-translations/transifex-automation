# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Franco Falleti <ezefran256@gmail.com>, 2019
# Sergio Flores <vitavitae1@gmail.com>, 2019
# Ivan Nieto <ivan.n.s@tuta.io>, 2019
# 4d55c1f241cfc9359bdd2055be28eafe_d3b1e9e <fd8de6b3f8cd5d375929728ab95ac34b_511958>, 2019
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-16 16:41+0000\n"
"PO-Revision-Date: 2019-09-01 02:43+0000\n"
"Last-Translator: 4d55c1f241cfc9359bdd2055be28eafe_d3b1e9e "
"<fd8de6b3f8cd5d375929728ab95ac34b_511958>, 2019\n"
"Language-Team: Spanish (https://app.transifex.com/python-doc/teams/5390/"
"es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:5
msgid "Programming FAQ"
msgstr "FAQ Programación"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:8
msgid "Contents"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:12
msgid "General Questions"
msgstr "Preguntas Generales"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:15
msgid ""
"Is there a source code level debugger with breakpoints, single-stepping, "
"etc.?"
msgstr ""
"Existe algún debugger de código fuente con breakpoints, paso-a-paso, etc.?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:17
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:63
msgid "Yes."
msgstr "Sí."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:19
msgid ""
"Several debuggers for Python are described below, and the built-in function :"
"func:`breakpoint` allows you to drop into any of them."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:22
msgid ""
"The pdb module is a simple but adequate console-mode debugger for Python. It "
"is part of the standard Python library, and is :mod:`documented in the "
"Library Reference Manual <pdb>`. You can also write your own debugger by "
"using the code for pdb as an example."
msgstr ""
"El módulo pdb es un debugger en consola, simple, pero adecuado a Python. Es "
"parte de la librería estándar de Python, y es :mod:`documentado` en el "
"Manual Referencia de la Librería <pdb>`. Puedes también escribir tu propio "
"debugger utilizando el código para pdb como ejemplo."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:27
msgid ""
"The IDLE interactive development environment, which is part of the standard "
"Python distribution (normally available as Tools/scripts/idle), includes a "
"graphical debugger."
msgstr ""
"El entorno interactivo de desarrollo IDLE, que es parte de la distribución "
"estándar de Python (disponible como Herramientas/scripts/idle), incluye un "
"debugger gráfico."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:31
msgid ""
"PythonWin is a Python IDE that includes a GUI debugger based on pdb.  The "
"Pythonwin debugger colors breakpoints and has quite a few cool features such "
"as debugging non-Pythonwin programs.  Pythonwin is available as part of the "
"`Python for Windows Extensions <https://sourceforge.net/projects/pywin32/"
">`__ project and as a part of the ActivePython distribution (see https://www."
"activestate.com/activepython\\ )."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:38
msgid ""
"`Boa Constructor <http://boa-constructor.sourceforge.net/>`_ is an IDE and "
"GUI builder that uses wxWidgets.  It offers visual frame creation and "
"manipulation, an object inspector, many views on the source like object "
"browsers, inheritance hierarchies, doc string generated html documentation, "
"an advanced debugger, integrated help, and Zope support."
msgstr ""
"`Boa Constructor <http://boa-constructor.sourceforge.net/>`_ es un IDE y "
"constructor de GUI que utiliza wxWidgets. Ofrece un marco de creación visual "
"y manipulación, un inspector de objetos, diferentes vistas sobre el código "
"como buscadores de objetos, jerarquías de herencias, documentación html "
"generada mediante strings, un debugger avanzado, ayuda integrada y soporte "
"Zope."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:44
msgid ""
"`Eric <http://eric-ide.python-projects.org/>`_ is an IDE built on PyQt and "
"the Scintilla editing component."
msgstr ""
"Eric <http://eric-ide.python-projects.org/>`_ es un IDE construído sobre "
"PyQt y el componente de edición Scintilla."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:47
msgid ""
"Pydb is a version of the standard Python debugger pdb, modified for use with "
"DDD (Data Display Debugger), a popular graphical debugger front end.  Pydb "
"can be found at http://bashdb.sourceforge.net/pydb/ and DDD can be found at "
"https://www.gnu.org/software/ddd."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:52
msgid ""
"There are a number of commercial Python IDEs that include graphical "
"debuggers. They include:"
msgstr ""
"Hay un gran número de IDEs en versión comercial para Python que incluyen "
"debuggers gráficos.\n"
"Incluyen:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:55
msgid "Wing IDE (https://wingware.com/)"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:56
msgid "Komodo IDE (https://komodoide.com/)"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:57
msgid "PyCharm (https://www.jetbrains.com/pycharm/)"
msgstr "PyCharm (https://www.jetbrains.com/pycharm/)"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:61
msgid "Is there a tool to help find bugs or perform static analysis?"
msgstr ""
"¿Existe alguna herramienta de ayuda para encontrar bugs o realizar análisis "
"estáticos?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:65
msgid ""
"PyChecker is a static analysis tool that finds bugs in Python source code "
"and warns about code complexity and style.  You can get PyChecker from "
"http://pychecker.sourceforge.net/."
msgstr ""
"PyChecker es una herramienta de análisis estático que te ayuda a encontrar "
"bugs en el código fuente de Python y advierte sobre la complejidad del "
"código y el estilo. Puedes obtener PyChecker desde http://pychecker."
"sourceforge.net/."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:69
msgid ""
"`Pylint <https://www.pylint.org/>`_ is another tool that checks if a module "
"satisfies a coding standard, and also makes it possible to write plug-ins to "
"add a custom feature.  In addition to the bug checking that PyChecker "
"performs, Pylint offers some additional features such as checking line "
"length, whether variable names are well-formed according to your coding "
"standard, whether declared interfaces are fully implemented, and more. "
"https://docs.pylint.org/ provides a full list of Pylint's features."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:77
msgid ""
"Static type checkers such as `Mypy <http://mypy-lang.org/>`_, `Pyre <https://"
"pyre-check.org/>`_, and `Pytype <https://github.com/google/pytype>`_ can "
"check type hints in Python source code."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:84
msgid "How can I create a stand-alone binary from a Python script?"
msgstr "¿Cómo puedo crear un binario stand-alone desde un script de Python?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:86
msgid ""
"You don't need the ability to compile Python to C code if all you want is a "
"stand-alone program that users can download and run without having to "
"install the Python distribution first.  There are a number of tools that "
"determine the set of modules required by a program and bind these modules "
"together with a Python binary to produce a single executable."
msgstr ""
"No necesitas la habilidad de compilar Python a código C si lo único que "
"buscas es un programa stand-alone que los usuarios puedan descargar y "
"ejecutar sin tener que instalar primero la distribución Python. Hay un buen "
"número de herramientas que determinan el conjunto de módulos requeridos por "
"un programa y adhiere esos módulos con un binario de Python para producir un "
"simple ejecutable."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:92
msgid ""
"One is to use the freeze tool, which is included in the Python source tree "
"as ``Tools/freeze``. It converts Python byte code to C arrays; a C compiler "
"you can embed all your modules into a new program, which is then linked with "
"the standard Python modules."
msgstr ""
"Una de las formas, es utilizar la herramienta de congelado, que se incluye "
"en el árbol de origen de Python como ``Herramientas/congelar``. Convierte el "
"código byte de Python a arrays de C; un compilador al que que incrustas "
"todos tus módulos generando un  nuevo programa, y que después es enlazado "
"con los módulos estándar de la librería Python."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:97
msgid ""
"It works by scanning your source recursively for import statements (in both "
"forms) and looking for the modules in the standard Python path as well as in "
"the source directory (for built-in modules).  It then turns the bytecode for "
"modules written in Python into C code (array initializers that can be turned "
"into code objects using the marshal module) and creates a custom-made config "
"file that only contains those built-in modules which are actually used in "
"the program.  It then compiles the generated C code and links it with the "
"rest of the Python interpreter to form a self-contained binary which acts "
"exactly like your script."
msgstr ""
"Funciona escaneando tu código recursivamente para importar declaraciones (en "
"ambas formas) y buscando los módulos en la ruta estándar de Python, así como "
"también en el directorio raíz del código (para los módulos internos). "
"Después, se convierte el bytecode de los módulos escritos en Python a "
"lenguaje C (los inicializadores de arrays pueden ser convertidos en objetos "
"de código utilizando el modo director) y crea un archivo config "
"personalizado que solo contiene esos módulos internos que son los utilizados "
"en el programa. Tras ello, compila el código C generado y lo enlaza con el "
"resto del intérprete de Python para formar binarios auto-contenidos que "
"actúan exactamente como tu script."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:106
msgid ""
"Obviously, freeze requires a C compiler.  There are several other utilities "
"which don't. One is Thomas Heller's py2exe (Windows only) at"
msgstr ""
"Obviamente, el congelado requiere un compilador de C. Existen muchas otras "
"utilidades que no requieren tal cosa. Una de ellas es Thomas Heller's py2exe "
"(sólo Windows) en"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:109
msgid "http://www.py2exe.org/"
msgstr "http://www.py2exe.org/"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:111
msgid ""
"Another tool is Anthony Tuininga's `cx_Freeze <https://anthony-tuininga."
"github.io/cx_Freeze/>`_."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:115
msgid "Are there coding standards or a style guide for Python programs?"
msgstr ""
"¿Hay estándares de código o alguna guía de estilos para programas Python?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:117
msgid ""
"Yes.  The coding style required for standard library modules is documented "
"as :pep:`8`."
msgstr ""
"Sí. El estilo de código requerido para módulos de la librería estándar es "
"documentado como :pep:`8`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:122
msgid "Core Language"
msgstr "Núcleo del lenguaje."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:125
msgid "Why am I getting an UnboundLocalError when the variable has a value?"
msgstr ""
"¿Por qué recibo un UnboundLocalError cuando la variable tiene un valor?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:127
msgid ""
"It can be a surprise to get the UnboundLocalError in previously working code "
"when it is modified by adding an assignment statement somewhere in the body "
"of a function."
msgstr ""
"Puede ser sorprendente recibir el UnboundLocalError en código que funcionaba "
"anteriormente cuando es modificado añadiendo una declaración dentro del "
"cuerpo de una función."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:131
msgid "This code:"
msgstr "Este código:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:139
msgid "works, but this code:"
msgstr "funciona, pero este código:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:146
msgid "results in an UnboundLocalError:"
msgstr "devuelve un UnboundLocalError:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:153
msgid ""
"This is because when you make an assignment to a variable in a scope, that "
"variable becomes local to that scope and shadows any similarly named "
"variable in the outer scope.  Since the last statement in foo assigns a new "
"value to ``x``, the compiler recognizes it as a local variable.  "
"Consequently when the earlier ``print(x)`` attempts to print the "
"uninitialized local variable and an error results."
msgstr ""
"Esto es porque cuando realizas una asignación a  una variable en un ámbito, "
"esa variable se convierte en local para ese ámbito y deja entrever alguna "
"variable nombrada similarmente en el ámbito exterior. Por ej. la última "
"declaración de un código asigna a foo un nuevo valor ``x``,  el compilador "
"lo reconoce como una variable local. Consecuentemente, cuando ``print(x)`` "
"definido antes de inicializar la variable intenta imprimirla, nos devuelve "
"un error."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:160
msgid ""
"In the example above you can access the outer scope variable by declaring it "
"global:"
msgstr ""
"En el ejemplo superior, puedes acceder al ámbito externo de la variable "
"declarándola global:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:171
msgid ""
"This explicit declaration is required in order to remind you that (unlike "
"the superficially analogous situation with class and instance variables) you "
"are actually modifying the value of the variable in the outer scope:"
msgstr ""
"Esta declaración explícita se requiere para recordarte que (a diferencia de "
"una situación análoga supérflua con clases e instancias de variables), que "
"estás modificando el valor de una variable en el ámbito exterior."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:178
msgid ""
"You can do a similar thing in a nested scope using the :keyword:`nonlocal` "
"keyword:"
msgstr ""
"Puedes hacer algo similar en un ámbito anidado utilizando la palabra clave :"
"keyword:`nonlocal` "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:195
msgid "What are the rules for local and global variables in Python?"
msgstr "¿Cuáles son las reglas para variables locales y globales en Python?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:197
msgid ""
"In Python, variables that are only referenced inside a function are "
"implicitly global.  If a variable is assigned a value anywhere within the "
"function's body, it's assumed to be a local unless explicitly declared as "
"global."
msgstr ""
"En Python, las variables que dentro de una función solo son referenciadas "
"son implícitamente globales. Si se asigna un valor a una variable en "
"cualquier lugar dentro del cuerpo de la función, se asume que es local a no "
"ser que se declare como global explícitamente."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:201
msgid ""
"Though a bit surprising at first, a moment's consideration explains this.  "
"On one hand, requiring :keyword:`global` for assigned variables provides a "
"bar against unintended side-effects.  On the other hand, if ``global`` was "
"required for all global references, you'd be using ``global`` all the time.  "
"You'd have to declare as global every reference to a built-in function or to "
"a component of an imported module.  This clutter would defeat the usefulness "
"of the ``global`` declaration for identifying side-effects."
msgstr ""
"Aunque sea un poco sorprendente en un principio, se puede explicar con un "
"momento de consideración. Por un lado, requerir :keyword:`global` para "
"variables asignadas proporciona una barrera contra efectos colaterales "
"indeseados. Por otro lado, si ``global`` fuese necesario para todas las "
"referencias globales, sería necesario utilizar ``global`` todo el tiempo. "
"Habría que declarar como global cada referencia a una función interna o a un "
"componente de un módulo importado. Este impedimento destruiría la utilidad "
"de la declaración ``global`` para identificar efectos colaterales."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:211
msgid ""
"Why do lambdas defined in a loop with different values all return the same "
"result?"
msgstr ""
"¿Por qué todas las expresiones lambda definidas en un bucle con diferentes "
"valores devuelven el mismo resultado?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:213
msgid ""
"Assume you use a for loop to define a few different lambdas (or even plain "
"functions), e.g.::"
msgstr ""
"Asumimos que utilizas un bucle for para definir unas cuantas expresiones "
"lambda diferentes (o incluso funciones planas),\n"
"por ej.::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:220
msgid ""
"This gives you a list that contains 5 lambdas that calculate ``x**2``.  You "
"might expect that, when called, they would return, respectively, ``0``, "
"``1``, ``4``, ``9``, and ``16``.  However, when you actually try you will "
"see that they all return ``16``::"
msgstr ""
"Esto te proporciona una lista que contiene 5 expresiones lambda que calculan "
"``x**2``. Podemos esperar que, cuando se llaman, devolverán respectivamente, "
"``0``, ``1``, ``4``, ``9``, y ``16``. De todos modos, cuando lo intentes, "
"verás que todas devuelven ``16``::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:230
msgid ""
"This happens because ``x`` is not local to the lambdas, but is defined in "
"the outer scope, and it is accessed when the lambda is called --- not when "
"it is defined.  At the end of the loop, the value of ``x`` is ``4``, so all "
"the functions now return ``4**2``, i.e. ``16``.  You can also verify this by "
"changing the value of ``x`` and see how the results of the lambdas change::"
msgstr ""
"Esto sucede porque ``x`` no es local para las expresiones lambda, pero está "
"definida en el ámbito externo, y se accede a ella cuando se llama a una "
"expresión lambda --- no cuando está definida. Al final del bucle, el valor "
"de ``x```es ``4``, de modo que todas las funciones ahora devuelven ``4**2``, "
"por ej. ``16``. También puedes verificar esto cambiando el valor de ``x`` y "
"viendo los resultados de la modificación de las expresiones lambda::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:240
msgid ""
"In order to avoid this, you need to save the values in variables local to "
"the lambdas, so that they don't rely on the value of the global ``x``::"
msgstr ""
"Para evitar esto, necesitas guardar los valores en variables locales a las "
"expresiones lambda, de modo que no dependan del valor del ``x`` global::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:247
msgid ""
"Here, ``n=x`` creates a new variable ``n`` local to the lambda and computed "
"when the lambda is defined so that it has the same value that ``x`` had at "
"that point in the loop.  This means that the value of ``n`` will be ``0`` in "
"the first lambda, ``1`` in the second, ``2`` in the third, and so on. "
"Therefore each lambda will now return the correct result::"
msgstr ""
"Aquí, ``n=x`` crea una nueva variable ``n``, local para la expresión lambda "
"y calculada cuando se define la expresión lambda, de modo que contiene el "
"mismo valor que ``x``  tenía en ese punto del bucle. Esto significa que el "
"valor de ``n`` será ``0`` en la primera expresión lambda,  ``1`` en la "
"segunda,  ``2`` en la tercera, y así sucesivamente. Por tanto, cada "
"expresión lambda devolverá ahora el resultado correcto::   "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:258
msgid ""
"Note that this behaviour is not peculiar to lambdas, but applies to regular "
"functions too."
msgstr ""
"Cabe destacar que este comportamiento no es solo especial para lambdas, si "
"no que también se aplica a funciones normales."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:263
msgid "How do I share global variables across modules?"
msgstr "¿Cómo comparto variables globales entre módulos?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:265
msgid ""
"The canonical way to share information across modules within a single "
"program is to create a special module (often called config or cfg).  Just "
"import the config module in all modules of your application; the module then "
"becomes available as a global name.  Because there is only one instance of "
"each module, any changes made to the module object get reflected "
"everywhere.  For example:"
msgstr ""
"La forma oficial para compartir información entre módulos de un mismo "
"programa es crear un módulo especial (normalmente llamado config o cfg). "
"Simplemente hay que importar el módulo de configuración en todos los módulos "
"de la aplicación; el módulo entonces quedará disponible como un nombre "
"global. Como solo hay una instancia de cada módulo, cualquier cambio hecho "
"al objeto del módulo quedará reflejado en todas partes. Por ejemplo:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:271
msgid "config.py::"
msgstr "config.py::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:275
msgid "mod.py::"
msgstr "mod.py::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:280
msgid "main.py::"
msgstr "main.py::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:286
msgid ""
"Note that using a module is also the basis for implementing the Singleton "
"design pattern, for the same reason."
msgstr ""
"Cabe destacar que utilizar un módulo es también la base para implementar el "
"patrón de diseño Singleton, por el mismo motivo."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:291
msgid "What are the \"best practices\" for using import in a module?"
msgstr ""
"¿Cuáles son las \"mejores prácticas\" para utilizar \"import\" en un módulo?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:293
msgid ""
"In general, don't use ``from modulename import *``.  Doing so clutters the "
"importer's namespace, and makes it much harder for linters to detect "
"undefined names."
msgstr ""
"En general, no utilices ``from modulename import *``. Haciendo esto ponemos "
"patas arriba el espacio de nombres del importador, y hacemos más complicado "
"para los \"linters\" detectar nombres no definidos."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:297
msgid ""
"Import modules at the top of a file.  Doing so makes it clear what other "
"modules your code requires and avoids questions of whether the module name "
"is in scope. Using one import per line makes it easy to add and delete "
"module imports, but using multiple imports per line uses less screen space."
msgstr ""
"Importa los módulos en la cabecera de un archivo. Haciendo esto dejamos "
"claro que otros módulos requiere tu código y evita preguntas sobre cual es "
"el nombre del módulo en el ámbito. Utilizar un sólo import por línea hace "
"fácil añadir y borrar imports de módulos, pero usar múltiples imports por "
"línea utiliza menos espacio de pantalla."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:302
msgid "It's good practice if you import modules in the following order:"
msgstr "Es una buena práctica importar los módulos en el siguiente orden:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:304
msgid "standard library modules -- e.g. ``sys``, ``os``, ``getopt``, ``re``"
msgstr ""
"módulos de librerías estándar -- por ej.: ``sys``, ``os``, ``getopt``, ``re``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:305
msgid ""
"third-party library modules (anything installed in Python's site-packages "
"directory) -- e.g. mx.DateTime, ZODB, PIL.Image, etc."
msgstr ""
"módulos de librerías de terceras-partes (cualquier paquete instalado en el "
"directorio de paquetes de Python) -- por ej.: mx.DateTime, ZODB, PIL.Image, "
"etc."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:307
msgid "locally-developed modules"
msgstr "módulos desarollados localmente"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:309
msgid ""
"It is sometimes necessary to move imports to a function or class to avoid "
"problems with circular imports.  Gordon McMillan says:"
msgstr ""
"A veces resulta necesario mover los imports a una función o clase para "
"evitar problemas con imports circulares. Gordon McMillan dice:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:312
msgid ""
"Circular imports are fine where both modules use the \"import <module>\" "
"form of import.  They fail when the 2nd module wants to grab a name out of "
"the first (\"from module import name\") and the import is at the top level.  "
"That's because names in the 1st are not yet available, because the first "
"module is busy importing the 2nd."
msgstr ""
"Los imports circulares están bien cuando ambos módulos utilizan la forma "
"\"import<module>\" del import. Fallan cuando el segundo módulo quiere coger "
"un nombre del primero (\"from module import name\") y el import está en el "
"nivel superior. Esto sucede porque los nombres en el primer import no están "
"todavía disponibles, porque está aún ocupado importando el segundo módulo."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:318
msgid ""
"In this case, if the second module is only used in one function, then the "
"import can easily be moved into that function.  By the time the import is "
"called, the first module will have finished initializing, and the second "
"module can do its import."
msgstr ""
"En este caso, si el segundo módulo es utilizado únicamente en una función, "
"entonces el import puede ser movido fácilmente dentro de esa función. "
"Mientras se llama al import, el primer módulo habrá finalizado su "
"inicialización, y el segundo módulo puede realizar su import sin problemas."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:323
msgid ""
"It may also be necessary to move imports out of the top level of code if "
"some of the modules are platform-specific.  In that case, it may not even be "
"possible to import all of the modules at the top of the file.  In this case, "
"importing the correct modules in the corresponding platform-specific code is "
"a good option."
msgstr ""
"Puede ser necesario mover imports fuera del nivel superior de código si "
"alguno de los módulos son específicos de plataforma. En ese caso, puede no "
"ser posible importar todos los módulos en la cabecera del archivo. En este "
"caso, importar los módulos correctos en el código correspondiente a la "
"plataforma específica es una buena opción."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:328
msgid ""
"Only move imports into a local scope, such as inside a function definition, "
"if it's necessary to solve a problem such as avoiding a circular import or "
"are trying to reduce the initialization time of a module.  This technique is "
"especially helpful if many of the imports are unnecessary depending on how "
"the program executes.  You may also want to move imports into a function if "
"the modules are only ever used in that function.  Note that loading a module "
"the first time may be expensive because of the one time initialization of "
"the module, but loading a module multiple times is virtually free, costing "
"only a couple of dictionary lookups.  Even if the module name has gone out "
"of scope, the module is probably available in :data:`sys.modules`."
msgstr ""
"Mueve solo los imports a un ámbito local, como por ejemplo dentro de una "
"definición de función, si es preciso solucionar un problema como evitar un "
"import circular o estás intentando reducir el tiempo de inicialización de un "
"módulo. Esta técnica es especialmente de ayuda si varios de los imports son "
"innecesarios dependiendo de como se ejecute el programa. También puedes "
"querer mover los imports dentro de una función si los módulos son únicamente "
"usados en esa función. Fíjate que cargar un módulo por primera vez puede "
"salir caro debido al tiempo de iniciación del módulo, pero cargar un módulo "
"múltiples veces, es virtualmente gratis, ya que sólo cuesta unas cuantas "
"búsquedas de diccionario. Incluso si el nombre del módulo se ha ido fuera "
"del ámbito, el módulo está disponible probablemente en :data:`sys.modules`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:341
msgid "Why are default values shared between objects?"
msgstr "¿Por qué se comparten los valores por defecto entre objetos?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:343
msgid ""
"This type of bug commonly bites neophyte programmers.  Consider this "
"function::"
msgstr ""
"Este tipo de bug, les sucede normalmente a los programadores neófitos. "
"Considera esta función::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:350
msgid ""
"The first time you call this function, ``mydict`` contains a single item.  "
"The second time, ``mydict`` contains two items because when ``foo()`` begins "
"executing, ``mydict`` starts out with an item already in it."
msgstr ""
"La primera vez que llamas a esta función, ``mydict`` contiene un único "
"elemento. La segunda vez ``mydict`` contiene dos elementos porque cuando "
"``foo()`` comienza a ejecutarse, ``mydict`` comienza con un elemento ya en "
"su interior."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:354
msgid ""
"It is often expected that a function call creates new objects for default "
"values. This is not what happens. Default values are created exactly once, "
"when the function is defined.  If that object is changed, like the "
"dictionary in this example, subsequent calls to the function will refer to "
"this changed object."
msgstr ""
"Se espera que una función de llamada cree nuevos objetos para los valores "
"por defecto. Esto no es lo que sucede. Los valores por defecto son creados "
"exactamente una vez, cuando la función se define. Si el objeto es "
"modificado, como el diccionario en este ejemplo, las siguientes llamadas a "
"la función se referirán a este objeto modificado."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:359
msgid ""
"By definition, immutable objects such as numbers, strings, tuples, and "
"``None``, are safe from change. Changes to mutable objects such as "
"dictionaries, lists, and class instances can lead to confusion."
msgstr ""
"Por definición, los objetos inmutables como los números, strings, tuplas, y "
"``None``, están a salvo de ser modificados. Las modificaciones a los objetos "
"mutables como diccionarios, listas e instancias de clases pueden llevar a "
"confusión."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:363
msgid ""
"Because of this feature, it is good programming practice to not use mutable "
"objects as default values.  Instead, use ``None`` as the default value and "
"inside the function, check if the parameter is ``None`` and create a new "
"list/dictionary/whatever if it is.  For example, don't write::"
msgstr ""
"Debido a esta característica, es una buena práctica de programación no "
"utilizar objetos mutables como valores por defecto. En su lugar, utiliza "
"``None`` como valor por defecto dentro de una función, comprueba si el "
"parámetro es ``None`` y crea una nueva lista/diccionario/lo que sea si debe "
"ser. Por ejemplo, no escribas::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:371
msgid "but::"
msgstr "but::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:377
msgid ""
"This feature can be useful.  When you have a function that's time-consuming "
"to compute, a common technique is to cache the parameters and the resulting "
"value of each call to the function, and return the cached value if the same "
"value is requested again.  This is called \"memoizing\", and can be "
"implemented like this::"
msgstr ""
"Esta característica puede ser útil. Cuando tienes una función que consume "
"mucho tiempo de ejecución, una técnica habitual es dejar en cache los "
"parámetros y el valor resultante de cada llamada a la función, y devuelve el "
"valor en cache si el mismo valor es peticionado de nuevo. A esto se le llama "
"\"memoizing\", y puede ser implementado del siguiente modo::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:392
msgid ""
"You could use a global variable containing a dictionary instead of the "
"default value; it's a matter of taste."
msgstr ""
"Puedes utilizar una variable global que contenga un diccionario en lugar del "
"valor por defecto; cuestión de gustos."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:397
msgid ""
"How can I pass optional or keyword parameters from one function to another?"
msgstr ""
"¿Como puedo pasar parámetros opcionales o de palabras clave de una función a "
"otra?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:399
msgid ""
"Collect the arguments using the ``*`` and ``**`` specifiers in the "
"function's parameter list; this gives you the positional arguments as a "
"tuple and the keyword arguments as a dictionary.  You can then pass these "
"arguments when calling another function by using ``*`` and ``**``::"
msgstr ""
"Recoge los argumentos utilizando los especificadores ``*`` y ``**`` en la "
"lista de parámetros de la función; esto te da los argumentos posicionados, "
"como una tupla y los argumentos de palabras clave como un diccionario. "
"Después podrás pasar estos argumentos cuando llames a otra función "
"utilizando ``*`` y ``**``::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:418
msgid "What is the difference between arguments and parameters?"
msgstr "¿Cual es la diferencia entre argumentos y parámetros?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:420
msgid ""
":term:`Parameters <parameter>` are defined by the names that appear in a "
"function definition, whereas :term:`arguments <argument>` are the values "
"actually passed to a function when calling it.  Parameters define what types "
"of arguments a function can accept.  For example, given the function "
"definition::"
msgstr ""
"Los :term:`Parámetros <parameter>` son definidos por los nombres que "
"aparecen en la definición de una función, donde los :term:`argumentos "
"<argument>` son valores que actualmente se le pasan a una función cuando los "
"llamamos. Los parámetros definen qué tipo de argumentos puede aceptar una "
"función. Por ejemplo, dada la función de una definición::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:428
msgid ""
"*foo*, *bar* and *kwargs* are parameters of ``func``.  However, when calling "
"``func``, for example::"
msgstr ""
"*foo*, *bar* y *kwargs* son parámetros de ``func``. Cuando llamamos a "
"``func``, por ejemplo::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:433
msgid "the values ``42``, ``314``, and ``somevar`` are arguments."
msgstr "los valores ``42``, ``314``, y ``somevar`` son argumentos."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:437
msgid "Why did changing list 'y' also change list 'x'?"
msgstr "¿Por qué cambiando la lista 'y' también se cambia la lista 'x'?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:439
msgid "If you wrote code like::"
msgstr "Si has escrito el código así::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:449
msgid ""
"you might be wondering why appending an element to ``y`` changed ``x`` too."
msgstr ""
"puedes estar pensando por qué añadiendo un elemento a ``y``, también ha "
"cambiado ``x``.  "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:451
msgid "There are two factors that produce this result:"
msgstr "Existen dos factores que producen este resultado:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:453
msgid ""
"Variables are simply names that refer to objects.  Doing ``y = x`` doesn't "
"create a copy of the list -- it creates a new variable ``y`` that refers to "
"the same object ``x`` refers to.  This means that there is only one object "
"(the list), and both ``x`` and ``y`` refer to it."
msgstr ""
"Las variables son nombres simples que refieren a objetos. Haciendo ``y=x`` "
"no creas una copia de la lista -- creas una nueva variable ``y`` que refiere "
"al mismo objeto que ``x`` refiere. Esto significa que aquí sólo tienes un "
"objeto (la lista), y ambos ``x`` e ``y`` se refieren al mismo."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:457
msgid ""
"Lists are :term:`mutable`, which means that you can change their content."
msgstr ""
"Las listas son :term:`mutable` lo que significa que puedes cambiar su "
"contenido."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:459
msgid ""
"After the call to :meth:`~list.append`, the content of the mutable object "
"has changed from ``[]`` to ``[10]``.  Since both the variables refer to the "
"same object, using either name accesses the modified value ``[10]``."
msgstr ""
"Despues de llamar a :meth:`~list.append`, el contenido el objeto mutable ha "
"cambiado de ``[]`` a ``[10]``. Ambas variables refieren al mismo objeto, "
"utilizando cualquiera de los dos nombres accesamos al valor modificado "
"``[10]``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:463
msgid "If we instead assign an immutable object to ``x``::"
msgstr "Si en su lugar asignamos un objeto inmutable a ``x``::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:473
msgid ""
"we can see that in this case ``x`` and ``y`` are not equal anymore.  This is "
"because integers are :term:`immutable`, and when we do ``x = x + 1`` we are "
"not mutating the int ``5`` by incrementing its value; instead, we are "
"creating a new object (the int ``6``) and assigning it to ``x`` (that is, "
"changing which object ``x`` refers to).  After this assignment we have two "
"objects (the ints ``6`` and ``5``) and two variables that refer to them "
"(``x`` now refers to ``6`` but ``y`` still refers to ``5``)."
msgstr ""
"podemos ver que en este caso ``x`` e ``y`` ya no son iguales. Esto sucede "
"porque los enteros son  :term:`immutable`, y cuando hacemos ``x = x + 1`` no "
"estamos mutando el entero ``5`` incrementando su valor; en su lugar, estamos "
"creando un nuevo objeto (el entero ``6``) y asignándolo a ``x`` (es decir, "
"cambiando al objeto que ``x`` refiere). Despues de esta función tenemos dos "
"objetos (los enteros ``6`` y ``5`` ) y dos variables a las que se refieren "
"(``x`` ahora refiere a ``6`` pero ``y`` todavia refiere a ``5``).  "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:481
msgid ""
"Some operations (for example ``y.append(10)`` and ``y.sort()``) mutate the "
"object, whereas superficially similar operations (for example ``y = y + "
"[10]`` and ``sorted(y)``) create a new object.  In general in Python (and in "
"all cases in the standard library) a method that mutates an object will "
"return ``None`` to help avoid getting the two types of operations confused.  "
"So if you mistakenly write ``y.sort()`` thinking it will give you a sorted "
"copy of ``y``, you'll instead end up with ``None``, which will likely cause "
"your program to generate an easily diagnosed error."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:490
msgid ""
"However, there is one class of operations where the same operation sometimes "
"has different behaviors with different types:  the augmented assignment "
"operators.  For example, ``+=`` mutates lists but not tuples or ints "
"(``a_list += [1, 2, 3]`` is equivalent to ``a_list.extend([1, 2, 3])`` and "
"mutates ``a_list``, whereas ``some_tuple += (1, 2, 3)`` and ``some_int += "
"1`` create new objects)."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:497
msgid "In other words:"
msgstr "En otras palabras:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:499
msgid ""
"If we have a mutable object (:class:`list`, :class:`dict`, :class:`set`, "
"etc.), we can use some specific operations to mutate it and all the "
"variables that refer to it will see the change."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:502
msgid ""
"If we have an immutable object (:class:`str`, :class:`int`, :class:`tuple`, "
"etc.), all the variables that refer to it will always see the same value, "
"but operations that transform that value into a new value always return a "
"new object."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:507
msgid ""
"If you want to know if two variables refer to the same object or not, you "
"can use the :keyword:`is` operator, or the built-in function :func:`id`."
msgstr ""
"Si quieres saber si dos variables referencian al mismo objeto o no, puedes "
"usar el operador :keyword:`is`, o la función incorporada :func:`id`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:512
msgid "How do I write a function with output parameters (call by reference)?"
msgstr ""
"¿Como escribo una función con parámetros de salida (llamada por referencia)?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:514
msgid ""
"Remember that arguments are passed by assignment in Python.  Since "
"assignment just creates references to objects, there's no alias between an "
"argument name in the caller and callee, and so no call-by-reference per se.  "
"You can achieve the desired effect in a number of ways."
msgstr ""
"Recuerda que los argumentos se pasan por asignación en Python. Ya que la "
"función sólo crea referencias a objetos, no hay un alias entre un nombre de "
"argumento en el caller y el callee, por lo que no hay llamada-por-referencia "
"per se. Puedes lograr el efecto deseado de diversas formas."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:519
msgid "By returning a tuple of the results::"
msgstr "Retornando una tupla de los resultados::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:530
msgid "This is almost always the clearest solution."
msgstr "Esta es normalmente la solución más clara."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:532
msgid ""
"By using global variables.  This isn't thread-safe, and is not recommended."
msgstr ""
"Utilizando variables globales. Este no es un hilo seguro, y no se recomienda."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:534
msgid "By passing a mutable (changeable in-place) object::"
msgstr "Pasando un objeto mutable (modificable in-place)::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:544
msgid "By passing in a dictionary that gets mutated::"
msgstr "Pasando un diccionario que se mute::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:554
msgid "Or bundle up values in a class instance::"
msgstr "O juntar valores en una instancia de clase::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:570
msgid "There's almost never a good reason to get this complicated."
msgstr "Casi nunca hay una buena razón para hacer esto complicado."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:572
msgid "Your best choice is to return a tuple containing the multiple results."
msgstr ""
"Tu mejor elección es retornar una tupla que contenga resultados múltiples."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:576
msgid "How do you make a higher order function in Python?"
msgstr "¿Como creas una función de orden superior en Python?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:578
msgid ""
"You have two choices: you can use nested scopes or you can use callable "
"objects. For example, suppose you wanted to define ``linear(a,b)`` which "
"returns a function ``f(x)`` that computes the value ``a*x+b``.  Using nested "
"scopes::"
msgstr ""
"Tienes dos elecciones: puedes utilizar ámbitos anidados, o puedes utilizar "
"objetos a los que llamar. Por ejemplo, supón que buscas definir ``linear(a,"
"b)`` que devuelve una función ``f(x)`` que computa el valor ``a*x+b``. "
"Utilizando ámbitos anidados:: "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:587
msgid "Or using a callable object::"
msgstr "O utilizando un objeto al que llamar::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:597
msgid "In both cases, ::"
msgstr "En ambos casos, ::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:601
msgid "gives a callable object where ``taxes(10e6) == 0.3 * 10e6 + 2``."
msgstr "tenemos objeto al que llamar donde ``taxes(10e6) == 0.3 * 10e6 + 2``. "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:603
msgid ""
"The callable object approach has the disadvantage that it is a bit slower "
"and results in slightly longer code.  However, note that a collection of "
"callables can share their signature via inheritance::"
msgstr ""
"La visión del objeto al que llamar tiene la desventaja que es un poco más "
"lenta y resulta en un código más largo. De todos modos, fíjate que una "
"colección de objetos a los que llamar pueden compartir su marca (signature) "
"mediante herencia::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:612
msgid "Object can encapsulate state for several methods::"
msgstr "Los objetos pueden encapsular el estado por diferentes vías::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:630
msgid ""
"Here ``inc()``, ``dec()`` and ``reset()`` act like functions which share the "
"same counting variable."
msgstr ""
"Aquí ``inc()``, ``dec()`` y``reset()`` actúan como funciones las cuales "
"comparten la misma variable."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:635
msgid "How do I copy an object in Python?"
msgstr "¿Cómo copio un objeto en Python?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:637
msgid ""
"In general, try :func:`copy.copy` or :func:`copy.deepcopy` for the general "
"case. Not all objects can be copied, but most can."
msgstr ""
"En general, puedes intentar :func:`copy.copy` or :func:`copy.deepcopy`. No "
"todos los objetos pueden ser copiados, pero sí la gran mayoría."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:640
msgid ""
"Some objects can be copied more easily.  Dictionaries have a :meth:`~dict."
"copy` method::"
msgstr ""
"Algunos objetos pueden ser copiados más facilmente. Los diccionarios tienen "
"un método  :meth:`~dict.copy`::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:645
msgid "Sequences can be copied by slicing::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:651
msgid "How can I find the methods or attributes of an object?"
msgstr "¿Cómo puedo encontrar los métodos o atributos de un objeto?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:653
msgid ""
"For an instance x of a user-defined class, ``dir(x)`` returns an "
"alphabetized list of the names containing the instance attributes and "
"methods and attributes defined by its class."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:659
msgid "How can my code discover the name of an object?"
msgstr "¿Como puede mi código descubrir el nombre de un objeto?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:661
msgid ""
"Generally speaking, it can't, because objects don't really have names. "
"Essentially, assignment always binds a name to a value; the same is true of "
"``def`` and ``class`` statements, but in that case the value is a callable. "
"Consider the following code::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:677
msgid ""
"Arguably the class has a name: even though it is bound to two names and "
"invoked through the name B the created instance is still reported as an "
"instance of class A.  However, it is impossible to say whether the "
"instance's name is a or b, since both names are bound to the same value."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:682
msgid ""
"Generally speaking it should not be necessary for your code to \"know the "
"names\" of particular values. Unless you are deliberately writing "
"introspective programs, this is usually an indication that a change of "
"approach might be beneficial."
msgstr ""
"Hablando generalmente no debería ser necesario para tu código \"conocer los "
"nombres\" de valores en particular. A menos que deliberadamente estés "
"escribiendo programas introspectivos, normalmente es un indicador de que un "
"cambio de visión sobre el código puede ser beneficioso."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:687
msgid ""
"In comp.lang.python, Fredrik Lundh once gave an excellent analogy in answer "
"to this question:"
msgstr ""
"En comp.lang.python, Fredrik Lundh proporciona una excelente analogía en "
"respuesta a esta cuestión:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:690
msgid ""
"The same way as you get the name of that cat you found on your porch: the "
"cat (object) itself cannot tell you its name, and it doesn't really care -- "
"so the only way to find out what it's called is to ask all your neighbours "
"(namespaces) if it's their cat (object)..."
msgstr ""
"De la misma forma que quieres conocer el nombre de ese gato que te has "
"encontrado en el porche: el gato (objeto) en sí, no te puede decir su nombre "
"y a él no le preocupa lo mas mínimo -- así que la única forma de averiguar "
"como se llama es preguntarle a tus vecinos (namespaces) si es su gato "
"(objeto)."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:695
msgid ""
"....and don't be surprised if you'll find that it's known by many names, or "
"no name at all!"
msgstr ""
"...¡y no te sorprendas si lo que encuentras se conoce por muchos nombres, o "
"por ninguno en absoluto!"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:700
msgid "What's up with the comma operator's precedence?"
msgstr "¿Que pasa con la precedencia del operador 'coma'?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:702
msgid "Comma is not an operator in Python.  Consider this session::"
msgstr "La coma no es un operador en Python. Considera esta sesión::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:707
msgid ""
"Since the comma is not an operator, but a separator between expressions the "
"above is evaluated as if you had entered::"
msgstr ""
"La coma no es un operador, pero si un separador entre expresiones que es "
"evaluado como si hubieras insertado::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:712
msgid "not::"
msgstr "no::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:716
msgid ""
"The same is true of the various assignment operators (``=``, ``+=`` etc).  "
"They are not truly operators but syntactic delimiters in assignment "
"statements."
msgstr ""
"Lo mismo se aplica para varios operadores de asignación (``=``, ``+=`` etc). "
"No son operadores realmente, pero sí delimitadores sintácticos en "
"declaraciones de asignación."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:721
msgid "Is there an equivalent of C's \"?:\" ternary operator?"
msgstr "¿Existe algún equivalente al operador ternario \"?:\" de C?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:723
msgid "Yes, there is. The syntax is as follows::"
msgstr "Si, lo hay. La sintaxis es la siguiente::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:730
msgid ""
"Before this syntax was introduced in Python 2.5, a common idiom was to use "
"logical operators::"
msgstr ""
"Antes de que la sintaxis fuera introducida en Pytho 2.5, un idioma comun era "
"utilizar operadores lógicos::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:735
msgid ""
"However, this idiom is unsafe, as it can give wrong results when *on_true* "
"has a false boolean value.  Therefore, it is always better to use the ``... "
"if ... else ...`` form."
msgstr ""
"Como sea, este idioma no es seguro, ya que puede devolver resultados "
"erroneos cuando *on_true* tiene un valor booleano falso. Por lo tanto, "
"siempre es mejor  utilizar la forma ``... if ... else ...`` ."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:741
msgid "Is it possible to write obfuscated one-liners in Python?"
msgstr "¿Es posible escribir complicados comentarios en Python?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:743
msgid ""
"Yes.  Usually this is done by nesting :keyword:`lambda` within :keyword:`!"
"lambda`.  See the following three examples, due to Ulf Bartelt::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:770
msgid "Don't try this at home, kids!"
msgstr "¡No intentéis esto en casa, niños!"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:776
msgid "What does the slash(/) in the parameter list of a function mean?"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:778
msgid ""
"A slash in the argument list of a function denotes that the parameters prior "
"to it are positional-only.  Positional-only parameters are the ones without "
"an externally-usable name.  Upon calling a function that accepts positional-"
"only parameters, arguments are mapped to parameters based solely on their "
"position. For example, :func:`pow` is a function that accepts positional-"
"only parameters. Its documentation looks like this::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:794
msgid ""
"The slash at the end of the parameter list means that all three parameters "
"are positional-only. Thus, calling :func:`pow` with keyword aguments would "
"lead to an error::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:803
msgid ""
"Note that as of this writing this is only documentational and no valid "
"syntax in Python, although there is :pep:`570`, which proposes a syntax for "
"position-only parameters in Python."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:809
msgid "Numbers and strings"
msgstr "Numeros y strings"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:812
msgid "How do I specify hexadecimal and octal integers?"
msgstr "¿Como especifico enteros octales y hexadecimales?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:814
msgid ""
"To specify an octal digit, precede the octal value with a zero, and then a "
"lower or uppercase \"o\".  For example, to set the variable \"a\" to the "
"octal value \"10\" (8 in decimal), type::"
msgstr ""
"Para especificar un dígito octal, precede al valor octal con un cero, y "
"después una minúscula o mayúscula \"o\". Por ejemplo, para establecer la "
"variable \"a\" al valor octal \"10\" (8 en decimal), escribe::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:822
msgid ""
"Hexadecimal is just as easy.  Simply precede the hexadecimal number with a "
"zero, and then a lower or uppercase \"x\".  Hexadecimal digits can be "
"specified in lower or uppercase.  For example, in the Python interpreter::"
msgstr ""
"Los hexadecimales son simples. Simplemente precede al número hexadecimal con "
"un cero, y tras ello una minúscula o mayúscula \"x\". Los dígitos "
"hexadecimales pueden ser especificados en minúsculas o mayúsculas. Por "
"ejemplo, en el intérprete Python::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:835
msgid "Why does -22 // 10 return -3?"
msgstr "¿Por qué -22 // 10 devueve -3?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:837
msgid ""
"It's primarily driven by the desire that ``i % j`` have the same sign as "
"``j``. If you want that, and also want::"
msgstr ""
"Está principalmente conducido por el deseo de que ``i % j`` tienen el mismo "
"signo que ``j``. Si quieres eso, y también quieres::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:842
msgid ""
"then integer division has to return the floor.  C also requires that "
"identity to hold, and then compilers that truncate ``i // j`` need to make "
"``i % j`` have the same sign as ``i``."
msgstr ""
"entoces la división entera tiene que devolver el número mínimo. C también "
"requiere mantener esta identidad así que los compiladores que truncan ``ì // "
"j`` necesitan hacer que ``i % j`` tenga el mismo signo que ``i``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:846
msgid ""
"There are few real use cases for ``i % j`` when ``j`` is negative.  When "
"``j`` is positive, there are many, and in virtually all of them it's more "
"useful for ``i % j`` to be ``>= 0``.  If the clock says 10 now, what did it "
"say 200 hours ago?  ``-190 % 12 == 2`` is useful; ``-190 % 12 == -10`` is a "
"bug waiting to bite."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:854
msgid "How do I convert a string to a number?"
msgstr "¿Cómo convierto un string en un número?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:856
msgid ""
"For integers, use the built-in :func:`int` type constructor, e.g. "
"``int('144') == 144``.  Similarly, :func:`float` converts to floating-point, "
"e.g. ``float('144') == 144.0``."
msgstr ""
"Para los enteros, utiliza el constructor de tipo interno ::func:`int`, por "
"ej. ``int('144') == 144``. De forma similar, :func:`float` convierte a punto-"
"flotante, por ej. ``float('144') == 144.0``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:860
msgid ""
"By default, these interpret the number as decimal, so that ``int('0144') == "
"144`` and ``int('0x144')`` raises :exc:`ValueError`. ``int(string, base)`` "
"takes the base to convert from as a second optional argument, so "
"``int('0x144', 16) == 324``.  If the base is specified as 0, the number is "
"interpreted using Python's rules: a leading '0o' indicates octal, and '0x' "
"indicates a hex number."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:866
msgid ""
"Do not use the built-in function :func:`eval` if all you need is to convert "
"strings to numbers.  :func:`eval` will be significantly slower and it "
"presents a security risk: someone could pass you a Python expression that "
"might have unwanted side effects.  For example, someone could pass "
"``__import__('os').system(\"rm -rf $HOME\")`` which would erase your home "
"directory."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:873
msgid ""
":func:`eval` also has the effect of interpreting numbers as Python "
"expressions, so that e.g. ``eval('09')`` gives a syntax error because Python "
"does not allow leading '0' in a decimal number (except '0')."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:879
msgid "How do I convert a number to a string?"
msgstr "¿Cómo convierto un número en un string?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:881
msgid ""
"To convert, e.g., the number 144 to the string '144', use the built-in type "
"constructor :func:`str`.  If you want a hexadecimal or octal representation, "
"use the built-in functions :func:`hex` or :func:`oct`.  For fancy "
"formatting, see the :ref:`f-strings` and :ref:`formatstrings` sections, e.g. "
"``\"{:04d}\".format(144)`` yields ``'0144'`` and ``\"{:.3f}\"."
"format(1.0/3.0)`` yields ``'0.333'``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:890
msgid "How do I modify a string in place?"
msgstr "¿Cómo modifico un string in-place?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:892
msgid ""
"You can't, because strings are immutable.  In most situations, you should "
"simply construct a new string from the various parts you want to assemble it "
"from.  However, if you need an object with the ability to modify in-place "
"unicode data, try using an :class:`io.StringIO` object or the :mod:`array` "
"module::"
msgstr ""
"No puedes, porque los strings son inmutables. En muchas situaciones, "
"simplemente debes construir un nuevo string de las varias partes desde las "
"que lo quieres ensamblar. De todos modos, si necesitas un objeto con la "
"habilidad de modificar datos unicode in-place, trata de utilizar un objeto :"
"class:`io.StringIO` o el módulo :mod:`array`::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:922
msgid "How do I use strings to call functions/methods?"
msgstr "¿Cómo utilizo strings para llamar a funciones/métodos?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:924
msgid "There are various techniques."
msgstr "Existen varias técnicas."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:926
msgid ""
"The best is to use a dictionary that maps strings to functions.  The primary "
"advantage of this technique is that the strings do not need to match the "
"names of the functions.  This is also the primary technique used to emulate "
"a case construct::"
msgstr ""
"La mejor es utilizar un diccionaro que mapea strings a las funciones. La "
"ventaja principal de esta técnica es que los strings no necesitan tener el "
"mismo nombre que las funciones. Esto también es una técnica principalmente "
"utilizada para emular un constructor de casos::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:941
msgid "Use the built-in function :func:`getattr`::"
msgstr "Utiliza la función interna :func:`getattr`::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:946
msgid ""
"Note that :func:`getattr` works on any object, including classes, class "
"instances, modules, and so on."
msgstr ""
"Fíjate que :func:`getattr` funciona con cualquier objeto, incluyendo clases, "
"instancias de clase, módulos, etc."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:949
msgid "This is used in several places in the standard library, like this::"
msgstr ""
"Se utiliza en diferentes lugares de la librería estándar, tal que así::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:962
msgid "Use :func:`locals` or :func:`eval` to resolve the function name::"
msgstr ""
"Utiliza :func:`locals` o :func:`eval` para recabar el nombre de la función::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:975
msgid ""
"Note: Using :func:`eval` is slow and dangerous.  If you don't have absolute "
"control over the contents of the string, someone could pass a string that "
"resulted in an arbitrary function being executed."
msgstr ""
"Nota: Utilizarr :func:`eval` es lento y peligroso. Si no tienes control "
"absoluto sobre los contenidos del string, alguien podría pasarle un string "
"que podría resultar en'la ejecución de una función arbitraria."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:980
msgid ""
"Is there an equivalent to Perl's chomp() for removing trailing newlines from "
"strings?"
msgstr ""
"¿Existe un equivalente a chomp() de Perl, para eliminar operadores de nueva "
"linea de los strings?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:982
msgid ""
"You can use ``S.rstrip(\"\\r\\n\")`` to remove all occurrences of any line "
"terminator from the end of the string ``S`` without removing other trailing "
"whitespace.  If the string ``S`` represents more than one line, with several "
"empty lines at the end, the line terminators for all the blank lines will be "
"removed::"
msgstr ""
"Puedes utilizar ``S.rstrip(\"\\r\\n\")` para eliminar todas las ocurrencias "
"de cualquier finalizador de linea del string ``S`` sin eliminar otros "
"generadores de espacios en blanco. Si el string ``S`` se representa en más "
"de una línea, con varias líneas vacías al final, los finalizadores de línea "
"de todas esas líneas en blanco serán eliminados::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:994
msgid ""
"Since this is typically only desired when reading text one line at a time, "
"using ``S.rstrip()`` this way works well."
msgstr ""
"Ya que es normal que sólo se desee cuando leemos, una línea de texto cada "
"vez, utilizar ``S.rstrip()`` funciona perfectamente."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:999
msgid "Is there a scanf() or sscanf() equivalent?"
msgstr "¿Existe algún equivalente a scanf() o sscanf()?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1001
msgid "Not as such."
msgstr "Nope."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1003
msgid ""
"For simple input parsing, the easiest approach is usually to split the line "
"into whitespace-delimited words using the :meth:`~str.split` method of "
"string objects and then convert decimal strings to numeric values using :"
"func:`int` or :func:`float`.  ``split()`` supports an optional \"sep\" "
"parameter which is useful if the line uses something other than whitespace "
"as a separator."
msgstr ""
"Para el análisis sintáctico de entradas, el acercamiento más simple es "
"normalmente dividir la linea en palabras delimitadas por espacios en blanco "
"utilizando el método :meth:`~str.split` de los objetos string y después "
"convertir los strings decimales en valores numéricos utilizando :func:`int` "
"o :func:`float`. ``split()`` soporta un parámetro \"sep\" opcional el cual "
"es útil si la línea utiliza algo más que un espacio en blanco como separador."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1009
msgid ""
"For more complicated input parsing, regular expressions are more powerful "
"than C's :c:func:`sscanf` and better suited for the task."
msgstr ""
"Para un análisis sintáctico de entradas más complejo, las expresiones "
"regulares son mucho más potentes que las funciones de C :c:func:`sscanf` y "
"más apropiadas para la tarea."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1014
msgid "What does 'UnicodeDecodeError' or 'UnicodeEncodeError' error  mean?"
msgstr "¿Qué significa 'UnicodeDecodeError' o 'UnicodeEncodeError'?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1016
msgid "See the :ref:`unicode-howto`."
msgstr "Ver :ref:`unicode-howto`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1020
msgid "Performance"
msgstr "Rendimiento"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1023
msgid "My program is too slow. How do I speed it up?"
msgstr "Mi programa es muy lento. ¿Como puedo acelerarlo?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1025
msgid ""
"That's a tough one, in general.  First, here are a list of things to "
"remember before diving further:"
msgstr ""
"Esta es dura, en general. Primero, aquí tienes una lista de cosas a recordar "
"antes de meterse en ello más a fondo:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1028
msgid ""
"Performance characteristics vary across Python implementations.  This FAQ "
"focuses on :term:`CPython`."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1030
msgid ""
"Behaviour can vary across operating systems, especially when talking about I/"
"O or multi-threading."
msgstr ""
"El comportamiento puede variar entre sistemas operativos, especialmente "
"cuando hablamos de I/O o multi-threading."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1032
msgid ""
"You should always find the hot spots in your program *before* attempting to "
"optimize any code (see the :mod:`profile` module)."
msgstr ""
"Deberías encontrar siempre los puntos \"calientes\" de tu programa *antes* "
"de intentar optimizar ningún código (ver el módulo :mod:`profile`)."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1034
msgid ""
"Writing benchmark scripts will allow you to iterate quickly when searching "
"for improvements (see the :mod:`timeit` module)."
msgstr ""
"Escribir scripts de testeo te permitirán iterar rápidamente cuando estemos "
"tratando de realizar mejoras (ver el módulo :mod:`timeit`)."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1036
msgid ""
"It is highly recommended to have good code coverage (through unit testing or "
"any other technique) before potentially introducing regressions hidden in "
"sophisticated optimizations."
msgstr ""
"Se recomienda encarecidamente tener bien cubierto el código (a través del "
"testeo unitario o cualquier otra técnica) antes de introducir potencialmente "
"regresiones escondidas en optimizaciones sofisticadas."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1040
msgid ""
"That being said, there are many tricks to speed up Python code.  Here are "
"some general principles which go a long way towards reaching acceptable "
"performance levels:"
msgstr ""
"Dicho esto, existen unos cuantos trucos para acelerar la codificación en "
"Python. Aquí dispones de algunos principios generales de un largo camino "
"hacia el alcance de niveles óptimos de rendimiento:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1044
msgid ""
"Making your algorithms faster (or changing to faster ones) can yield much "
"larger benefits than trying to sprinkle micro-optimization tricks all over "
"your code."
msgstr ""
"Hacer tus algoritmos más veloces (o cambiarlos hacia otros más veloces) "
"puede conllevar mayores beneficios que intentar repartir trucos de micro-"
"optimización a lo largo de tu código."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1048
msgid ""
"Use the right data structures.  Study documentation for the :ref:`bltin-"
"types` and the :mod:`collections` module."
msgstr ""
"Utiliza estructuras de datos s correctas. Estudia la documentación para los :"
"ref:`bltin-types` y el módulo de :mod:`collections`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1051
msgid ""
"When the standard library provides a primitive for doing something, it is "
"likely (although not guaranteed) to be faster than any alternative you may "
"come up with.  This is doubly true for primitives written in C, such as "
"builtins and some extension types.  For example, be sure to use either the :"
"meth:`list.sort` built-in method or the related :func:`sorted` function to "
"do sorting (and see the :ref:`sortinghowto` for examples of moderately "
"advanced usage)."
msgstr ""
"Cuando la librería estándar proporciona un primitivo para hacer algo, es "
"para proporcionar casi siempre una alternativa más rápida para ti. Esto es "
"un true doble para los primitivos C, tales como integrados y algunos tipos "
"de extensión. Por ejemplo, asegúrate de utilizar el método integrado :meth:"
"`list.sort` o la función relacionada para ordenar, :func:`sorted` (y ver :"
"ref:`sortinghowto` para ejemplos de utilización avanzada)."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1059
msgid ""
"Abstractions tend to create indirections and force the interpreter to work "
"more.  If the levels of indirection outweigh the amount of useful work done, "
"your program will be slower.  You should avoid excessive abstraction, "
"especially under the form of tiny functions or methods (which are also often "
"detrimental to readability)."
msgstr ""
"Las abstracciones tienden a crear indirecciones y fuerzan al intérprete a "
"trabajar más. Si los niveles de indirección sobrepasan la cantidad de "
"trabajo útil realizado, tu programa será más lento. Debes evitar la "
"abstracción excesiva, especialmente en las formas de pequeñas funciones o "
"métodos (los que normalmente detrimentan la legibilidad del código)."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1065
msgid ""
"If you have reached the limit of what pure Python can allow, there are tools "
"to take you further away.  For example, `Cython <http://cython.org>`_ can "
"compile a slightly modified version of Python code into a C extension, and "
"can be used on many different platforms.  Cython can take advantage of "
"compilation (and optional type annotations) to make your code significantly "
"faster than when interpreted.  If you are confident in your C programming "
"skills, you can also :ref:`write a C extension module <extending-index>` "
"yourself."
msgstr ""
"Si has llegado al límite de lo que Python puro te permite, existen "
"herramientas para llevarte más allá. Por ejemplo, `Cython <http://cython."
"org>`_ puede compilar una versión ligeramente modificada de código Python "
"como una extensión C, y puede ser utilizada en diferentes plataformas. "
"Cython puede aventajarse de la compilación (y anotaciones de tipo opcional) "
"para hacer tu código cuantitativamente más rápido que cuando se interpreta. "
"Si dispones de buenas dotes de programación en C, puedes :ref:`escribir un "
"módulo <extending-index> en C tú mismo`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1075
msgid ""
"The wiki page devoted to `performance tips <https://wiki.python.org/moin/"
"PythonSpeed/PerformanceTips>`_."
msgstr ""
"La página wiki dedicada a `consejos de rendimiento <https://wiki.python.org/"
"moin/PythonSpeed/PerformanceTips>`_."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1081
msgid "What is the most efficient way to concatenate many strings together?"
msgstr "¿Cuál es la forma más eficiente de concatenar strings?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1083
msgid ""
":class:`str` and :class:`bytes` objects are immutable, therefore "
"concatenating many strings together is inefficient as each concatenation "
"creates a new object.  In the general case, the total runtime cost is "
"quadratic in the total string length."
msgstr ""
"Los objetos :class:`str` y :class:`bytes` son inmutables, por tanto "
"concatenar varios strings es ineficiente ya que cada concatenación crea un "
"nuevo objeto. Por lo común, el coste de tiempo de ejecución es cuadrático en "
"la longitud total del string."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1088
msgid ""
"To accumulate many :class:`str` objects, the recommended idiom is to place "
"them into a list and call :meth:`str.join` at the end::"
msgstr ""
"Para acumular varios objetos :class:`str`, el idioma recomendado es "
"colocarlos en una lista y llamar al método :meth:`str.join` al final::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1096
msgid "(another reasonably efficient idiom is to use :class:`io.StringIO`)"
msgstr "(otra forma eficiente es utilizar :class:`io.StringIO`)"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1098
msgid ""
"To accumulate many :class:`bytes` objects, the recommended idiom is to "
"extend a :class:`bytearray` object using in-place concatenation (the ``+=`` "
"operator)::"
msgstr ""
"Para acumular varios objetos :class:`bytes`, la forma recomendada es "
"extender un objeto :class:`bytearray` utilizando concatenación in-place (con "
"el operador ``+=``)::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1107
msgid "Sequences (Tuples/Lists)"
msgstr "Secuencias (Tuplas/Listas)"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1110
msgid "How do I convert between tuples and lists?"
msgstr "¿Cómo convierto entre múltiples listas y tuplas?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1112
msgid ""
"The type constructor ``tuple(seq)`` converts any sequence (actually, any "
"iterable) into a tuple with the same items in the same order."
msgstr ""
"El constructor tipo ``tuple(seq)`` convierte cualquier secuencia "
"(actualmente, cualquiera iterable) en una tupla con los mismos items en el "
"mismo orden."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1115
msgid ""
"For example, ``tuple([1, 2, 3])`` yields ``(1, 2, 3)`` and ``tuple('abc')`` "
"yields ``('a', 'b', 'c')``.  If the argument is a tuple, it does not make a "
"copy but returns the same object, so it is cheap to call :func:`tuple` when "
"you aren't sure that an object is already a tuple."
msgstr ""
"Por ejemplo ``tuple([1, 2, 3])`` devuelve ``(1, 2, 3)`` y ``('abc')`` "
"devuelve ``('a', 'b', 'c')``. Si el argumento es una tupla, no crea una "
"copia, pero sí devuelve el mismo objeto, así que en tiempo de ejecución no "
"es caro llamar a la función :func:`tuple` cuando no estás seguro de que ese "
"objeto sea una tupla."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1120
msgid ""
"The type constructor ``list(seq)`` converts any sequence or iterable into a "
"list with the same items in the same order.  For example, ``list((1, 2, "
"3))`` yields ``[1, 2, 3]`` and ``list('abc')`` yields ``['a', 'b', 'c']``.  "
"If the argument is a list, it makes a copy just like ``seq[:]`` would."
msgstr ""
"El constructor tipo `list(seq)`` convierte cualquier secuencia u objeto "
"iterable en una lista con los mismos items en el mismo orden. Por ejemplo "
"``list((1, 2, 3))`` devuelve ``[1, 2, 3]`` y ``list('abc')`` devuelve "
"``['a', 'b', 'c']``. Si el argumento es una lista, hace una copia del modo "
"``seq[:]``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1127
msgid "What's a negative index?"
msgstr "¿Qué es un índice negativo?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1129
msgid ""
"Python sequences are indexed with positive numbers and negative numbers.  "
"For positive numbers 0 is the first index 1 is the second index and so "
"forth.  For negative indices -1 is the last index and -2 is the penultimate "
"(next to last) index and so forth.  Think of ``seq[-n]`` as the same as "
"``seq[len(seq)-n]``."
msgstr ""
"Las secuencias Python son indexadas con númreos positivos y números "
"negativos Para los números positivos, 0 es el primer index, 1 es el segundo "
"y así sucesivamente. Piensa en ``seq[-n]`` como equidad de ``seq[len(seq)-"
"n]``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1134
msgid ""
"Using negative indices can be very convenient.  For example ``S[:-1]`` is "
"all of the string except for its last character, which is useful for "
"removing the trailing newline from a string."
msgstr ""
"Utilizar índices negativos puede ser conveniente. Por ejemplo ``S[:-1]`` es "
"todo el string, excepto su último carácter, el cual es útil para borrar el "
"salto de linea de un string."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1140
msgid "How do I iterate over a sequence in reverse order?"
msgstr "¿Cómo itero sobre una secuencia en orden inverso?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1142
msgid ""
"Use the :func:`reversed` built-in function, which is new in Python 2.4::"
msgstr "Utiliza la función integrada :func:`reversed`, nueva en Python 2.4::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1147
msgid ""
"This won't touch your original sequence, but build a new copy with reversed "
"order to iterate over."
msgstr ""
"Esto no tocará tu secuencia original, pero crea una nueva copia con orden "
"inverso para volver a iterar."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1150
msgid "With Python 2.3, you can use an extended slice syntax::"
msgstr "Con Python 2.3, puedes utilizar notación slice extendida::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1157
msgid "How do you remove duplicates from a list?"
msgstr "¿Cómo borrar duplicados de una lista?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1159
msgid "See the Python Cookbook for a long discussion of many ways to do this:"
msgstr ""
"Ver el Libro de Cocina Python para una discusión más amplia sobre formas de "
"realizar esto:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1161
msgid "https://code.activestate.com/recipes/52560/"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1163
msgid ""
"If you don't mind reordering the list, sort it and then scan from the end of "
"the list, deleting duplicates as you go::"
msgstr ""
"Si no te importa reordenar la lista, ordénala y tras ello haz un scan desde "
"el inicio de la lista, borrando los duplicados por el camino::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1175
msgid ""
"If all elements of the list may be used as set keys (i.e. they are all :term:"
"`hashable`) this is often faster ::"
msgstr ""
"Si todos los elementos de la lista pueden usarse como claves set (por ej. si "
"todas son :term:`hashable`), suele ser más rápido::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1180
msgid ""
"This converts the list into a set, thereby removing duplicates, and then "
"back into a list."
msgstr ""
"Esto convierte la lista en un set, de este modo borramos los duplicados, y "
"volvemos a convertirlo en lista."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1185
msgid "How do you make an array in Python?"
msgstr "¿Como creas un array en Python?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1187
msgid "Use a list::"
msgstr "Utiliza una lista::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1191
msgid ""
"Lists are equivalent to C or Pascal arrays in their time complexity; the "
"primary difference is that a Python list can contain objects of many "
"different types."
msgstr ""
"Las listas son equivalentes a los arrays de C o Pascal en su complejidad "
"temporal; la diferencia primordial es que una lista de Python puede contener "
"objetos de muchos tipos diferentes."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1194
msgid ""
"The ``array`` module also provides methods for creating arrays of fixed "
"types with compact representations, but they are slower to index than "
"lists.  Also note that the Numeric extensions and others define array-like "
"structures with various characteristics as well."
msgstr ""
"El módulo ``array`` también proporciona métodos para crear arrays de tipos "
"fijos, con representaciones compactas, pero son más lentos de indexar que "
"las listas. Fíjate que las extensiones Numeric y otras, definen estructuras "
"similares a los arrays con diferentes características."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1199
msgid ""
"To get Lisp-style linked lists, you can emulate cons cells using tuples::"
msgstr ""
"Para tener listas linkadas estilo Lisp, puedes emular cons cells utilizando "
"tuplas::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1203
msgid ""
"If mutability is desired, you could use lists instead of tuples.  Here the "
"analogue of lisp car is ``lisp_list[0]`` and the analogue of cdr is "
"``lisp_list[1]``.  Only do this if you're sure you really need to, because "
"it's usually a lot slower than using Python lists."
msgstr ""
"Si se desea mutabilidad, puedes utilizar listas en lugar de tuplas. Aquí la "
"analogía de coche lisp es ``lisp_list[0]`` y el análogo de cdr es "
"``lisp_list[1]``. Haz esto sólo si estás seguro de que lo necesitas, porque "
"normalmente es más lento que utilizar listas Python."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1212
msgid "How do I create a multidimensional list?"
msgstr "¿Cómo creo una lista multidimensional?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1214
msgid "You probably tried to make a multidimensional array like this::"
msgstr ""
"Probablemente hayas intentado crear un array multidimensional del siguiente "
"modo::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1218
msgid "This looks correct if you print it:"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1229
msgid "But when you assign a value, it shows up in multiple places:"
msgstr "Pero cuando asignas un valor, se muestra en varios lugares:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1241
msgid ""
"The reason is that replicating a list with ``*`` doesn't create copies, it "
"only creates references to the existing objects.  The ``*3`` creates a list "
"containing 3 references to the same list of length two.  Changes to one row "
"will show in all rows, which is almost certainly not what you want."
msgstr ""
"La razón es que replicando una lista con ``*`` no crea copias, tan sólo crea "
"referencias a los objetos existentes. ``*3`` crea una lista que contiene 3 "
"referencias a la misma lista de longitud dos. Los cambios a una fila se "
"mostrarán en todas las filas, lo que es claramente, algo que no quieres."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1246
msgid ""
"The suggested approach is to create a list of the desired length first and "
"then fill in each element with a newly created list::"
msgstr ""
"Un acercamiento sugerido es, primero crear una lista de longitud deseada y "
"después rellenar en cada elemento con una nueva lista::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1253
msgid ""
"This generates a list containing 3 different lists of length two.  You can "
"also use a list comprehension::"
msgstr ""
"Esto genera una lista que contiene 3 listas diferentes de longitud 2. "
"Tambien puedes utilizar una comprensión de lista::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1259
msgid ""
"Or, you can use an extension that provides a matrix datatype; `NumPy <http://"
"www.numpy.org/>`_ is the best known."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1264
msgid "How do I apply a method to a sequence of objects?"
msgstr "¿Como aplico un método a una secuencia de objetos?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1266
msgid "Use a list comprehension::"
msgstr "Usa una comprensión de lista::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1273
msgid ""
"Why does a_tuple[i] += ['item'] raise an exception when the addition works?"
msgstr ""
"¿Por qué a_tuple[i] += ['item'] lanza una excepción cuando funciona la "
"adición?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1275
msgid ""
"This is because of a combination of the fact that augmented assignment "
"operators are *assignment* operators, and the difference between mutable and "
"immutable objects in Python."
msgstr ""
"Esto sucede por la combinación del hecho de que los operadores de asignación "
"aumentada son operadores de *assignment*, y por la diferencia entre objetos "
"mutables e inmutables en Python."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1279
msgid ""
"This discussion applies in general when augmented assignment operators are "
"applied to elements of a tuple that point to mutable objects, but we'll use "
"a ``list`` and ``+=`` as our exemplar."
msgstr ""
"Esto se aplica en general cuando los operadores de asignación aumentada se "
"aplican a elementos de una tupla que apunta a objetos mutables, pero "
"utilizaremos ``list`` y ``+=`` como ejemplo."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1283
msgid "If you wrote::"
msgstr "Si has escrito::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1291
msgid ""
"The reason for the exception should be immediately clear: ``1`` is added to "
"the object ``a_tuple[0]`` points to (``1``), producing the result object, "
"``2``, but when we attempt to assign the result of the computation, ``2``, "
"to element ``0`` of the tuple, we get an error because we can't change what "
"an element of a tuple points to."
msgstr ""
"La razón para la excepción debería estar clara inmediatamente: ``1`` es "
"añadido al objeto ``a_tuple[0]`` que apunta a (``1``), produciendo el objeto "
"resultado, ``2``, pero cuando intentamos asignar el resultado de la "
"operación, ``2``, al elemento ``0`` de la tupla, tenemos un error porque no "
"podemos cambiar aquelllo a lo que apunta un elemento de la tupla."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1297
msgid ""
"Under the covers, what this augmented assignment statement is doing is "
"approximately this::"
msgstr ""
"Bajo la superficie, lo que está haciendo esta declaración de asignación "
"aumentada es aproximadamente esto::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1306
msgid ""
"It is the assignment part of the operation that produces the error, since a "
"tuple is immutable."
msgstr ""
"Es la parte de la operación de asignación la que produce el error, ya que "
"una tupla es inmutable."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1309
msgid "When you write something like::"
msgstr "Cuando escribes algo así::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1317
msgid ""
"The exception is a bit more surprising, and even more surprising is the fact "
"that even though there was an error, the append worked::"
msgstr ""
"La excepción es un poco más sorprendente, e incluso más sorprendente es el "
"hecho de que incluso aunque hubiera un error, el añadido haya funcionado::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1323
msgid ""
"To see why this happens, you need to know that (a) if an object implements "
"an ``__iadd__`` magic method, it gets called when the ``+=`` augmented "
"assignment is executed, and its return value is what gets used in the "
"assignment statement; and (b) for lists, ``__iadd__`` is equivalent to "
"calling ``extend`` on the list and returning the list.  That's why we say "
"that for lists, ``+=`` is a \"shorthand\" for ``list.extend``::"
msgstr ""
"Para ver por qué sucede esto, necesitas saber que (a) si un objeto "
"implementa el método mágico ``__iadd__``, se le llama cuando se ejecuta la "
"asignación aumentada ``+=``, y devuelve lo que está declarado en la "
"asignación; y (b) para listas, ``__iadd__`` equivale a llamar a ``extend`` "
"en la lista y retornar dicha lista. Esto es por qué decimos que para listas, "
"``+=`` es un \"shorthand\" de ``list.extend``::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1335
msgid "This is equivalent to::"
msgstr "Esto equivale a::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1340
msgid ""
"The object pointed to by a_list has been mutated, and the pointer to the "
"mutated object is assigned back to ``a_list``.  The end result of the "
"assignment is a no-op, since it is a pointer to the same object that "
"``a_list`` was previously pointing to, but the assignment still happens."
msgstr ""
"El objeto apuntado por una a_list ha sido mutado, y  el apuntador del objeto "
"mutado es asignado a ``a_list``. El resultado de la asignación es un no-op, "
"ya que es un apuntador al mismo objeto al que estaba apuntando ``a_list``, "
"pero la asignación se sigue ejecutando."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1345
msgid "Thus, in our tuple example what is happening is equivalent to::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1353
msgid ""
"The ``__iadd__`` succeeds, and thus the list is extended, but even though "
"``result`` points to the same object that ``a_tuple[0]`` already points to, "
"that final assignment still results in an error, because tuples are "
"immutable."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1359
msgid ""
"I want to do a complicated sort: can you do a Schwartzian Transform in "
"Python?"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1361
msgid ""
"The technique, attributed to Randal Schwartz of the Perl community, sorts "
"the elements of a list by a metric which maps each element to its \"sort "
"value\". In Python, use the ``key`` argument for the :meth:`list.sort` "
"method::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1370
msgid "How can I sort one list by values from another list?"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1372
msgid ""
"Merge them into an iterator of tuples, sort the resulting list, and then "
"pick out the element you want. ::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1386
msgid "An alternative for the last step is::"
msgstr "Una alternativa al último paso es::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1391
msgid ""
"If you find this more legible, you might prefer to use this instead of the "
"final list comprehension.  However, it is almost twice as slow for long "
"lists.  Why? First, the ``append()`` operation has to reallocate memory, and "
"while it uses some tricks to avoid doing that each time, it still has to do "
"it occasionally, and that costs quite a bit.  Second, the expression "
"\"result.append\" requires an extra attribute lookup, and third, there's a "
"speed reduction from having to make all those function calls."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1401
msgid "Objects"
msgstr "Objetos"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1404
msgid "What is a class?"
msgstr "¿Qué es una clase?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1406
msgid ""
"A class is the particular object type created by executing a class "
"statement. Class objects are used as templates to create instance objects, "
"which embody both the data (attributes) and code (methods) specific to a "
"datatype."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1410
msgid ""
"A class can be based on one or more other classes, called its base "
"class(es). It then inherits the attributes and methods of its base classes. "
"This allows an object model to be successively refined by inheritance.  You "
"might have a generic ``Mailbox`` class that provides basic accessor methods "
"for a mailbox, and subclasses such as ``MboxMailbox``, ``MaildirMailbox``, "
"``OutlookMailbox`` that handle various specific mailbox formats."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1419
msgid "What is a method?"
msgstr "¿Qué es un método?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1421
msgid ""
"A method is a function on some object ``x`` that you normally call as ``x."
"name(arguments...)``.  Methods are defined as functions inside the class "
"definition::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1431
msgid "What is self?"
msgstr "¿Qué es self?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1433
msgid ""
"Self is merely a conventional name for the first argument of a method.  A "
"method defined as ``meth(self, a, b, c)`` should be called as ``x.meth(a, b, "
"c)`` for some instance ``x`` of the class in which the definition occurs; "
"the called method will think it is called as ``meth(x, a, b, c)``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1438
msgid "See also :ref:`why-self`."
msgstr "Ver también :ref:`why-self`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1442
msgid ""
"How do I check if an object is an instance of a given class or of a subclass "
"of it?"
msgstr ""
"¿Cómo compruebo si un objeto es una instancia de una clase dada o una "
"subclase de ella?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1444
msgid ""
"Use the built-in function ``isinstance(obj, cls)``.  You can check if an "
"object is an instance of any of a number of classes by providing a tuple "
"instead of a single class, e.g. ``isinstance(obj, (class1, class2, ...))``, "
"and can also check whether an object is one of Python's built-in types, e.g. "
"``isinstance(obj, str)`` or ``isinstance(obj, (int, float, complex))``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1450
msgid ""
"Note that most programs do not use :func:`isinstance` on user-defined "
"classes very often.  If you are developing the classes yourself, a more "
"proper object-oriented style is to define methods on the classes that "
"encapsulate a particular behaviour, instead of checking the object's class "
"and doing a different thing based on what class it is.  For example, if you "
"have a function that does something::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1464
msgid ""
"A better approach is to define a ``search()`` method on all the classes and "
"just call it::"
msgstr ""
"Un mejor acercamiento es definir un método ``search()`` en todas las clases "
"y simplemente llamarlo::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1479
msgid "What is delegation?"
msgstr "¿Qué es delegación?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1481
msgid ""
"Delegation is an object oriented technique (also called a design pattern). "
"Let's say you have an object ``x`` and want to change the behaviour of just "
"one of its methods.  You can create a new class that provides a new "
"implementation of the method you're interested in changing and delegates all "
"other methods to the corresponding method of ``x``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1487
msgid ""
"Python programmers can easily implement delegation.  For example, the "
"following class implements a class that behaves like a file but converts all "
"written data to uppercase::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1502
msgid ""
"Here the ``UpperOut`` class redefines the ``write()`` method to convert the "
"argument string to uppercase before calling the underlying ``self._outfile."
"write()`` method.  All other methods are delegated to the underlying ``self."
"_outfile`` object.  The delegation is accomplished via the ``__getattr__`` "
"method; consult :ref:`the language reference <attribute-access>` for more "
"information about controlling attribute access."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1509
msgid ""
"Note that for more general cases delegation can get trickier. When "
"attributes must be set as well as retrieved, the class must define a :meth:"
"`__setattr__` method too, and it must do so carefully.  The basic "
"implementation of :meth:`__setattr__` is roughly equivalent to the "
"following::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1520
msgid ""
"Most :meth:`__setattr__` implementations must modify ``self.__dict__`` to "
"store local state for self without causing an infinite recursion."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1525
msgid ""
"How do I call a method defined in a base class from a derived class that "
"overrides it?"
msgstr ""
"¿Cómo llamo a un método definido en una clase base, de una clase derivada "
"que la sobreescribe?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1527
msgid "Use the built-in :func:`super` function::"
msgstr "Utiliza la función integrada :func:`super`:: "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1533
msgid ""
"For version prior to 3.0, you may be using classic classes: For a class "
"definition such as ``class Derived(Base): ...`` you can call method "
"``meth()`` defined in ``Base`` (or one of ``Base``'s base classes) as ``Base."
"meth(self, arguments...)``.  Here, ``Base.meth`` is an unbound method, so "
"you need to provide the ``self`` argument."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1541
msgid "How can I organize my code to make it easier to change the base class?"
msgstr ""
"¿Cómo organizar mi código para hacer más simple el cambio de la clase base?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1543
msgid ""
"You could define an alias for the base class, assign the real base class to "
"it before your class definition, and use the alias throughout your class.  "
"Then all you have to change is the value assigned to the alias.  "
"Incidentally, this trick is also handy if you want to decide dynamically (e."
"g. depending on availability of resources) which base class to use.  "
"Example::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1558
msgid "How do I create static class data and static class methods?"
msgstr "¿Cómo creo una clase estática de datos y métodos estáticos de clase?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1560
msgid ""
"Both static data and static methods (in the sense of C++ or Java) are "
"supported in Python."
msgstr ""
"Ambos, datos estáticos y métodos estáticos (pensando en C++ o Java), son "
"soportados en Python"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1563
msgid ""
"For static data, simply define a class attribute.  To assign a new value to "
"the attribute, you have to explicitly use the class name in the assignment::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1575
msgid ""
"``c.count`` also refers to ``C.count`` for any ``c`` such that "
"``isinstance(c, C)`` holds, unless overridden by ``c`` itself or by some "
"class on the base-class search path from ``c.__class__`` back to ``C``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1579
msgid ""
"Caution: within a method of C, an assignment like ``self.count = 42`` "
"creates a new and unrelated instance named \"count\" in ``self``'s own "
"dict.  Rebinding of a class-static data name must always specify the class "
"whether inside a method or not::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1586
msgid "Static methods are possible::"
msgstr "Los métodos son posibles::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1594
msgid ""
"However, a far more straightforward way to get the effect of a static method "
"is via a simple module-level function::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1600
msgid ""
"If your code is structured so as to define one class (or tightly related "
"class hierarchy) per module, this supplies the desired encapsulation."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1605
msgid "How can I overload constructors (or methods) in Python?"
msgstr "¿Cómo puedo sobrecargar constructores (o métodos) en Python?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1607
msgid ""
"This answer actually applies to all methods, but the question usually comes "
"up first in the context of constructors."
msgstr ""
"Esta respuesta se aplica actualmente a todos los métodos, pero la cuestión "
"viene dada habitualmente, primero en el contexto de los constructores."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1610
msgid "In C++ you'd write"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1619
msgid ""
"In Python you have to write a single constructor that catches all cases "
"using default arguments.  For example::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1629
msgid "This is not entirely equivalent, but close enough in practice."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1631
msgid "You could also try a variable-length argument list, e.g. ::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1636
msgid "The same approach works for all method definitions."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1640
msgid "I try to use __spam and I get an error about _SomeClassName__spam."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1642
msgid ""
"Variable names with double leading underscores are \"mangled\" to provide a "
"simple but effective way to define class private variables.  Any identifier "
"of the form ``__spam`` (at least two leading underscores, at most one "
"trailing underscore) is textually replaced with ``_classname__spam``, where "
"``classname`` is the current class name with any leading underscores "
"stripped."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1648
msgid ""
"This doesn't guarantee privacy: an outside user can still deliberately "
"access the \"_classname__spam\" attribute, and private values are visible in "
"the object's ``__dict__``.  Many Python programmers never bother to use "
"private variable names at all."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1655
msgid "My class defines __del__ but it is not called when I delete the object."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1657
msgid "There are several possible reasons for this."
msgstr "Hay varios razones por esta."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1659
msgid ""
"The del statement does not necessarily call :meth:`__del__` -- it simply "
"decrements the object's reference count, and if this reaches zero :meth:"
"`__del__` is called."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1663
msgid ""
"If your data structures contain circular links (e.g. a tree where each child "
"has a parent reference and each parent has a list of children) the reference "
"counts will never go back to zero.  Once in a while Python runs an algorithm "
"to detect such cycles, but the garbage collector might run some time after "
"the last reference to your data structure vanishes, so your :meth:`__del__` "
"method may be called at an inconvenient and random time. This is "
"inconvenient if you're trying to reproduce a problem. Worse, the order in "
"which object's :meth:`__del__` methods are executed is arbitrary.  You can "
"run :func:`gc.collect` to force a collection, but there *are* pathological "
"cases where objects will never be collected."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1674
msgid ""
"Despite the cycle collector, it's still a good idea to define an explicit "
"``close()`` method on objects to be called whenever you're done with them.  "
"The ``close()`` method can then remove attributes that refer to subobjects.  "
"Don't call :meth:`__del__` directly -- :meth:`__del__` should call "
"``close()`` and ``close()`` should make sure that it can be called more than "
"once for the same object."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1681
msgid ""
"Another way to avoid cyclical references is to use the :mod:`weakref` "
"module, which allows you to point to objects without incrementing their "
"reference count. Tree data structures, for instance, should use weak "
"references for their parent and sibling references (if they need them!)."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1694
msgid ""
"Finally, if your :meth:`__del__` method raises an exception, a warning "
"message is printed to :data:`sys.stderr`."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1699
msgid "How do I get a list of all instances of a given class?"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1701
msgid ""
"Python does not keep track of all instances of a class (or of a built-in "
"type). You can program the class's constructor to keep track of all "
"instances by keeping a list of weak references to each instance."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1707
msgid "Why does the result of ``id()`` appear to be not unique?"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1709
msgid ""
"The :func:`id` builtin returns an integer that is guaranteed to be unique "
"during the lifetime of the object.  Since in CPython, this is the object's "
"memory address, it happens frequently that after an object is deleted from "
"memory, the next freshly created object is allocated at the same position in "
"memory.  This is illustrated by this example:"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1720
msgid ""
"The two ids belong to different integer objects that are created before, and "
"deleted immediately after execution of the ``id()`` call.  To be sure that "
"objects whose id you want to examine are still alive, create another "
"reference to the object:"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1733
msgid "Modules"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1736
msgid "How do I create a .pyc file?"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1738
msgid ""
"When a module is imported for the first time (or when the source file has "
"changed since the current compiled file was created) a ``.pyc`` file "
"containing the compiled code should be created in a ``__pycache__`` "
"subdirectory of the directory containing the ``.py`` file.  The ``.pyc`` "
"file will have a filename that starts with the same name as the ``.py`` "
"file, and ends with ``.pyc``, with a middle component that depends on the "
"particular ``python`` binary that created it.  (See :pep:`3147` for details.)"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1746
msgid ""
"One reason that a ``.pyc`` file may not be created is a permissions problem "
"with the directory containing the source file, meaning that the "
"``__pycache__`` subdirectory cannot be created. This can happen, for "
"example, if you develop as one user but run as another, such as if you are "
"testing with a web server."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1751
msgid ""
"Unless the :envvar:`PYTHONDONTWRITEBYTECODE` environment variable is set, "
"creation of a .pyc file is automatic if you're importing a module and Python "
"has the ability (permissions, free space, etc...) to create a "
"``__pycache__`` subdirectory and write the compiled module to that "
"subdirectory."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1756
msgid ""
"Running Python on a top level script is not considered an import and no ``."
"pyc`` will be created.  For example, if you have a top-level module ``foo."
"py`` that imports another module ``xyz.py``, when you run ``foo`` (by typing "
"``python foo.py`` as a shell command), a ``.pyc`` will be created for "
"``xyz`` because ``xyz`` is imported, but no ``.pyc`` file will be created "
"for ``foo`` since ``foo.py`` isn't being imported."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1763
msgid ""
"If you need to create a ``.pyc`` file for ``foo`` -- that is, to create a ``."
"pyc`` file for a module that is not imported -- you can, using the :mod:"
"`py_compile` and :mod:`compileall` modules."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1767
msgid ""
"The :mod:`py_compile` module can manually compile any module.  One way is to "
"use the ``compile()`` function in that module interactively::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1773
msgid ""
"This will write the ``.pyc`` to a ``__pycache__`` subdirectory in the same "
"location as ``foo.py`` (or you can override that with the optional parameter "
"``cfile``)."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1777
msgid ""
"You can also automatically compile all files in a directory or directories "
"using the :mod:`compileall` module.  You can do it from the shell prompt by "
"running ``compileall.py`` and providing the path of a directory containing "
"Python files to compile::"
msgstr ""
"Puedes compilar automáticamente todos los archivos de un directorio o "
"directorios utilizando el módulo :mod:`compileall`. Puedes hacerlo desde "
"terminal ejecutando ``compileall.py`` y proporcionando la ruta al directorio "
"contenedor de archivos Python a compilar::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1786
msgid "How do I find the current module name?"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1788
msgid ""
"A module can find out its own module name by looking at the predefined "
"global variable ``__name__``.  If this has the value ``'__main__'``, the "
"program is running as a script.  Many modules that are usually used by "
"importing them also provide a command-line interface or a self-test, and "
"only execute this code after checking ``__name__``::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1803
msgid "How can I have modules that mutually import each other?"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1805
msgid "Suppose you have the following modules:"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1807
msgid "foo.py::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1812
msgid "bar.py::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1817
msgid "The problem is that the interpreter will perform the following steps:"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1819
msgid "main imports foo"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1820
msgid "Empty globals for foo are created"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1821
msgid "foo is compiled and starts executing"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1822
msgid "foo imports bar"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1823
msgid "Empty globals for bar are created"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1824
msgid "bar is compiled and starts executing"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1825
msgid ""
"bar imports foo (which is a no-op since there already is a module named foo)"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1826
msgid "bar.foo_var = foo.foo_var"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1828
msgid ""
"The last step fails, because Python isn't done with interpreting ``foo`` yet "
"and the global symbol dictionary for ``foo`` is still empty."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1831
msgid ""
"The same thing happens when you use ``import foo``, and then try to access "
"``foo.foo_var`` in global code."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1834
msgid "There are (at least) three possible workarounds for this problem."
msgstr "Existen (al menos) tres posibles escenarios para este problema."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1836
msgid ""
"Guido van Rossum recommends avoiding all uses of ``from <module> import ..."
"``, and placing all code inside functions.  Initializations of global "
"variables and class variables should use constants or built-in functions "
"only.  This means everything from an imported module is referenced as "
"``<module>.<name>``."
msgstr ""
"Guido van Rossum recomienda evitar todo uso de ``from <module> import ...``, "
"y colocar todo el código dentro de las funciones, inicializaciones o "
"variables globales, y las variables de clase deberían utilizar constantes o "
"funciones internas únicamente. Esto significa que todo módulo importado es "
"referenciado como ``<module>.<name>``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1841
msgid ""
"Jim Roskind suggests performing steps in the following order in each module:"
msgstr ""
"Jim Roskind sugiere realizar los siguientes pasos en el siguiente orden en "
"cada módulo:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1843
msgid ""
"exports (globals, functions, and classes that don't need imported base "
"classes)"
msgstr ""
"exports (globales, funciones y clases que no necesitan clases base "
"importadas)"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1845
msgid "``import`` statements"
msgstr "declaraciones ``import``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1846
msgid ""
"active code (including globals that are initialized from imported values)."
msgstr ""
"código activo (incluyendo globales que son inicializadas de valores "
"importados)."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1848
msgid ""
"van Rossum doesn't like this approach much because the imports appear in a "
"strange place, but it does work."
msgstr ""
"a van Rossum no le gusta demasiado esta visión porque los imports aparecen "
"en lugares extraños, pero funciona."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1851
msgid ""
"Matthias Urlichs recommends restructuring your code so that the recursive "
"import is not necessary in the first place."
msgstr ""
"Matthias Urlichs recomienda reestructurar tu código de modo que el import "
"recursivo no sea necesario en primer lugar."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1854
msgid "These solutions are not mutually exclusive."
msgstr "Estas soluciones no son exclusivas mútuamente."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1858
msgid "__import__('x.y.z') returns <module 'x'>; how do I get z?"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1860
msgid ""
"Consider using the convenience function :func:`~importlib.import_module` "
"from :mod:`importlib` instead::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1867
msgid ""
"When I edit an imported module and reimport it, the changes don't show up.  "
"Why does this happen?"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1869
msgid ""
"For reasons of efficiency as well as consistency, Python only reads the "
"module file on the first time a module is imported.  If it didn't, in a "
"program consisting of many modules where each one imports the same basic "
"module, the basic module would be parsed and re-parsed many times.  To force "
"re-reading of a changed module, do this::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1879
msgid ""
"Warning: this technique is not 100% fool-proof.  In particular, modules "
"containing statements like ::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1884
msgid ""
"will continue to work with the old version of the imported objects.  If the "
"module contains class definitions, existing class instances will *not* be "
"updated to use the new class definition.  This can result in the following "
"paradoxical behaviour::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/faq/programming.rst:1897
msgid ""
"The nature of the problem is made clear if you print out the \"identity\" of "
"the class objects::"
msgstr ""
