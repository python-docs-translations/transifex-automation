# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Илья Панфилов, 2024
# Roustam Khamidoulline, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-20 14:17+0000\n"
"PO-Revision-Date: 2024-07-29 04:07+0000\n"
"Last-Translator: Roustam Khamidoulline, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../deprecations/index.rst:2
msgid "Deprecations"
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:2
#: ../../deprecations/pending-removal-in-3.14.rst:2
msgid "Pending Removal in Python 3.14"
msgstr "Ожидает удаления в Python 3.14"

#: ../../deprecations/pending-removal-in-3.14.rst:4
msgid ""
":mod:`argparse`: The *type*, *choices*, and *metavar* parameters of :class:`!"
"argparse.BooleanOptionalAction` are deprecated and will be removed in 3.14. "
"(Contributed by Nikita Sobolev in :gh:`92248`.)"
msgstr ""
":mod:`argparse`: Параметры *type*, *choices* и *metavar* :class:`!argparse."
"BooleanOptionalAction` устарели и будут удалены в версии 3.14. (Добавлен "
"Никитой Соболевым в :gh:`92248`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:9
msgid ""
":mod:`ast`: The following features have been deprecated in documentation "
"since Python 3.8, now cause a :exc:`DeprecationWarning` to be emitted at "
"runtime when they are accessed or used, and will be removed in Python 3.14:"
msgstr ""
":mod:`ast`: Следующие функции устарели в документации, начиная с Python 3.8, "
"теперь вызывают выдачу :exc:`DeprecationWarning` во время выполнения, когда "
"к ним обращаются или используют, и будут удалены в Python 3.14:"

#: ../../deprecations/pending-removal-in-3.14.rst:13
msgid ":class:`!ast.Num`"
msgstr ":class:`!ast.Num`"

#: ../../deprecations/pending-removal-in-3.14.rst:14
msgid ":class:`!ast.Str`"
msgstr ":class:`!ast.Str`"

#: ../../deprecations/pending-removal-in-3.14.rst:15
msgid ":class:`!ast.Bytes`"
msgstr ":class:`!ast.Bytes`"

#: ../../deprecations/pending-removal-in-3.14.rst:16
msgid ":class:`!ast.NameConstant`"
msgstr ":class:`!ast.NameConstant`"

#: ../../deprecations/pending-removal-in-3.14.rst:17
msgid ":class:`!ast.Ellipsis`"
msgstr ":class:`!ast.Ellipsis`"

#: ../../deprecations/pending-removal-in-3.14.rst:19
msgid ""
"Use :class:`ast.Constant` instead. (Contributed by Serhiy Storchaka in :gh:"
"`90953`.)"
msgstr ""
"Вместо этого используйте :class:`ast.Constant`. (Предоставлено Сергеем "
"Сторчакой в ​​:gh:`90953`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:22
msgid ":mod:`asyncio`:"
msgstr ":mod:`asyncio`:"

#: ../../deprecations/pending-removal-in-3.14.rst:24
msgid ""
"The child watcher classes :class:`~asyncio.MultiLoopChildWatcher`, :class:"
"`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` and :"
"class:`~asyncio.SafeChildWatcher` are deprecated and will be removed in "
"Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
"Классы наблюдателей за детьми :class:`~asyncio.MultiLoopChildWatcher`, :"
"class:`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` и :"
"class:`~asyncio.SafeChildWatcher` устарели и будут удалены в Питон 3.14. "
"(Предоставлено Кумаром Адитьей в :gh:`94597`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:30
msgid ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, :meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` and :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` are deprecated and will be "
"removed in Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, :meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` and :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` are deprecated and will be "
"removed in Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:36
msgid ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van "
"Rossum in :gh:`100160`.)"
msgstr ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van "
"Rossum in :gh:`100160`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:41
msgid ""
":mod:`collections.abc`: Deprecated :class:`~collections.abc.ByteString`. "
"Prefer :class:`!Sequence` or :class:`~collections.abc.Buffer`. For use in "
"typing, prefer a union, like ``bytes | bytearray``, or :class:`collections."
"abc.Buffer`. (Contributed by Shantanu Jain in :gh:`91896`.)"
msgstr ""
":mod:`collections.abc`: Deprecated :class:`~collections.abc.ByteString`. "
"Prefer :class:`!Sequence` or :class:`~collections.abc.Buffer`. For use in "
"typing, prefer a union, like ``bytes | bytearray``, or :class:`collections."
"abc.Buffer`. (Contributed by Shantanu Jain in :gh:`91896`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:47
msgid ""
":mod:`email`: Deprecated the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"
msgstr ""
":mod:`email`: Deprecated the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:50
msgid ""
":mod:`importlib`: ``__package__`` and ``__cached__`` will cease to be set or "
"taken into consideration by the import system (:gh:`97879`)."
msgstr ""
":mod:`importlib`: ``__package__`` and ``__cached__`` will cease to be set or "
"taken into consideration by the import system (:gh:`97879`)."

#: ../../deprecations/pending-removal-in-3.14.rst:53
msgid ":mod:`importlib.abc` deprecated classes:"
msgstr ":mod:`importlib.abc` deprecated classes:"

#: ../../deprecations/pending-removal-in-3.14.rst:55
msgid ":class:`!importlib.abc.ResourceReader`"
msgstr ":class:`!importlib.abc.ResourceReader`"

#: ../../deprecations/pending-removal-in-3.14.rst:56
msgid ":class:`!importlib.abc.Traversable`"
msgstr ":class:`!importlib.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:57
msgid ":class:`!importlib.abc.TraversableResources`"
msgstr ":class:`!importlib.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:59
msgid "Use :mod:`importlib.resources.abc` classes instead:"
msgstr "Use :mod:`importlib.resources.abc` classes instead:"

#: ../../deprecations/pending-removal-in-3.14.rst:61
msgid ":class:`importlib.resources.abc.Traversable`"
msgstr ":class:`importlib.resources.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:62
msgid ":class:`importlib.resources.abc.TraversableResources`"
msgstr ":class:`importlib.resources.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:64
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr ""
"(Предоставлено Джейсоном Р. Кумбсом и Хьюго ван Кеменаде в :gh:`93963`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:66
msgid ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be "
"removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be "
"removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:72
msgid ""
":mod:`multiprocessing`: The default start method will change to a safer one "
"on Linux, BSDs, and other non-macOS POSIX platforms where ``'fork'`` is "
"currently the default (:gh:`84559`). Adding a runtime warning about this was "
"deemed too disruptive as the majority of code is not expected to care. Use "
"the :func:`~multiprocessing.get_context` or :func:`~multiprocessing."
"set_start_method` APIs to explicitly specify when your code *requires* "
"``'fork'``.  See :ref:`multiprocessing-start-methods`."
msgstr ""
":mod:`multiprocessing`: Метод запуска по умолчанию изменится на более "
"безопасный в Linux, BSD и других платформах, отличных от macOS POSIX, где в "
"настоящее время по умолчанию используется ``'fork'`` (:gh:`84559`). "
"Добавление предупреждения об этом во время выполнения было сочтено слишком "
"разрушительным, поскольку ожидается, что большая часть кода не будет "
"обращать на это внимания. Используйте API :func:`~multiprocessing."
"get_context` или :func:`~multiprocessing.set_start_method`, чтобы явно "
"указать, когда ваш код *требует* ``'вилки'``. См. :ref:`мультипроцессорные-"
"стартовые методы`."

#: ../../deprecations/pending-removal-in-3.14.rst:80
msgid ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` and :meth:`~pathlib."
"PurePath.relative_to`: passing additional arguments is deprecated."
msgstr ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` и :meth:`~pathlib."
"PurePath.relative_to`: передача дополнительных аргументов устарела."

#: ../../deprecations/pending-removal-in-3.14.rst:84
msgid ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` and :func:`~pkgutil.get_loader` "
"now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` and :func:`~pkgutil.get_loader` "
"now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:89
msgid ":mod:`pty`:"
msgstr ":mod:`pty`:"

#: ../../deprecations/pending-removal-in-3.14.rst:91
msgid "``master_open()``: use :func:`pty.openpty`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:92
msgid "``slave_open()``: use :func:`pty.openpty`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:94
msgid ":mod:`sqlite3`:"
msgstr ":mod:`sqlite3`:"

#: ../../deprecations/pending-removal-in-3.14.rst:96
msgid ":data:`~sqlite3.version` and :data:`~sqlite3.version_info`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:98
msgid ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if :"
"ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* is "
"a sequence instead of a :class:`dict`."
msgstr ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if :"
"ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* is "
"a sequence instead of a :class:`dict`."

#: ../../deprecations/pending-removal-in-3.14.rst:102
msgid ""
"date and datetime adapter, date and timestamp converter: see the :mod:"
"`sqlite3` documentation for suggested replacement recipes."
msgstr ""
"date and datetime adapter, date and timestamp converter: see the :mod:"
"`sqlite3` documentation for suggested replacement recipes."

#: ../../deprecations/pending-removal-in-3.14.rst:105
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.14. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.14. (Contributed by Nikita Sobolev in :gh:`101866`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:112
msgid ""
":mod:`typing`: :class:`~typing.ByteString`, deprecated since Python 3.9, now "
"causes a :exc:`DeprecationWarning` to be emitted when it is used."
msgstr ""
":mod:`typing`: :class:`~typing.ByteString`, deprecated since Python 3.9, now "
"causes a :exc:`DeprecationWarning` to be emitted when it is used."

#: ../../deprecations/pending-removal-in-3.14.rst:115
msgid ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in :gh:"
"`88168`.)"
msgstr ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in :gh:"
"`88168`.)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:2
#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending Removal in Python 3.15"
msgstr "Ожидает удаления в Python 3.15"

#: ../../deprecations/pending-removal-in-3.15.rst:4
msgid ""
":class:`http.server.CGIHTTPRequestHandler` will be removed along with its "
"related ``--cgi`` flag to ``python -m http.server``.  It was obsolete and "
"rarely used.  No direct replacement exists.  *Anything* is better than CGI "
"to interface a web server with a request handler."
msgstr ""
":class:`http.server.CGIHTTPRequestHandler` will be removed along with its "
"related ``--cgi`` flag to ``python -m http.server``.  It was obsolete and "
"rarely used.  No direct replacement exists.  *Anything* is better than CGI "
"to interface a web server with a request handler."

#: ../../deprecations/pending-removal-in-3.15.rst:9
msgid ""
":class:`locale`: :func:`locale.getdefaultlocale` was deprecated in Python "
"3.11 and originally planned for removal in Python 3.13 (:gh:`90817`), but "
"removal has been postponed to Python 3.15. Use :func:`locale.setlocale`, :"
"func:`locale.getencoding` and :func:`locale.getlocale` instead. (Contributed "
"by Hugo van Kemenade in :gh:`111187`.)"
msgstr ""
":class:`locale`: :func:`locale.getdefaultlocale` was deprecated in Python "
"3.11 and originally planned for removal in Python 3.13 (:gh:`90817`), but "
"removal has been postponed to Python 3.15. Use :func:`locale.setlocale`, :"
"func:`locale.getencoding` and :func:`locale.getlocale` instead. (Contributed "
"by Hugo van Kemenade in :gh:`111187`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:16
msgid ""
":mod:`pathlib`: :meth:`pathlib.PurePath.is_reserved` is deprecated and "
"scheduled for removal in Python 3.15. Use :func:`os.path.isreserved` to "
"detect reserved paths on Windows."
msgstr ""
":mod:`pathlib`: :meth:`pathlib.PurePath.is_reserved` устарел и запланирован "
"к удалению в Python 3.15. Используйте :func:`os.path.isreserved` для "
"обнаружения зарезервированных путей в Windows."

#: ../../deprecations/pending-removal-in-3.15.rst:21
msgid ""
":mod:`platform`: :func:`~platform.java_ver` is deprecated and will be "
"removed in 3.15. It was largely untested, had a confusing API, and was only "
"useful for Jython support. (Contributed by Nikita Sobolev in :gh:`116349`.)"
msgstr ""
":mod:`platform`: :func:`~platform.java_ver` устарел и будет удален в версии "
"3.15. Он практически не тестировался, имел запутанный API и был полезен "
"только для поддержки Jython. (Предоставлено Никитой Соболевым в :gh:"
"`116349`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:27
msgid ""
":mod:`threading`: Passing any arguments to :func:`threading.RLock` is now "
"deprecated. C version allows any numbers of args and kwargs, but they are "
"just ignored. Python version does not allow any arguments. All arguments "
"will be removed from :func:`threading.RLock` in Python 3.15. (Contributed by "
"Nikita Sobolev in :gh:`102029`.)"
msgstr ""
":mod:`threading`: Передача любых аргументов в :func:`threading.RLock` теперь "
"устарела. Версия C допускает любое количество аргументов и кваргов, но они "
"просто игнорируются. Версия Python не допускает никаких аргументов. Все "
"аргументы будут удалены из :func:`threading.RLock` в Python 3.15. (Добавлен "
"Никитой Соболевым в :gh:`102029`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:34
msgid ":class:`typing.NamedTuple`:"
msgstr ":class:`typing.NamedTuple`:"

#: ../../deprecations/pending-removal-in-3.15.rst:36
msgid ""
"The undocumented keyword argument syntax for creating :class:`!NamedTuple` "
"classes (``NT = NamedTuple(\"NT\", x=int)``) is deprecated, and will be "
"disallowed in 3.15. Use the class-based syntax or the functional syntax "
"instead."
msgstr ""
"Недокументированный синтаксис аргумента ключевого слова для создания "
"классов :class:`!NamedTuple` (``NT = NamedTuple(\"NT\", x=int)``) устарел и "
"будет запрещен в версии 3.15. Вместо этого используйте синтаксис на основе "
"классов или функциональный синтаксис."

#: ../../deprecations/pending-removal-in-3.15.rst:40
msgid ""
"When using the functional syntax to create a :class:`!NamedTuple` class, "
"failing to pass a value to the *fields* parameter (``NT = "
"NamedTuple(\"NT\")``) is deprecated. Passing ``None`` to the *fields* "
"parameter (``NT = NamedTuple(\"NT\", None)``) is also deprecated. Both will "
"be disallowed in Python 3.15. To create a :class:`!NamedTuple` class with 0 "
"fields, use ``class NT(NamedTuple): pass`` or ``NT = NamedTuple(\"NT\", "
"[])``."
msgstr ""
"При использовании функционального синтаксиса для создания класса :class:`!"
"NamedTuple` невозможность передать значение параметру *fields* (``NT = "
"NamedTuple(\"NT\")``) считается устаревшей. Передача None в параметр "
"*fields* (NT = NamedTuple(\"NT\", None)``) также не рекомендуется. Оба будут "
"запрещены в Python 3.15. Чтобы создать класс :class:`!NamedTuple` с 0 "
"полями, используйте ``class NT(NamedTuple): pass`` или ``NT = "
"NamedTuple(\"NT\", [])``."

#: ../../deprecations/pending-removal-in-3.15.rst:47
msgid ""
":class:`typing.TypedDict`: When using the functional syntax to create a :"
"class:`!TypedDict` class, failing to pass a value to the *fields* parameter "
"(``TD = TypedDict(\"TD\")``) is deprecated. Passing ``None`` to the *fields* "
"parameter (``TD = TypedDict(\"TD\", None)``) is also deprecated. Both will "
"be disallowed in Python 3.15. To create a :class:`!TypedDict` class with 0 "
"fields, use ``class TD(TypedDict): pass`` or ``TD = TypedDict(\"TD\", {})``."
msgstr ""
":class:`typing.TypedDict`: При использовании функционального синтаксиса для "
"создания класса :class:`!TypedDict` не удается передать значение параметру "
"*fields* (``TD = TypedDict(\"TD\")`` ) устарел. Передача None в параметр "
"*fields* (``TD = TypedDict(\"TD\", None)``) также не рекомендуется. Оба "
"будут запрещены в Python 3.15. Чтобы создать класс :class:`!TypedDict` с 0 "
"полями, используйте ``class TD(TypedDict): pass`` или ``TD = "
"TypedDict(\"TD\", {})``."

#: ../../deprecations/pending-removal-in-3.15.rst:54
msgid ""
":mod:`wave`: Deprecate the ``getmark()``, ``setmark()`` and ``getmarkers()`` "
"methods of the :class:`wave.Wave_read` and :class:`wave.Wave_write` classes. "
"They will be removed in Python 3.15. (Contributed by Victor Stinner in :gh:"
"`105096`.)"
msgstr ""
":mod:`wave`: Устаревшие методы ``getmark()``, ``setmark()`` и "
"``getmarkers()`` в :class:`wave.Wave_read` и :class:`wave. Классы "
"Wave_write`. Они будут удалены в Python 3.15. (Предоставлено Виктором "
"Стиннером в :gh:`105096`.)"

#: ../../deprecations/pending-removal-in-3.16.rst:2
msgid "Pending Removal in Python 3.16"
msgstr "Ожидает удаления в Python 3.16"

#: ../../deprecations/pending-removal-in-3.16.rst:4
msgid ""
":mod:`array`: :class:`array.array` ``'u'`` type (:c:type:`wchar_t`): use the "
"``'w'`` type instead (``Py_UCS4``)."
msgstr ""
":mod:`массив` : :class:`array.array` ``в'' тип ( :c:type:`wchar_t` ): "
"используйте ``'в'`` введите вместо этого ( ``Py_UCS4`` )."

#: ../../deprecations/pending-removal-in-3.16.rst:8
msgid ":mod:`builtins`: ``~bool``, bitwise inversion on bool."
msgstr ":mod:`встроенные` : ``~бул`` , побитовая инверсия bool."

#: ../../deprecations/pending-removal-in-3.16.rst:11
msgid ""
":mod:`symtable`: Deprecate :meth:`symtable.Class.get_methods` due to the "
"lack of interest. (Contributed by Bénédikt Tran in :gh:`119698`.)"
msgstr ""
":mod:`symtable` : Устарело :meth:`symtable.Class.get_methods` из-за "
"отсутствия интереса. (Предоставлено Бенедиктом Траном в :gh:`119698` .)"

#: ../../deprecations/c-api-pending-removal-in-future.rst:2
#: ../../deprecations/pending-removal-in-future.rst:2
msgid "Pending Removal in Future Versions"
msgstr "Ожидается удаление в будущих версиях"

#: ../../deprecations/pending-removal-in-future.rst:4
msgid ""
"The following APIs will be removed in the future, although there is "
"currently no date scheduled for their removal."
msgstr ""
"Следующие API будут удалены в будущем, хотя дата их удаления в настоящее "
"время не запланирована."

#: ../../deprecations/pending-removal-in-future.rst:7
msgid ""
":mod:`argparse`: Nesting argument groups and nesting mutually exclusive "
"groups are deprecated."
msgstr ""
":mod:`argparse`: Вложенные группы аргументов и вложенные взаимоисключающие "
"группы устарели."

#: ../../deprecations/pending-removal-in-future.rst:10
msgid ":mod:`array`'s ``'u'`` format code (:gh:`57281`)"
msgstr "Код формата ``'u'`` :mod:`array`` (:gh:`57281`)"

#: ../../deprecations/pending-removal-in-future.rst:12
msgid ":mod:`builtins`:"
msgstr ":mod:`builtins`:"

#: ../../deprecations/pending-removal-in-future.rst:14
msgid "``bool(NotImplemented)``."
msgstr "``bool(NotImplemented)``."

#: ../../deprecations/pending-removal-in-future.rst:15
msgid ""
"Generators: ``throw(type, exc, tb)`` and ``athrow(type, exc, tb)`` signature "
"is deprecated: use ``throw(exc)`` and ``athrow(exc)`` instead, the single "
"argument signature."
msgstr ""
"Генераторы: сигнатура ``throw(type, exc, tb)`` и ``athrow(type, exc, tb)`` "
"устарела: вместо этого используйте ``throw(exc)`` и ``athrow(exc)`` , "
"сигнатура одного аргумента."

#: ../../deprecations/pending-removal-in-future.rst:18
msgid ""
"Currently Python accepts numeric literals immediately followed by keywords, "
"for example ``0in x``, ``1or x``, ``0if 1else 2``.  It allows confusing and "
"ambiguous expressions like ``[0x1for x in y]`` (which can be interpreted as "
"``[0x1 for x in y]`` or ``[0x1f or x in y]``).  A syntax warning is raised "
"if the numeric literal is immediately followed by one of keywords :keyword:"
"`and`, :keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in`, :"
"keyword:`is` and :keyword:`or`.  In a future release it will be changed to a "
"syntax error. (:gh:`87999`)"
msgstr ""
"В настоящее время Python принимает числовые литералы, за которыми сразу "
"следуют ключевые слова, например ``0in x``, ``1or x``, ``0if 1else 2``. Это "
"позволяет использовать запутанные и неоднозначные выражения, такие как "
"``[0x1for x in y]`` (которые можно интерпретировать как ``[0x1 for x in y]`` "
"или ``[0x1f or x in y]``). Синтаксическое предупреждение выдается, если за "
"числовым литералом сразу следует одно из ключевых слов :keyword:`and`, :"
"keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in` , :keyword:`is` "
"и :keyword:`or`. В будущем выпуске это будет изменено на синтаксическую "
"ошибку. (:gh:`87999`)"

#: ../../deprecations/pending-removal-in-future.rst:26
msgid ""
"Support for ``__index__()`` and ``__int__()`` method returning non-int type: "
"these methods will be required to return an instance of a strict subclass "
"of :class:`int`."
msgstr ""
"Поддержка методов ``__index__()`` и ``__int__()``, возвращающих тип, "
"отличный от int: эти методы потребуются для возврата экземпляра строгого "
"подкласса :class:`int`."

#: ../../deprecations/pending-removal-in-future.rst:29
msgid ""
"Support for ``__float__()`` method returning a strict subclass of :class:"
"`float`: these methods will be required to return an instance of :class:"
"`float`."
msgstr ""
"Поддержка метода __float__(), возвращающего строгий подкласс :class:`float`: "
"эти методы потребуются для возврата экземпляра :class:`float`."

#: ../../deprecations/pending-removal-in-future.rst:32
msgid ""
"Support for ``__complex__()`` method returning a strict subclass of :class:"
"`complex`: these methods will be required to return an instance of :class:"
"`complex`."
msgstr ""
"Поддержка метода ``__complex__()``, возвращающего строгий подкласс :class:"
"`complex`: эти методы потребуются для возврата экземпляра :class:`complex`."

#: ../../deprecations/pending-removal-in-future.rst:35
msgid "Delegation of ``int()`` to ``__trunc__()`` method."
msgstr "Делегирование ``int()`` методу ``__trunc__()``."

#: ../../deprecations/pending-removal-in-future.rst:36
msgid ""
"Passing a complex number as the *real* or *imag* argument in the :func:"
"`complex` constructor is now deprecated; it should only be passed as a "
"single positional argument. (Contributed by Serhiy Storchaka in :gh:"
"`109218`.)"
msgstr ""
"Передача комплексного числа в качестве аргумента *real* или *imag* в "
"конструкторе :func:`complex` теперь не рекомендуется; его следует передавать "
"только как один позиционный аргумент. (Предоставлено Сергеем Сторчакой в ​​:gh:"
"`109218`.)"

#: ../../deprecations/pending-removal-in-future.rst:41
msgid ""
":mod:`calendar`: ``calendar.January`` and ``calendar.February`` constants "
"are deprecated and replaced by :data:`calendar.JANUARY` and :data:`calendar."
"FEBRUARY`. (Contributed by Prince Roshan in :gh:`103636`.)"
msgstr ""
":mod:`calendar`: Константы ``calendar.January`` и ``calendar.February`` "
"устарели и заменены на :data:`calendar.JANUARY` и :data:`calendar.FEBRUARY`. "
"(Предоставлено принцем Рошаном в :gh:`103636`.)"

#: ../../deprecations/pending-removal-in-future.rst:46
msgid ""
":attr:`codeobject.co_lnotab`: use the :meth:`codeobject.co_lines` method "
"instead."
msgstr ""
":attr:`codeobject.co_lnotab`: вместо этого используйте метод :meth:"
"`codeobject.co_lines`."

#: ../../deprecations/pending-removal-in-future.rst:49
msgid ":mod:`datetime`:"
msgstr ":mod:`datetime`:"

#: ../../deprecations/pending-removal-in-future.rst:51
msgid ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."
msgstr ""

#: ../../deprecations/pending-removal-in-future.rst:53
msgid ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:56
msgid ":mod:`gettext`: Plural value must be an integer."
msgstr ":mod:`gettext`: Множественное значение должно быть целым числом."

#: ../../deprecations/pending-removal-in-future.rst:58
msgid ":mod:`importlib`:"
msgstr ":mod:`importlib`:"

#: ../../deprecations/pending-removal-in-future.rst:60
msgid "``load_module()`` method: use ``exec_module()`` instead."
msgstr "exec_module"

#: ../../deprecations/pending-removal-in-future.rst:61
msgid ""
":func:`~importlib.util.cache_from_source` *debug_override* parameter is "
"deprecated: use the *optimization* parameter instead."
msgstr ""
":func:`~importlib.util.cache_from_source` Параметр *debug_override* устарел: "
"вместо него используйте параметр *optimization*."

#: ../../deprecations/pending-removal-in-future.rst:64
msgid ":mod:`importlib.metadata`:"
msgstr ":mod:`importlib.metadata`:"

#: ../../deprecations/pending-removal-in-future.rst:66
msgid "``EntryPoints`` tuple interface."
msgstr "Интерфейс кортежа ``EntryPoints``."

#: ../../deprecations/pending-removal-in-future.rst:67
msgid "Implicit ``None`` on return values."
msgstr "Неявное ``None`` для возвращаемых значений."

#: ../../deprecations/pending-removal-in-future.rst:69
msgid ""
":mod:`logging`: the ``warn()`` method has been deprecated since Python 3.3, "
"use :meth:`~logging.warning` instead."
msgstr ""
":mod:`logging`: метод ``warn()`` устарел, начиная с Python 3.3, вместо него "
"используйте :meth:`~logging.warning`."

#: ../../deprecations/pending-removal-in-future.rst:72
msgid ""
":mod:`mailbox`: Use of StringIO input and text mode is deprecated, use "
"BytesIO and binary mode instead."
msgstr ""
":mod:`mailbox`: Использование ввода StringIO и текстового режима устарело, "
"вместо этого используйте BytesIO и двоичный режим."

#: ../../deprecations/pending-removal-in-future.rst:75
msgid ""
":mod:`os`: Calling :func:`os.register_at_fork` in multi-threaded process."
msgstr ":mod:`os`: Вызов :func:`os.register_at_fork` в многопоточном процессе."

#: ../../deprecations/pending-removal-in-future.rst:77
msgid ""
":class:`!pydoc.ErrorDuringImport`: A tuple value for *exc_info* parameter is "
"deprecated, use an exception instance."
msgstr ""
":class:`!pydoc.ErrorDuringImport`: значение кортежа для параметра *exc_info* "
"устарело, используйте экземпляр исключения."

#: ../../deprecations/pending-removal-in-future.rst:80
msgid ""
":mod:`re`: More strict rules are now applied for numerical group references "
"and group names in regular expressions.  Only sequence of ASCII digits is "
"now accepted as a numerical reference.  The group name in bytes patterns and "
"replacement strings can now only contain ASCII letters and digits and "
"underscore. (Contributed by Serhiy Storchaka in :gh:`91760`.)"
msgstr ""
":mod:`re`: К числовым ссылкам на группы и именам групп в регулярных "
"выражениях теперь применяются более строгие правила. В качестве числовой "
"ссылки теперь принимается только последовательность цифр ASCII. Имя группы в "
"байтовых шаблонах и строках замены теперь может содержать только буквы "
"ASCII, цифры и подчеркивание. (Предоставлено Сергеем Сторчакой в ​​:gh:"
"`91760`.)"

#: ../../deprecations/pending-removal-in-future.rst:87
msgid ""
":mod:`!sre_compile`, :mod:`!sre_constants` and :mod:`!sre_parse` modules."
msgstr "Модули :mod:`!sre_compile`, :mod:`!sre_constants` и :mod:`!sre_parse`."

#: ../../deprecations/pending-removal-in-future.rst:89
msgid ""
":mod:`shutil`: :func:`~shutil.rmtree`'s *onerror* parameter is deprecated in "
"Python 3.12; use the *onexc* parameter instead."
msgstr ""
":mod:`shutil`: :func:`~shutil.rmtree`'s *onerror* parameter is deprecated in "
"Python 3.12; use the *onexc* parameter instead."

#: ../../deprecations/pending-removal-in-future.rst:92
msgid ":mod:`ssl` options and protocols:"
msgstr ":mod:`ssl` опции и протоколы:"

#: ../../deprecations/pending-removal-in-future.rst:94
msgid ":class:`ssl.SSLContext` without protocol argument is deprecated."
msgstr ":class:`ssl.SSLContext` без аргумента протокола устарел."

#: ../../deprecations/pending-removal-in-future.rst:95
msgid ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` and :meth:"
"`!selected_npn_protocol` are deprecated: use ALPN instead."
msgstr ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` and :meth:"
"`!selected_npn_protocol` are deprecated: use ALPN instead."

#: ../../deprecations/pending-removal-in-future.rst:98
msgid "``ssl.OP_NO_SSL*`` options"
msgstr "``ssl.OP_NO_SSL*`` опции"

#: ../../deprecations/pending-removal-in-future.rst:99
msgid "``ssl.OP_NO_TLS*`` options"
msgstr "``ssl.OP_NO_TLS*`` опции"

#: ../../deprecations/pending-removal-in-future.rst:100
msgid "``ssl.PROTOCOL_SSLv3``"
msgstr "``ssl.PROTOCOL_SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:101
msgid "``ssl.PROTOCOL_TLS``"
msgstr "``ssl.PROTOCOL_TLS``"

#: ../../deprecations/pending-removal-in-future.rst:102
msgid "``ssl.PROTOCOL_TLSv1``"
msgstr "``ssl.PROTOCOL_TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:103
msgid "``ssl.PROTOCOL_TLSv1_1``"
msgstr "``ssl.PROTOCOL_TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:104
msgid "``ssl.PROTOCOL_TLSv1_2``"
msgstr "``ssl.PROTOCOL_TLSv1_2``"

#: ../../deprecations/pending-removal-in-future.rst:105
msgid "``ssl.TLSVersion.SSLv3``"
msgstr "``ssl.TLSVersion.SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:106
msgid "``ssl.TLSVersion.TLSv1``"
msgstr "``ssl.TLSVersion.TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:107
msgid "``ssl.TLSVersion.TLSv1_1``"
msgstr "``ssl.TLSVersion.TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:109
msgid ""
":func:`sysconfig.is_python_build` *check_home* parameter is deprecated and "
"ignored."
msgstr ""
":func:`sysconfig.is_python_build` Параметр *check_home* устарел и "
"игнорируется."

#: ../../deprecations/pending-removal-in-future.rst:112
msgid ":mod:`threading` methods:"
msgstr ":mod:`threading` методы:"

#: ../../deprecations/pending-removal-in-future.rst:114
msgid ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."
msgstr ""

#: ../../deprecations/pending-removal-in-future.rst:115
msgid ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."
msgstr ""

#: ../../deprecations/pending-removal-in-future.rst:116
msgid ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use :"
"attr:`threading.Thread.daemon` attribute."
msgstr ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use :"
"attr:`threading.Thread.daemon` attribute."

#: ../../deprecations/pending-removal-in-future.rst:118
msgid ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use :"
"attr:`threading.Thread.name` attribute."
msgstr ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use :"
"attr:`threading.Thread.name` attribute."

#: ../../deprecations/pending-removal-in-future.rst:120
msgid ":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."
msgstr ""

#: ../../deprecations/pending-removal-in-future.rst:121
msgid ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."
msgstr ""

#: ../../deprecations/pending-removal-in-future.rst:123
msgid ":class:`typing.Text` (:gh:`92332`)."
msgstr ":class:`typing.Text` (:gh:`92332`)."

#: ../../deprecations/pending-removal-in-future.rst:125
msgid ""
":class:`unittest.IsolatedAsyncioTestCase`: it is deprecated to return a "
"value that is not ``None`` from a test case."
msgstr ""
":class:`unittest.IsolatedAsyncioTestCase`: не рекомендуется возвращать из "
"тестового примера значение, отличное от ``None``."

#: ../../deprecations/pending-removal-in-future.rst:128
msgid ""
":mod:`urllib.parse` deprecated functions: :func:`~urllib.parse.urlparse` "
"instead"
msgstr ""
":mod:`urllib.parse` устаревшая функция: используйте :func:`~urllib.parse."
"urlparse` "

#: ../../deprecations/pending-removal-in-future.rst:130
msgid "``splitattr()``"
msgstr "``splitattr()``"

#: ../../deprecations/pending-removal-in-future.rst:131
msgid "``splithost()``"
msgstr "``splithost()``"

#: ../../deprecations/pending-removal-in-future.rst:132
msgid "``splitnport()``"
msgstr "``splitnport()``"

#: ../../deprecations/pending-removal-in-future.rst:133
msgid "``splitpasswd()``"
msgstr "``splitpasswd()``"

#: ../../deprecations/pending-removal-in-future.rst:134
msgid "``splitport()``"
msgstr "``splitport()``"

#: ../../deprecations/pending-removal-in-future.rst:135
msgid "``splitquery()``"
msgstr "``splitquery()``"

#: ../../deprecations/pending-removal-in-future.rst:136
msgid "``splittag()``"
msgstr "``splittag()``"

#: ../../deprecations/pending-removal-in-future.rst:137
msgid "``splittype()``"
msgstr "``splittype()``"

#: ../../deprecations/pending-removal-in-future.rst:138
msgid "``splituser()``"
msgstr "``splituser()``"

#: ../../deprecations/pending-removal-in-future.rst:139
msgid "``splitvalue()``"
msgstr "``splitvalue()``"

#: ../../deprecations/pending-removal-in-future.rst:140
msgid "``to_bytes()``"
msgstr "``to_bytes()``"

#: ../../deprecations/pending-removal-in-future.rst:142
msgid ""
":mod:`urllib.request`: :class:`~urllib.request.URLopener` and :class:"
"`~urllib.request.FancyURLopener` style of invoking requests is deprecated. "
"Use newer :func:`~urllib.request.urlopen` functions and methods."
msgstr ""
":mod:`urllib.request`: :class:`~urllib.request.URLopener` and :class:"
"`~urllib.request.FancyURLopener` style of invoking requests is deprecated. "
"Use newer :func:`~urllib.request.urlopen` functions and methods."

#: ../../deprecations/pending-removal-in-future.rst:146
msgid ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` should not do partial "
"writes."
msgstr ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` не должен выполнять "
"частичную запись."

#: ../../deprecations/pending-removal-in-future.rst:149
msgid ""
":mod:`xml.etree.ElementTree`: Testing the truth value of an :class:`~xml."
"etree.ElementTree.Element` is deprecated. In a future release it will always "
"return ``True``. Prefer explicit ``len(elem)`` or ``elem is not None`` tests "
"instead."
msgstr ""
":mod:`xml.etree.ElementTree`: Проверка истинности :class:`~xml.etree."
"ElementTree.Element` устарела. В будущем выпуске он всегда будет возвращать "
"``True``. Вместо этого отдавайте предпочтение явным тестам ``len(elem)`` или "
"``elem is not None``."

#: ../../deprecations/pending-removal-in-future.rst:154
msgid ""
":meth:`zipimport.zipimporter.load_module` is deprecated: use :meth:"
"`~zipimport.zipimporter.exec_module` instead."
msgstr ""
":meth:`zipimport.zipimporter.load_module` устарел: вместо него используйте :"
"meth:`~zipimport.zipimporter.exec_module`."

#: ../../deprecations/index.rst:13
msgid "C API Deprecations"
msgstr ""

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:4
msgid ""
"The ``ma_version_tag`` field in :c:type:`PyDictObject` for extension modules "
"(:pep:`699`; :gh:`101193`)."
msgstr ""
"Поле ma_version_tag в :c:type:`PyDictObject` для модулей расширения (:pep:"
"`699`; :gh:`101193`)."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:7
msgid ""
"Creating :c:data:`immutable types <Py_TPFLAGS_IMMUTABLETYPE>` with mutable "
"bases (:gh:`95388`)."
msgstr ""
"Создание :c:data:`неизменяемых типов <Py_TPFLAGS_IMMUTABLETYPE>` с "
"изменяемыми базами (:gh:`95388`)."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:10
msgid ""
"Functions to configure Python's initialization, deprecated in Python 3.11:"
msgstr "Функции для настройки инициализации Python, устаревшие в Python 3.11:"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:12
msgid "``PySys_SetArgvEx()``: set :c:member:`PyConfig.argv` instead."
msgstr ""
"``PySys_SetArgvEx()``: вместо этого установите :c:member:`PyConfig.argv`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:13
msgid "``PySys_SetArgv()``: set :c:member:`PyConfig.argv` instead."
msgstr ""
"``PySys_SetArgv()``: вместо этого установите :c:member:`PyConfig.argv`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:14
msgid "``Py_SetProgramName()``: set :c:member:`PyConfig.program_name` instead."
msgstr ""
"``Py_SetProgramName()``: вместо этого установите :c:member:`PyConfig."
"program_name`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:15
msgid "``Py_SetPythonHome()``: set :c:member:`PyConfig.home` instead."
msgstr ""
"``Py_SetPythonHome()``: вместо этого установите :c:member:`PyConfig.home`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:17
#: ../../deprecations/c-api-pending-removal-in-3.14.rst:45
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with :c:type:"
"`PyConfig` instead."
msgstr ""
"Вместо этого API :c:func:`Py_InitializeFromConfig` следует использовать с :c:"
"type:`PyConfig`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:20
msgid "Global configuration variables:"
msgstr "Глобальные переменные конфигурации:"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:22
msgid ":c:var:`Py_DebugFlag`: use :c:member:`PyConfig.parser_debug` instead."
msgstr ""
":c:var:`Py_DebugFlag`: вместо этого используйте :c:member:`PyConfig."
"parser_debug`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:23
msgid ":c:var:`Py_VerboseFlag`: use :c:member:`PyConfig.verbose` instead."
msgstr ""
":c:var:`Py_VerboseFlag`: вместо этого используйте :c:member:`PyConfig."
"verbose`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:24
msgid ":c:var:`Py_QuietFlag`: use :c:member:`PyConfig.quiet` instead."
msgstr ""
":c:var:`Py_QuietFlag`: вместо этого используйте :c:member:`PyConfig.quiet`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:25
msgid ""
":c:var:`Py_InteractiveFlag`: use :c:member:`PyConfig.interactive` instead."
msgstr ""
":c:var:`Py_InteractiveFlag`: вместо этого используйте :c:member:`PyConfig."
"interactive`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:26
msgid ":c:var:`Py_InspectFlag`: use :c:member:`PyConfig.inspect` instead."
msgstr ""
":c:var:`Py_InspectFlag`: вместо этого используйте :c:member:`PyConfig."
"inspect`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:27
msgid ""
":c:var:`Py_OptimizeFlag`: use :c:member:`PyConfig.optimization_level` "
"instead."
msgstr ""
":c:var:`Py_OptimizeFlag`: вместо этого используйте :c:member:`PyConfig."
"optimization_level`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:28
msgid ":c:var:`Py_NoSiteFlag`: use :c:member:`PyConfig.site_import` instead."
msgstr ""
":c:var:`Py_NoSiteFlag`: вместо этого используйте :c:member:`PyConfig."
"site_import`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:29
msgid ""
":c:var:`Py_BytesWarningFlag`: use :c:member:`PyConfig.bytes_warning` instead."
msgstr ""
":c:var:`Py_BytesWarningFlag`: вместо этого используйте :c:member:`PyConfig."
"bytes_warning`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:30
msgid ""
":c:var:`Py_FrozenFlag`: use :c:member:`PyConfig.pathconfig_warnings` instead."
msgstr ""
":c:var:`Py_FrozenFlag`: вместо этого используйте :c:member:`PyConfig."
"pathconfig_warnings`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:31
msgid ""
":c:var:`Py_IgnoreEnvironmentFlag`: use :c:member:`PyConfig.use_environment` "
"instead."
msgstr ""
":c:var:`Py_IgnoreEnvironmentFlag`: вместо этого используйте :c:member:"
"`PyConfig.use_environment`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:32
msgid ""
":c:var:`Py_DontWriteBytecodeFlag`: use :c:member:`PyConfig.write_bytecode` "
"instead."
msgstr ""
":c:var:`Py_DontWriteBytecodeFlag`: вместо этого используйте :c:member:"
"`PyConfig.write_bytecode`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:33
msgid ""
":c:var:`Py_NoUserSiteDirectory`: use :c:member:`PyConfig."
"user_site_directory` instead."
msgstr ""
":c:var:`Py_NoUserSiteDirectory`: вместо этого используйте :c:member:"
"`PyConfig.user_site_directory`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:34
msgid ""
":c:var:`Py_UnbufferedStdioFlag`: use :c:member:`PyConfig.buffered_stdio` "
"instead."
msgstr ""
":c:var:`Py_UnbufferedStdioFlag`: вместо этого используйте :c:member:"
"`PyConfig.buffered_stdio`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:35
msgid ""
":c:var:`Py_HashRandomizationFlag`: use :c:member:`PyConfig.use_hash_seed` "
"and :c:member:`PyConfig.hash_seed` instead."
msgstr ""
":c:var:`Py_HashRandomizationFlag`: вместо этого используйте :c:member:"
"`PyConfig.use_hash_seed` и :c:member:`PyConfig.hash_seed`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:37
msgid ":c:var:`Py_IsolatedFlag`: use :c:member:`PyConfig.isolated` instead."
msgstr ""
":c:var:`Py_IsolatedFlag`: вместо этого используйте :c:member:`PyConfig."
"isolated`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:38
msgid ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding` instead."
msgstr ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: вместо этого используйте :c:member:"
"`PyPreConfig.legacy_windows_fs_encoding`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:39
msgid ""
":c:var:`Py_LegacyWindowsStdioFlag`: use :c:member:`PyConfig."
"legacy_windows_stdio` instead."
msgstr ""
":c:var:`Py_LegacyWindowsStdioFlag`: вместо этого используйте :c:member:"
"`PyConfig.legacy_windows_stdio`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:40
msgid ""
":c:var:`!Py_FileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncoding`: вместо этого используйте :c:member:"
"`PyConfig.filesystem_encoding`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:41
msgid ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding` instead."
msgstr ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: вместо этого используйте :c:"
"member:`PyConfig.filesystem_encoding`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:42
msgid ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: use :c:member:`PyConfig."
"filesystem_errors` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: вместо этого используйте :c:"
"member:`PyConfig.filesystem_errors`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:43
msgid ""
":c:var:`!Py_UTF8Mode`: use :c:member:`PyPreConfig.utf8_mode` instead. (see :"
"c:func:`Py_PreInitialize`)"
msgstr ""
":c:var:`!Py_UTF8Mode`: вместо этого используйте :c:member:`PyPreConfig."
"utf8_mode`. (см. :c:func:`Py_PreInitialize`)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:4
msgid "The bundled copy of ``libmpdecimal``."
msgstr "Связанная копия libmpdecimal."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:5
msgid ""
":c:func:`PyImport_ImportModuleNoBlock`: use :c:func:`PyImport_ImportModule` "
"instead."
msgstr ""
":c:func:`PyImport_ImportModuleNoBlock`: вместо этого используйте :c:func:"
"`PyImport_ImportModule`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:6
msgid ":c:func:`PyWeakref_GET_OBJECT`: use :c:func:`PyWeakref_GetRef` instead."
msgstr ""
":c:func:`PyWeakref_GET_OBJECT`: вместо этого используйте :c:func:"
"`PyWeakref_GetRef`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:7
msgid ":c:func:`PyWeakref_GetObject`: use :c:func:`PyWeakref_GetRef` instead."
msgstr ""
":c:func:`PyWeakref_GetObject`: вместо этого используйте :c:func:"
"`PyWeakref_GetRef`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:8
msgid ":c:type:`!Py_UNICODE_WIDE` type: use :c:type:`wchar_t` instead."
msgstr ""
":c:type:`!Py_UNICODE_WIDE` type: вместо этого используйте :c:type:`wchar_t`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:9
msgid ":c:type:`Py_UNICODE` type: use :c:type:`wchar_t` instead."
msgstr ":c:type:`Py_UNICODE` type: вместо этого используйте :c:type:`wchar_t`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:10
msgid "Python initialization functions:"
msgstr "Функции инициализации Python:"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:12
msgid ""
":c:func:`PySys_ResetWarnOptions`: clear :data:`sys.warnoptions` and :data:`!"
"warnings.filters` instead."
msgstr ""
":c:func:`PySys_ResetWarnOptions`: вместо этого очистите :data:`sys."
"warnoptions` и :data:`!warnings.filters`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:14
msgid ":c:func:`Py_GetExecPrefix`: get :data:`sys.exec_prefix` instead."
msgstr ""
":c:func:`Py_GetExecPrefix`: вместо этого получите :data:`sys.exec_prefix`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:15
msgid ":c:func:`Py_GetPath`: get :data:`sys.path` instead."
msgstr ":c:func:`Py_GetPath`: вместо этого получите :data:`sys.path`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:16
msgid ":c:func:`Py_GetPrefix`: get :data:`sys.prefix` instead."
msgstr ":c:func:`Py_GetPrefix`: вместо этого получите :data:`sys.prefix`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:17
msgid ":c:func:`Py_GetProgramFullPath`: get :data:`sys.executable` instead."
msgstr ""
":c:func:`Py_GetProgramFullPath`: вместо этого получите :data:`sys."
"executable`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:18
msgid ":c:func:`Py_GetProgramName`: get :data:`sys.executable` instead."
msgstr ""
":c:func:`Py_GetProgramName`: вместо этого получите :data:`sys.executable`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:19
msgid ""
":c:func:`Py_GetPythonHome`: get :c:member:`PyConfig.home` or the :envvar:"
"`PYTHONHOME` environment variable instead."
msgstr ""
":c:func:`Py_GetPythonHome`: вместо этого получите :c:member:`PyConfig.home` "
"или переменную среды :envvar:`PYTHONHOME`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:4
msgid ""
"The following APIs are deprecated and will be removed, although there is "
"currently no date scheduled for their removal."
msgstr ""
"Следующие API устарели и будут удалены, хотя дата их удаления в настоящее "
"время не запланирована."

#: ../../deprecations/c-api-pending-removal-in-future.rst:7
msgid ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: unneeded since Python 3.8."
msgstr ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: не нужен, начиная с Python 3.8."

#: ../../deprecations/c-api-pending-removal-in-future.rst:8
msgid ":c:func:`PyErr_Fetch`: use :c:func:`PyErr_GetRaisedException` instead."
msgstr ""
":c:func:`PyErr_Fetch`: вместо этого используйте :c:func:"
"`PyErr_GetRaizedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:9
msgid ""
":c:func:`PyErr_NormalizeException`: use :c:func:`PyErr_GetRaisedException` "
"instead."
msgstr ""
":c:func:`PyErr_NormalizeException`: вместо этого используйте :c:func:"
"`PyErr_GetRaizedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:10
msgid ""
":c:func:`PyErr_Restore`: use :c:func:`PyErr_SetRaisedException` instead."
msgstr ""
":c:func:`PyErr_Restore`: вместо этого используйте :c:func:"
"`PyErr_SetRaizedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:11
msgid ""
":c:func:`PyModule_GetFilename`: use :c:func:`PyModule_GetFilenameObject` "
"instead."
msgstr ""
":c:func:`PyModule_GetFilename`: вместо этого используйте :c:func:"
"`PyModule_GetFilenameObject`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:12
msgid ":c:func:`PyOS_AfterFork`: use :c:func:`PyOS_AfterFork_Child` instead."
msgstr ""
":c:func:`PyOS_AfterFork`: вместо этого используйте :c:func:"
"`PyOS_AfterFork_Child`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:13
msgid ""
":c:func:`PySlice_GetIndicesEx`: use :c:func:`PySlice_Unpack` and :c:func:"
"`PySlice_AdjustIndices` instead."
msgstr ""
":c:func:`PySlice_GetIndicesEx`: вместо этого используйте :c:func:"
"`PySlice_Unpack` и :c:func:`PySlice_AdjustIndices`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:14
msgid ""
":c:func:`!PyUnicode_AsDecodedObject`: use :c:func:`PyCodec_Decode` instead."
msgstr ""
":c:func:`!PyUnicode_AsDecodedObject`: вместо этого используйте :c:func:"
"`PyCodec_Decode`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:15
msgid ""
":c:func:`!PyUnicode_AsDecodedUnicode`: use :c:func:`PyCodec_Decode` instead."
msgstr ""
":c:func:`!PyUnicode_AsDecodedUnicode`: вместо этого используйте :c:func:"
"`PyCodec_Decode`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:16
msgid ""
":c:func:`!PyUnicode_AsEncodedObject`: use :c:func:`PyCodec_Encode` instead."
msgstr ""
":c:func:`!PyUnicode_AsEncodedObject`: вместо этого используйте :c:func:"
"`PyCodec_Encode`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:17
msgid ""
":c:func:`!PyUnicode_AsEncodedUnicode`: use :c:func:`PyCodec_Encode` instead."
msgstr ""
":c:func:`!PyUnicode_AsEncodedUnicode`: вместо этого используйте :c:func:"
"`PyCodec_Encode`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:18
msgid ":c:func:`PyUnicode_READY`: unneeded since Python 3.12"
msgstr ":c:func:`PyUnicode_READY`: не требуется, начиная с Python 3.12."

#: ../../deprecations/c-api-pending-removal-in-future.rst:19
msgid ":c:func:`!PyErr_Display`: use :c:func:`PyErr_DisplayException` instead."
msgstr ""
":c:func:`!PyErr_Display`: вместо этого используйте :c:func:"
"`PyErr_DisplayException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:20
msgid ""
":c:func:`!_PyErr_ChainExceptions`: use ``_PyErr_ChainExceptions1`` instead."
msgstr ""
":c:func:`!_PyErr_ChainExceptions`: вместо этого используйте "
"``_PyErr_ChainExceptions1``."

#: ../../deprecations/c-api-pending-removal-in-future.rst:21
msgid ""
":c:member:`!PyBytesObject.ob_shash` member: call :c:func:`PyObject_Hash` "
"instead."
msgstr ""
":c:member:`!PyBytesObject.ob_shash`member: вместо этого вызовите :c:func:"
"`PyObject_Hash`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:23
msgid ":c:member:`!PyDictObject.ma_version_tag` member."
msgstr ":c:member:`!PyDictObject.ma_version_tag` member."

#: ../../deprecations/c-api-pending-removal-in-future.rst:24
msgid "Thread Local Storage (TLS) API:"
msgstr "API локального хранилища потоков (TLS):"

#: ../../deprecations/c-api-pending-removal-in-future.rst:26
msgid ""
":c:func:`PyThread_create_key`: use :c:func:`PyThread_tss_alloc` instead."
msgstr ""
":c:func:`PyThread_create_key`: вместо этого используйте :c:func:"
"`PyThread_tss_alloc`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:27
msgid ":c:func:`PyThread_delete_key`: use :c:func:`PyThread_tss_free` instead."
msgstr ""
":c:func:`PyThread_delete_key`: вместо этого используйте :c:func:"
"`PyThread_tss_free`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:28
msgid ""
":c:func:`PyThread_set_key_value`: use :c:func:`PyThread_tss_set` instead."
msgstr ""
":c:func:`PyThread_set_key_value`: вместо этого используйте :c:func:"
"`PyThread_tss_set`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:29
msgid ""
":c:func:`PyThread_get_key_value`: use :c:func:`PyThread_tss_get` instead."
msgstr ""
":c:func:`PyThread_get_key_value`: вместо этого используйте :c:func:"
"`PyThread_tss_get`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:30
msgid ""
":c:func:`PyThread_delete_key_value`: use :c:func:`PyThread_tss_delete` "
"instead."
msgstr ""
":c:func:`PyThread_delete_key_value`: вместо этого используйте :c:func:"
"`PyThread_tss_delete`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:31
msgid ":c:func:`PyThread_ReInitTLS`: unneeded since Python 3.7."
msgstr ":c:func:`PyThread_ReInitTLS`: не нужен, начиная с Python 3.7."
