# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Roustam Khamidoulline, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-20 14:17+0000\n"
"PO-Revision-Date: 2024-08-02 14:17+0000\n"
"Last-Translator: Roustam Khamidoulline, 2024\n"
"Language-Team: Russian (https://app.transifex.com/python-doc/teams/5390/"
"ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || "
"(n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:2
msgid "Pending Removal in Python 3.15"
msgstr "Ожидает удаления в Python 3.15"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:4
msgid "The bundled copy of ``libmpdecimal``."
msgstr "Связанная копия libmpdecimal."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:5
msgid ""
":c:func:`PyImport_ImportModuleNoBlock`: use :c:func:`PyImport_ImportModule` "
"instead."
msgstr ""
":c:func:`PyImport_ImportModuleNoBlock`: вместо этого используйте :c:func:"
"`PyImport_ImportModule`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:6
msgid ":c:func:`PyWeakref_GET_OBJECT`: use :c:func:`PyWeakref_GetRef` instead."
msgstr ""
":c:func:`PyWeakref_GET_OBJECT`: вместо этого используйте :c:func:"
"`PyWeakref_GetRef`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:7
msgid ":c:func:`PyWeakref_GetObject`: use :c:func:`PyWeakref_GetRef` instead."
msgstr ""
":c:func:`PyWeakref_GetObject`: вместо этого используйте :c:func:"
"`PyWeakref_GetRef`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:8
msgid ":c:type:`!Py_UNICODE_WIDE` type: use :c:type:`wchar_t` instead."
msgstr ""
":c:type:`!Py_UNICODE_WIDE` type: вместо этого используйте :c:type:`wchar_t`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:9
msgid ":c:type:`Py_UNICODE` type: use :c:type:`wchar_t` instead."
msgstr ":c:type:`Py_UNICODE` type: вместо этого используйте :c:type:`wchar_t`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:10
msgid "Python initialization functions:"
msgstr "Функции инициализации Python:"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:12
msgid ""
":c:func:`PySys_ResetWarnOptions`: clear :data:`sys.warnoptions` and :data:`!"
"warnings.filters` instead."
msgstr ""
":c:func:`PySys_ResetWarnOptions`: вместо этого очистите :data:`sys."
"warnoptions` и :data:`!warnings.filters`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:14
msgid ":c:func:`Py_GetExecPrefix`: get :data:`sys.exec_prefix` instead."
msgstr ""
":c:func:`Py_GetExecPrefix`: вместо этого получите :data:`sys.exec_prefix`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:15
msgid ":c:func:`Py_GetPath`: get :data:`sys.path` instead."
msgstr ":c:func:`Py_GetPath`: вместо этого получите :data:`sys.path`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:16
msgid ":c:func:`Py_GetPrefix`: get :data:`sys.prefix` instead."
msgstr ":c:func:`Py_GetPrefix`: вместо этого получите :data:`sys.prefix`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:17
msgid ":c:func:`Py_GetProgramFullPath`: get :data:`sys.executable` instead."
msgstr ""
":c:func:`Py_GetProgramFullPath`: вместо этого получите :data:`sys."
"executable`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:18
msgid ":c:func:`Py_GetProgramName`: get :data:`sys.executable` instead."
msgstr ""
":c:func:`Py_GetProgramName`: вместо этого получите :data:`sys.executable`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:19
msgid ""
":c:func:`Py_GetPythonHome`: get :c:member:`PyConfig.home` or the :envvar:"
"`PYTHONHOME` environment variable instead."
msgstr ""
":c:func:`Py_GetPythonHome`: вместо этого получите :c:member:`PyConfig.home` "
"или переменную среды :envvar:`PYTHONHOME`."
