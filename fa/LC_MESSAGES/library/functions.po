# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-07 14:53+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Persian (https://app.transifex.com/python-doc/teams/5390/"
"fa/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fa\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/functions.rst:5 ../../library/functions.rst:11
msgid "Built-in Functions"
msgstr "توابع داخلی"

#: ../../library/functions.rst:7
msgid ""
"The Python interpreter has a number of functions and types built into it "
"that are always available.  They are listed here in alphabetical order."
msgstr ""
"مفسر پایتون تعدادی توابع و انواع دارد که همیشه در دسترس هستند.  آنها در "
"اینجا به ترتیب حروف الفبا فهرست شده اند."

#: ../../library/functions.rst:0
msgid "**A**"
msgstr "**A**"

#: ../../library/functions.rst:0
msgid ":func:`abs`"
msgstr ":func:`abs`"

#: ../../library/functions.rst:0
msgid ":func:`aiter`"
msgstr ":func:`aiter`"

#: ../../library/functions.rst:0
msgid ":func:`all`"
msgstr ":func:`all`"

#: ../../library/functions.rst:0
msgid ":func:`anext`"
msgstr ":func:`anext`"

#: ../../library/functions.rst:0
msgid ":func:`any`"
msgstr ":func:`any`"

#: ../../library/functions.rst:0
msgid ":func:`ascii`"
msgstr ":func:`ascii`"

#: ../../library/functions.rst:0
msgid "**B**"
msgstr "**B**"

#: ../../library/functions.rst:0
msgid ":func:`bin`"
msgstr ":func:`bin`"

#: ../../library/functions.rst:0
msgid ":func:`bool`"
msgstr ":func:`bool`"

#: ../../library/functions.rst:0
msgid ":func:`breakpoint`"
msgstr ":func:`breakpoint`"

#: ../../library/functions.rst:0
msgid "|func-bytearray|_"
msgstr "|func-bytearray|_"

#: ../../library/functions.rst:0
msgid "|func-bytes|_"
msgstr "|func-bytes|_"

#: ../../library/functions.rst:0
msgid "**C**"
msgstr "**C**"

#: ../../library/functions.rst:0
msgid ":func:`callable`"
msgstr ":func:`callable`"

#: ../../library/functions.rst:0
msgid ":func:`chr`"
msgstr ":func:`chr`"

#: ../../library/functions.rst:0
msgid ":func:`classmethod`"
msgstr ":func:`classmethod`"

#: ../../library/functions.rst:0
msgid ":func:`compile`"
msgstr ":func:`compile`"

#: ../../library/functions.rst:0
msgid ":func:`complex`"
msgstr ":func:`complex`"

#: ../../library/functions.rst:0
msgid "**D**"
msgstr "**D**"

#: ../../library/functions.rst:0
msgid ":func:`delattr`"
msgstr ":func:`delattr`"

#: ../../library/functions.rst:0
msgid "|func-dict|_"
msgstr "|func-dict|_"

#: ../../library/functions.rst:0
msgid ":func:`dir`"
msgstr ":func:`dir`"

#: ../../library/functions.rst:0
msgid ":func:`divmod`"
msgstr ":func:`divmod`"

#: ../../library/functions.rst:0
msgid "**E**"
msgstr "**E**"

#: ../../library/functions.rst:0
msgid ":func:`enumerate`"
msgstr ":func:`enumerate`"

#: ../../library/functions.rst:0
msgid ":func:`eval`"
msgstr ":func:`eval`"

#: ../../library/functions.rst:0
msgid ":func:`exec`"
msgstr ":func:`exec`"

#: ../../library/functions.rst:0
msgid "**F**"
msgstr "**F**"

#: ../../library/functions.rst:0
msgid ":func:`filter`"
msgstr ":func:`filter`"

#: ../../library/functions.rst:0
msgid ":func:`float`"
msgstr ":func:`float`"

#: ../../library/functions.rst:0
msgid ":func:`format`"
msgstr ":func:`format`"

#: ../../library/functions.rst:0
msgid "|func-frozenset|_"
msgstr "|func-frozenset|_"

#: ../../library/functions.rst:0
msgid "**G**"
msgstr "**G**"

#: ../../library/functions.rst:0
msgid ":func:`getattr`"
msgstr ":func:`getattr`"

#: ../../library/functions.rst:0
msgid ":func:`globals`"
msgstr ":func:`globals`"

#: ../../library/functions.rst:0
msgid "**H**"
msgstr "**H**"

#: ../../library/functions.rst:0
msgid ":func:`hasattr`"
msgstr ":func:`hasattr`"

#: ../../library/functions.rst:0
msgid ":func:`hash`"
msgstr ":func:`hash`"

#: ../../library/functions.rst:0
msgid ":func:`help`"
msgstr ":func:`help`"

#: ../../library/functions.rst:0
msgid ":func:`hex`"
msgstr ":func:`hex`"

#: ../../library/functions.rst:0
msgid "**I**"
msgstr "**I**"

#: ../../library/functions.rst:0
msgid ":func:`id`"
msgstr ":func:`id`"

#: ../../library/functions.rst:0
msgid ":func:`input`"
msgstr ":func:`input`"

#: ../../library/functions.rst:0
msgid ":func:`int`"
msgstr ":func:`int`"

#: ../../library/functions.rst:0
msgid ":func:`isinstance`"
msgstr ":func:`isinstance`"

#: ../../library/functions.rst:0
msgid ":func:`issubclass`"
msgstr ":func:`issubclass`"

#: ../../library/functions.rst:0
msgid ":func:`iter`"
msgstr ":func:`iter`"

#: ../../library/functions.rst:0
msgid "**L**"
msgstr "**L**"

#: ../../library/functions.rst:0
msgid ":func:`len`"
msgstr ":func:`len`"

#: ../../library/functions.rst:0
msgid "|func-list|_"
msgstr "|func-list|_"

#: ../../library/functions.rst:0
msgid ":func:`locals`"
msgstr ":func:`locals`"

#: ../../library/functions.rst:0
msgid "**M**"
msgstr "**M**"

#: ../../library/functions.rst:0
msgid ":func:`map`"
msgstr ":func:`map`"

#: ../../library/functions.rst:0
msgid ":func:`max`"
msgstr ":func:`max`"

#: ../../library/functions.rst:0
msgid "|func-memoryview|_"
msgstr "|func-memoryview|_"

#: ../../library/functions.rst:0
msgid ":func:`min`"
msgstr ":func:`min`"

#: ../../library/functions.rst:0
msgid "**N**"
msgstr "**N**"

#: ../../library/functions.rst:0
msgid ":func:`next`"
msgstr ":func:`next`"

#: ../../library/functions.rst:0
msgid "**O**"
msgstr "**O**"

#: ../../library/functions.rst:0
msgid ":func:`object`"
msgstr ":func:`object`"

#: ../../library/functions.rst:0
msgid ":func:`oct`"
msgstr ":func:`oct`"

#: ../../library/functions.rst:0
msgid ":func:`open`"
msgstr ":func:`open`"

#: ../../library/functions.rst:0
msgid ":func:`ord`"
msgstr ":func:`ord`"

#: ../../library/functions.rst:0
msgid "**P**"
msgstr "**P**"

#: ../../library/functions.rst:0
msgid ":func:`pow`"
msgstr ":func:`pow`"

#: ../../library/functions.rst:0
msgid ":func:`print`"
msgstr ":func:`print`"

#: ../../library/functions.rst:0
msgid ":func:`property`"
msgstr ":func:`property`"

#: ../../library/functions.rst:0
msgid "**R**"
msgstr "**R**"

#: ../../library/functions.rst:0
msgid "|func-range|_"
msgstr "|func-range|_"

#: ../../library/functions.rst:0
msgid ":func:`repr`"
msgstr ":func:`repr`"

#: ../../library/functions.rst:0
msgid ":func:`reversed`"
msgstr ":func:`reversed`"

#: ../../library/functions.rst:0
msgid ":func:`round`"
msgstr ":func:`round`"

#: ../../library/functions.rst:0
msgid "**S**"
msgstr "**S**"

#: ../../library/functions.rst:0
msgid "|func-set|_"
msgstr "|func-set|_"

#: ../../library/functions.rst:0
msgid ":func:`setattr`"
msgstr ":func:`setattr`"

#: ../../library/functions.rst:0
msgid ":func:`slice`"
msgstr ":func:`slice`"

#: ../../library/functions.rst:0
msgid ":func:`sorted`"
msgstr ":func:`sorted`"

#: ../../library/functions.rst:0
msgid ":func:`staticmethod`"
msgstr ":func:`staticmethod`"

#: ../../library/functions.rst:0
msgid "|func-str|_"
msgstr "|func-str|_"

#: ../../library/functions.rst:0
msgid ":func:`sum`"
msgstr ":func:`sum`"

#: ../../library/functions.rst:0
msgid ":func:`super`"
msgstr ":func:`super`"

#: ../../library/functions.rst:0
msgid "**T**"
msgstr "**T**"

#: ../../library/functions.rst:0
msgid "|func-tuple|_"
msgstr "|func-tuple|_"

#: ../../library/functions.rst:0
msgid ":func:`type`"
msgstr ":func:`type`"

#: ../../library/functions.rst:0
msgid "**V**"
msgstr "**V**"

#: ../../library/functions.rst:0
msgid ":func:`vars`"
msgstr ":func:`vars`"

#: ../../library/functions.rst:0
msgid "**Z**"
msgstr "**Z**"

#: ../../library/functions.rst:0
msgid ":func:`zip`"
msgstr ":func:`zip`"

#: ../../library/functions.rst:0
msgid "**_**"
msgstr "**_**"

#: ../../library/functions.rst:0
msgid ":func:`__import__`"
msgstr ":func:`__import__`"

#: ../../library/functions.rst:59
msgid ""
"Return the absolute value of a number.  The argument may be an integer, a "
"floating-point number, or an object implementing :meth:`~object.__abs__`. If "
"the argument is a complex number, its magnitude is returned."
msgstr ""
"قدر مطلق یک عدد را برگردانید.  آرگومان ممکن است یک عدد صحیح، یک عدد ممیز "
"شناور یا یک شی در حال پیاده سازی :meth:`~object.__abs__` باشد. اگر آرگومان "
"یک عدد مختلط باشد، مقدار آن برگردانده می شود."

#: ../../library/functions.rst:67
msgid ""
"Return an :term:`asynchronous iterator` for an :term:`asynchronous "
"iterable`. Equivalent to calling ``x.__aiter__()``."
msgstr ""
"یک :term:`asynchronous iterator` برای :term:`asynchronous iterable` "
"برگردانید. معادل فراخوانی ``x.__aiter__()``."

#: ../../library/functions.rst:70
msgid "Note: Unlike :func:`iter`, :func:`aiter` has no 2-argument variant."
msgstr "نکته: برخلاف :func:`iter`، :func:`aiter` هیچ گونه آرگومان 2 ندارد."

#: ../../library/functions.rst:76
msgid ""
"Return ``True`` if all elements of the *iterable* are true (or if the "
"iterable is empty).  Equivalent to::"
msgstr ""
"اگر همه عناصر *iterable* درست هستند (یا اگر تکرارپذیر خالی است) ``True`` را "
"برگردانید.  معادل::"

#: ../../library/functions.rst:79
msgid ""
"def all(iterable):\n"
"    for element in iterable:\n"
"        if not element:\n"
"            return False\n"
"    return True"
msgstr ""
"def all(iterable):\n"
"    for element in iterable:\n"
"        if not element:\n"
"            return False\n"
"    return True"

#: ../../library/functions.rst:89
msgid ""
"When awaited, return the next item from the given :term:`asynchronous "
"iterator`, or *default* if given and the iterator is exhausted."
msgstr ""
"در صورت انتظار، آیتم بعدی را از :term:`asynchronous iterator` داده شده "
"برگردانید، یا اگر تکرار کننده تمام شده است، *default* را برگردانید."

#: ../../library/functions.rst:92
msgid ""
"This is the async variant of the :func:`next` builtin, and behaves similarly."
msgstr "این نوع async داخلی :func:`next` است و رفتار مشابهی دارد."

#: ../../library/functions.rst:95
msgid ""
"This calls the :meth:`~object.__anext__` method of *async_iterator*, "
"returning an :term:`awaitable`. Awaiting this returns the next value of the "
"iterator. If *default* is given, it is returned if the iterator is "
"exhausted, otherwise :exc:`StopAsyncIteration` is raised."
msgstr ""
"این روش :meth:`~object.__anext__` از *async_iterator* را فراخوانی می کند و "
"یک :term:`awaitable` را برمی گرداند. در انتظار این مقدار بعدی تکرار کننده را "
"برمی گرداند. اگر *default* داده شود، اگر تکرار کننده تمام شده باشد، "
"برگردانده می شود، در غیر این صورت :exc:`StopAsyncIteration` افزایش می یابد."

#: ../../library/functions.rst:104
msgid ""
"Return ``True`` if any element of the *iterable* is true.  If the iterable "
"is empty, return ``False``.  Equivalent to::"
msgstr ""
"اگر هر عنصری از *iterable* درست است، ``True`` را برگردانید.  اگر تکرارپذیر "
"خالی است، ``False`` را برگردانید.  معادل::"

#: ../../library/functions.rst:107
msgid ""
"def any(iterable):\n"
"    for element in iterable:\n"
"        if element:\n"
"            return True\n"
"    return False"
msgstr ""
"def any(iterable):\n"
"    for element in iterable:\n"
"        if element:\n"
"            return True\n"
"    return False"

#: ../../library/functions.rst:116
msgid ""
"As :func:`repr`, return a string containing a printable representation of an "
"object, but escape the non-ASCII characters in the string returned by :func:"
"`repr` using ``\\x``, ``\\u``, or ``\\U`` escapes.  This generates a string "
"similar to that returned by :func:`repr` in Python 2."
msgstr ""
"به عنوان :func:`repr`، یک رشته حاوی نمایش قابل چاپ یک شی را برگردانید، اما "
"از کاراکترهای غیرASCII در رشته ای که توسط :func:`repr` با استفاده از "
"``\\x``، ``\\u`` یا ``\\U`` برگردانده شده است، فرار کنید.  این رشته ای شبیه "
"به رشته ای که توسط :func:`repr` در پایتون 2 برگردانده شده است ایجاد می کند."

#: ../../library/functions.rst:124
msgid ""
"Convert an integer number to a binary string prefixed with \"0b\". The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`~object.__index__` method that returns an "
"integer. Some examples:"
msgstr ""
"یک عدد صحیح را به یک رشته باینری با پیشوند \"0b\" تبدیل کنید. نتیجه یک عبارت "
"پایتون معتبر است. اگر *x* یک شی پایتون :class:`int` نیست، باید یک متد :meth:"
"`~object.__index__` تعریف کند که یک عدد صحیح برمی گرداند. چند نمونه:"

#: ../../library/functions.rst:134
msgid ""
"If the prefix \"0b\" is desired or not, you can use either of the following "
"ways."
msgstr ""
"اگر پیشوند \"0b\" مورد نظر است یا خیر، می توانید از یکی از راه های زیر "
"استفاده کنید."

#: ../../library/functions.rst:141 ../../library/functions.rst:921
#: ../../library/functions.rst:1260
msgid "See also :func:`format` for more information."
msgstr "همچنین برای اطلاعات بیشتر به :func:`format` مراجعه کنید."

#: ../../library/functions.rst:146
msgid ""
"Return a Boolean value, i.e. one of ``True`` or ``False``.  The argument is "
"converted using the standard :ref:`truth testing procedure <truth>`. If the "
"argument is false or omitted, this returns ``False``; otherwise, it returns "
"``True``.  The :class:`bool` class is a subclass of :class:`int` (see :ref:"
"`typesnumeric`). It cannot be subclassed further.  Its only instances are "
"``False`` and ``True`` (see :ref:`typebool`)."
msgstr ""
"یک مقدار بولی، یعنی یکی از ``True`` یا ``False`` را برگردانید.  آرگومان با "
"استفاده از استاندارد :ref:`truth testing procedure <truth>` تبدیل می شود. "
"اگر آرگومان نادرست یا حذف شده باشد، ``False`` را برمی گرداند. در غیر این "
"صورت، ``True`` را برمی گرداند.  کلاس :class:`bool` زیر کلاس :class:`int` است "
"(به :ref:`typesnumeric` مراجعه کنید). نمی توان آن را بیشتر طبقه بندی کرد.  "
"تنها نمونه های آن ``False`` و ``True`` هستند (به :ref:`typebool` مراجعه "
"کنید)."

#: ../../library/functions.rst:156 ../../library/functions.rst:786
msgid "The parameter is now positional-only."
msgstr "پارامتر اکنون فقط موقعیتی است."

#: ../../library/functions.rst:161
msgid ""
"This function drops you into the debugger at the call site.  Specifically, "
"it calls :func:`sys.breakpointhook`, passing ``args`` and ``kws`` straight "
"through.  By default, ``sys.breakpointhook()`` calls :func:`pdb.set_trace` "
"expecting no arguments.  In this case, it is purely a convenience function "
"so you don't have to explicitly import :mod:`pdb` or type as much code to "
"enter the debugger.  However, :func:`sys.breakpointhook` can be set to some "
"other function and :func:`breakpoint` will automatically call that, allowing "
"you to drop into the debugger of choice. If :func:`sys.breakpointhook` is "
"not accessible, this function will raise :exc:`RuntimeError`."
msgstr ""
"این تابع شما را وارد دیباگر در سایت تماس می کند.  به طور خاص، :func:`sys."
"breakpointhook` را فراخوانی می کند و ``args`` و ``kws`` را مستقیماً عبور می "
"دهد.  به‌طور پیش‌فرض، ``sys.breakpointhook()`` :func:`pdb.set_trace` را "
"فراخوانی می‌کند و انتظار هیچ آرگومانی را ندارد.  در این مورد، این صرفاً یک "
"تابع راحت است، بنابراین نیازی به وارد کردن صریح :mod:`pdb` یا تایپ کد زیادی "
"برای ورود به دیباگر نیست.  با این حال، :func:`sys.breakpointhook` را می توان "
"روی عملکرد دیگری تنظیم کرد و :func:`breakpoint` به طور خودکار آن را فراخوانی "
"می کند و به شما امکان می دهد وارد دیباگر انتخابی شوید. اگر :func:`sys."
"breakpointhook` قابل دسترسی نباشد، این تابع :exc:`RuntimeError` را افزایش می "
"دهد."

#: ../../library/functions.rst:173
msgid ""
"By default, the behavior of :func:`breakpoint` can be changed with the :"
"envvar:`PYTHONBREAKPOINT` environment variable. See :func:`sys."
"breakpointhook` for usage details."
msgstr ""
"به طور پیش فرض، رفتار :func:`breakpoint` را می توان با متغیر محیطی :envvar:"
"`PYTHONBREAKPOINT` تغییر داد. برای جزئیات استفاده به :func:`sys."
"breakpointhook` مراجعه کنید."

#: ../../library/functions.rst:177
msgid ""
"Note that this is not guaranteed if :func:`sys.breakpointhook` has been "
"replaced."
msgstr ""
"توجه داشته باشید که اگر :func:`sys.breakpointhook` جایگزین شده باشد، این "
"تضمین نمی شود."

#: ../../library/functions.rst:180
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.breakpoint`` with "
"argument ``breakpointhook``."
msgstr ""
"یک :ref:`auditing event <auditing>` ``builtins.breakpoint`` را با آرگومان "
"``breakpointhook`` افزایش می دهد."

#: ../../library/functions.rst:190
msgid ""
"Return a new array of bytes.  The :class:`bytearray` class is a mutable "
"sequence of integers in the range 0 <= x < 256.  It has most of the usual "
"methods of mutable sequences, described in :ref:`typesseq-mutable`, as well "
"as most methods that the :class:`bytes` type has, see :ref:`bytes-methods`."
msgstr ""
"یک آرایه جدید از بایت ها را برگردانید.  کلاس :class:`bytearray` یک دنباله "
"قابل تغییر از اعداد صحیح در محدوده 0 <= x < 256 است. این کلاس دارای اکثر روش "
"های معمول توالی های قابل تغییر است که در :ref:`typesseq-mutable` توضیح داده "
"شده است، و همچنین اکثر روش هایی که نوع :class:`bytes` دارد، به :ref:`bytes-"
"methods` مراجعه کنید."

#: ../../library/functions.rst:195
msgid ""
"The optional *source* parameter can be used to initialize the array in a few "
"different ways:"
msgstr ""
"پارامتر اختیاری *source* می تواند برای مقداردهی اولیه آرایه به چند روش مختلف "
"استفاده شود:"

#: ../../library/functions.rst:198
msgid ""
"If it is a *string*, you must also give the *encoding* (and optionally, "
"*errors*) parameters; :func:`bytearray` then converts the string to bytes "
"using :meth:`str.encode`."
msgstr ""
"اگر *string* است، باید پارامترهای *encoding* (و در صورت تمایل, *errors*) را "
"نیز بدهید. سپس :func:`bytearray` با استفاده از :meth:`str.encode` رشته را به "
"بایت تبدیل می کند."

#: ../../library/functions.rst:202
msgid ""
"If it is an *integer*, the array will have that size and will be initialized "
"with null bytes."
msgstr ""
"اگر *integer* باشد، آرایه آن اندازه را خواهد داشت و با بایت های تهی مقداردهی "
"اولیه می شود."

#: ../../library/functions.rst:205
msgid ""
"If it is an object conforming to the :ref:`buffer interface "
"<bufferobjects>`, a read-only buffer of the object will be used to "
"initialize the bytes array."
msgstr ""
"اگر یک شی مطابق با :ref:`buffer interface <bufferobjects>` باشد، یک بافر فقط "
"خواندنی از شی برای مقداردهی اولیه آرایه بایت استفاده خواهد شد."

#: ../../library/functions.rst:208
msgid ""
"If it is an *iterable*, it must be an iterable of integers in the range ``0 "
"<= x < 256``, which are used as the initial contents of the array."
msgstr ""
"اگر *iterable* باشد، باید تکرارپذیری از اعداد صحیح در محدوده ``0 <= x < "
"256`` باشد که به عنوان محتویات اولیه آرایه استفاده می شود."

#: ../../library/functions.rst:211
msgid "Without an argument, an array of size 0 is created."
msgstr "بدون آرگومان، آرایه ای به اندازه 0 ایجاد می شود."

#: ../../library/functions.rst:213
msgid "See also :ref:`binaryseq` and :ref:`typebytearray`."
msgstr "همچنین به :ref:`binaryseq` و :ref:`typebytearray` مراجعه کنید."

#: ../../library/functions.rst:222
msgid ""
"Return a new \"bytes\" object which is an immutable sequence of integers in "
"the range ``0 <= x < 256``.  :class:`bytes` is an immutable version of :"
"class:`bytearray` -- it has the same non-mutating methods and the same "
"indexing and slicing behavior."
msgstr ""
"یک شی \"بایت\" جدید که دنباله ای غیرقابل تغییر از اعداد صحیح در محدوده ``0 "
"<= x < 256`` است را برگردانید.  :class:`bytes` یک نسخه تغییرناپذیر از :class:"
"`bytearray` است -- روشهای غیر جهشی یکسان و رفتار نمایه سازی و برش یکسانی "
"دارد."

#: ../../library/functions.rst:227
msgid ""
"Accordingly, constructor arguments are interpreted as for :func:`bytearray`."
msgstr "بر این اساس، آرگومان های سازنده برای :func:`bytearray` تفسیر می شوند."

#: ../../library/functions.rst:229
msgid "Bytes objects can also be created with literals, see :ref:`strings`."
msgstr ""
"اشیاء بایتی را نیز می توان با لفظ ایجاد کرد، به :ref:`strings` مراجعه کنید."

#: ../../library/functions.rst:231
msgid "See also :ref:`binaryseq`, :ref:`typebytes`, and :ref:`bytes-methods`."
msgstr ""
"همچنین به :ref:`binaryseq`، :ref:`typebytes` و :ref:`bytes-methods` مراجعه "
"کنید."

#: ../../library/functions.rst:236
msgid ""
"Return :const:`True` if the *object* argument appears callable, :const:"
"`False` if not.  If this returns ``True``, it is still possible that a call "
"fails, but if it is ``False``, calling *object* will never succeed. Note "
"that classes are callable (calling a class returns a new instance); "
"instances are callable if their class has a :meth:`~object.__call__` method."
msgstr ""
"اگر آرگومان *object* قابل فراخوانی ظاهر شد، :const:`True` را برگردانید، در "
"غیر این صورت، :const:`False` را برگردانید.  اگر ``True`` را برگرداند، باز هم "
"ممکن است یک تماس با شکست مواجه شود، اما اگر ``False`` باشد، فراخوانی "
"*object* هرگز موفق نخواهد شد. توجه داشته باشید که کلاس ها قابل فراخوانی "
"هستند (با فراخوانی یک کلاس یک نمونه جدید برمی گردد). اگر کلاس آنها دارای "
"متد :meth:`~object.__call__` باشد، نمونه ها قابل فراخوانی هستند."

#: ../../library/functions.rst:242
msgid ""
"This function was first removed in Python 3.0 and then brought back in "
"Python 3.2."
msgstr "این تابع ابتدا در پایتون 3.0 حذف شد و سپس در پایتون 3.2 بازگردانده شد."

#: ../../library/functions.rst:249
msgid ""
"Return the string representing a character whose Unicode code point is the "
"integer *i*.  For example, ``chr(97)`` returns the string ``'a'``, while "
"``chr(8364)`` returns the string ``'€'``. This is the inverse of :func:`ord`."
msgstr ""
"رشته ای که نشان دهنده یک کاراکتر است که نقطه کد یونیکد آن عدد صحیح *i* است "
"را برگردانید.  برای مثال، ``chr(97)`` رشته ``'a'`` را برمی‌گرداند، در حالی که "
"``chr(8364)`` رشته ``'€'`` را برمی‌گرداند. این برعکس :func:`ord` است."

#: ../../library/functions.rst:253
msgid ""
"The valid range for the argument is from 0 through 1,114,111 (0x10FFFF in "
"base 16).  :exc:`ValueError` will be raised if *i* is outside that range."
msgstr ""
"محدوده معتبر برای آرگومان از 0 تا 1,114,111 (0x10FFFF در پایه 16) است.  اگر "
"*i* خارج از این محدوده باشد، :exc:`ValueError` افزایش می یابد."

#: ../../library/functions.rst:259
msgid "Transform a method into a class method."
msgstr "یک متد را به متد کلاسی تبدیل کنید."

#: ../../library/functions.rst:261
msgid ""
"A class method receives the class as an implicit first argument, just like "
"an instance method receives the instance. To declare a class method, use "
"this idiom::"
msgstr ""
"یک متد کلاس، کلاس را به عنوان اولین آرگومان ضمنی دریافت می کند، درست مانند "
"متد نمونه، نمونه را دریافت می کند. برای اعلام متد کلاس، از این اصطلاح "
"استفاده کنید::"

#: ../../library/functions.rst:265
msgid ""
"class C:\n"
"    @classmethod\n"
"    def f(cls, arg1, arg2): ..."
msgstr ""
"class C:\n"
"    @classmethod\n"
"    def f(cls, arg1, arg2): ..."

#: ../../library/functions.rst:269
msgid ""
"The ``@classmethod`` form is a function :term:`decorator` -- see :ref:"
"`function` for details."
msgstr ""
"فرم ``@classmethod`` یک تابع :term:`decorator` است -- برای جزئیات به :ref:"
"`function` مراجعه کنید."

#: ../../library/functions.rst:272
msgid ""
"A class method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``).  The instance is ignored except for its "
"class. If a class method is called for a derived class, the derived class "
"object is passed as the implied first argument."
msgstr ""
"یک متد کلاس را می توان بر روی کلاس (مانند ``C.f()``) یا در یک نمونه (مانند "
"``C().f()``) فراخوانی کرد.  نمونه به جز کلاس آن نادیده گرفته می شود. اگر یک "
"متد کلاس برای یک کلاس مشتق شده فراخوانی شود، شی کلاس مشتق شده به عنوان اولین "
"آرگومان ضمنی ارسال می شود."

#: ../../library/functions.rst:277
msgid ""
"Class methods are different than C++ or Java static methods. If you want "
"those, see :func:`staticmethod` in this section. For more information on "
"class methods, see :ref:`types`."
msgstr ""
"متدهای کلاس با روش‌های استاتیک C++ یا جاوا متفاوت هستند. اگر آنها را می "
"خواهید، :func:`staticmethod` را در این بخش ببینید. برای اطلاعات بیشتر در "
"مورد روش های کلاس، به :ref:`types` مراجعه کنید."

#: ../../library/functions.rst:281
msgid ""
"Class methods can now wrap other :term:`descriptors <descriptor>` such as :"
"func:`property`."
msgstr ""
"متدهای کلاس اکنون می توانند :term:`descriptors <descriptor>` دیگر مانند :"
"func:`property` را بپیچند."

#: ../../library/functions.rst:285
msgid ""
"Class methods now inherit the method attributes (:attr:`~function."
"__module__`, :attr:`~function.__name__`, :attr:`~function.__qualname__`, :"
"attr:`~function.__doc__` and :attr:`~function.__annotations__`) and have a "
"new ``__wrapped__`` attribute."
msgstr ""
"متدهای کلاس اکنون ویژگی های متد (:attr:`~function.__module__`, :attr:"
"`~function.__name__`, :attr:`~function.__qualname__`, :attr:`~function."
"__doc__` و :attr:`~function.__annotations__`) را به ارث می برند و یک ویژگی "
"``__wrapped__`` جدید دارند."

#: ../../library/functions.rst:292
msgid ""
"Class methods can no longer wrap other :term:`descriptors <descriptor>` such "
"as :func:`property`."
msgstr ""
"متدهای کلاس دیگر نمی توانند :term:`descriptors <descriptor>` دیگر مانند :"
"func:`property` را بپیچند."

#: ../../library/functions.rst:299
msgid ""
"Compile the *source* into a code or AST object.  Code objects can be "
"executed by :func:`exec` or :func:`eval`.  *source* can either be a normal "
"string, a byte string, or an AST object.  Refer to the :mod:`ast` module "
"documentation for information on how to work with AST objects."
msgstr ""
"*source* را در یک کد یا شی AST کامپایل کنید.  اشیاء کد را می توان توسط :func:"
"`exec` یا :func:`eval` اجرا کرد.  *source* می تواند یک رشته معمولی، یک رشته "
"بایت یا یک شی AST باشد.  برای اطلاعات در مورد نحوه کار با اشیاء AST به "
"مستندات ماژول :mod:`ast` مراجعه کنید."

#: ../../library/functions.rst:304
msgid ""
"The *filename* argument should give the file from which the code was read; "
"pass some recognizable value if it wasn't read from a file (``'<string>'`` "
"is commonly used)."
msgstr ""
"آرگومان *filename* باید فایلی را ارائه کند که کد از آن خوانده شده است. اگر "
"از یک فایل خوانده نشده باشد مقداری قابل تشخیص را ارسال کنید (معمولاً از "
"``'<string>'`` استفاده می شود)."

#: ../../library/functions.rst:308
msgid ""
"The *mode* argument specifies what kind of code must be compiled; it can be "
"``'exec'`` if *source* consists of a sequence of statements, ``'eval'`` if "
"it consists of a single expression, or ``'single'`` if it consists of a "
"single interactive statement (in the latter case, expression statements that "
"evaluate to something other than ``None`` will be printed)."
msgstr ""
"آرگومان *mode* مشخص می کند که چه نوع کدی باید کامپایل شود. اگر *source* از "
"دنباله ای از دستورات تشکیل شده باشد، می تواند ``'exec'`` باشد، اگر از یک "
"عبارت واحد تشکیل شده باشد ``'eval'``، یا اگر از یک عبارت تعاملی تشکیل شده "
"باشد، ``'single'`` باشد (در مورد دوم, عبارات عبارتی که به چیزی غیر از "
"``None`` ارزیابی می شوند چاپ می شوند)."

#: ../../library/functions.rst:314
msgid ""
"The optional arguments *flags* and *dont_inherit* control which :ref:"
"`compiler options <ast-compiler-flags>` should be activated and which :ref:"
"`future features <future>` should be allowed. If neither is present (or both "
"are zero) the code is compiled with the same flags that affect the code that "
"is calling :func:`compile`. If the *flags* argument is given and "
"*dont_inherit* is not (or is zero) then the compiler options and the future "
"statements specified by the *flags* argument are used in addition to those "
"that would be used anyway. If *dont_inherit* is a non-zero integer then the "
"*flags* argument is it -- the flags (future features and compiler options) "
"in the surrounding code are ignored."
msgstr ""
"آرگومان های اختیاری *flags* و *dont_inherit* کنترل می کنند که کدام :ref:"
"`compiler options <ast-compiler-flags>` باید فعال شود و کدام :ref:`future "
"features <future>` باید مجاز باشد. اگر هیچ کدام وجود نداشته باشد (یا هر دو "
"صفر باشند), کد با همان پرچم هایی که روی کدی که :func:`compile` را فراخوانی "
"می کند تأثیر می گذارد، کامپایل می شود. اگر آرگومان *flags* داده شود و "
"*dont_inherit* نباشد (یا صفر باشد), گزینه های کامپایلر و عبارات آینده مشخص "
"شده توسط آرگومان *flags* علاوه بر مواردی که به هر حال مورد استفاده قرار می "
"گیرند استفاده می شود. اگر *dont_inherit* یک عدد صحیح غیر صفر است، آرگومان "
"*flags* همان است -- پرچم ها (ویژگی های آینده و گزینه های کامپایلر) در کد "
"اطراف نادیده گرفته می شوند."

#: ../../library/functions.rst:325
msgid ""
"Compiler options and future statements are specified by bits which can be "
"bitwise ORed together to specify multiple options. The bitfield required to "
"specify a given future feature can be found as the :attr:`~__future__."
"_Feature.compiler_flag` attribute on the :class:`~__future__._Feature` "
"instance in the :mod:`__future__` module. :ref:`Compiler flags <ast-compiler-"
"flags>` can be found in :mod:`ast` module, with ``PyCF_`` prefix."
msgstr ""
"گزینه‌های کامپایلر و عبارات آینده توسط بیت‌هایی مشخص می‌شوند که می‌توانند به "
"صورت بیتی با هم OR شوند تا چندین گزینه را مشخص کنند. فیلد بیتی مورد نیاز "
"برای تعیین یک ویژگی آینده داده شده را می توان به عنوان ویژگی :attr:"
"`~__future__._Feature.compiler_flag` در نمونه :class:`~__future__._Feature` "
"در ماژول :mod:`__future__` یافت. :ref:`Compiler flags <ast-compiler-flags>` "
"را می توان در ماژول :mod:`ast` با پیشوند ``PyCF_`` یافت."

#: ../../library/functions.rst:333
msgid ""
"The argument *optimize* specifies the optimization level of the compiler; "
"the default value of ``-1`` selects the optimization level of the "
"interpreter as given by :option:`-O` options.  Explicit levels are ``0`` (no "
"optimization; ``__debug__`` is true), ``1`` (asserts are removed, "
"``__debug__`` is false) or ``2`` (docstrings are removed too)."
msgstr ""
"آرگومان *optimize* سطح بهینه سازی کامپایلر را مشخص می کند. مقدار پیش‌فرض "
"``-1`` سطح بهینه‌سازی مفسر را مطابق با گزینه‌های :option:`-O` انتخاب می‌کند.  "
"سطوح صریح ``0`` (بدون بهینه سازی؛ ``__debug__`` درست است)، ``1`` (ادعاها حذف "
"می شوند, ``__debug__`` نادرست است) یا ``2`` (رشته های اسناد نیز حذف می شوند)."

#: ../../library/functions.rst:339
msgid ""
"This function raises :exc:`SyntaxError` if the compiled source is invalid, "
"and :exc:`ValueError` if the source contains null bytes."
msgstr ""
"اگر منبع کامپایل شده نامعتبر باشد، این تابع :exc:`SyntaxError` را افزایش می "
"دهد و اگر منبع حاوی بایت های تهی باشد، :exc:`ValueError` را افزایش می دهد."

#: ../../library/functions.rst:342
msgid ""
"If you want to parse Python code into its AST representation, see :func:`ast."
"parse`."
msgstr ""
"اگر می خواهید کد پایتون را در نمایش AST آن تجزیه کنید، به :func:`ast.parse` "
"مراجعه کنید."

#: ../../library/functions.rst:345 ../../library/functions.rst:347
msgid ""
"Raises an :ref:`auditing event <auditing>` ``compile`` with arguments "
"``source`` and ``filename``. This event may also be raised by implicit "
"compilation."
msgstr ""
"یک :ref:`auditing event <auditing>` ``compile`` را با آرگومان های ``source`` "
"و ``filename`` افزایش می دهد. این رویداد ممکن است با گردآوری ضمنی نیز مطرح "
"شود."

#: ../../library/functions.rst:353
msgid ""
"When compiling a string with multi-line code in ``'single'`` or ``'eval'`` "
"mode, input must be terminated by at least one newline character.  This is "
"to facilitate detection of incomplete and complete statements in the :mod:"
"`code` module."
msgstr ""
"هنگام کامپایل یک رشته با کد چند خطی در حالت ``'single'`` یا ``'eval'``، "
"ورودی باید حداقل با یک کاراکتر خط جدید خاتمه یابد.  این برای تسهیل تشخیص "
"عبارات ناقص و کامل در ماژول :mod:`code` است."

#: ../../library/functions.rst:360
msgid ""
"It is possible to crash the Python interpreter with a sufficiently large/"
"complex string when compiling to an AST object due to stack depth "
"limitations in Python's AST compiler."
msgstr ""
"به دلیل محدودیت‌های عمق پشته در کامپایلر AST پایتون، ممکن است هنگام کامپایل "
"کردن به یک شی AST، مفسر پایتون با یک رشته به اندازه کافی بزرگ/پیچیده خراب "
"شود."

#: ../../library/functions.rst:364
msgid ""
"Allowed use of Windows and Mac newlines.  Also, input in ``'exec'`` mode "
"does not have to end in a newline anymore.  Added the *optimize* parameter."
msgstr ""
"استفاده از خطوط جدید ویندوز و مک مجاز است.  همچنین، ورودی در حالت ``'exec'`` "
"دیگر لازم نیست به خط جدید ختم شود.  پارامتر *optimize* اضافه شد."

#: ../../library/functions.rst:368
msgid ""
"Previously, :exc:`TypeError` was raised when null bytes were encountered in "
"*source*."
msgstr ""
"پیش از این، :exc:`TypeError` زمانی که بایت های تهی در *source* مواجه می "
"شدند، افزایش می یافت."

#: ../../library/functions.rst:372
msgid ""
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` can now be passed in flags to enable "
"support for top-level ``await``, ``async for``, and ``async with``."
msgstr ""
"اکنون می‌توان ``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` را در پرچم‌ها برای فعال کردن "
"پشتیبانی از ``await``، ``async for`` و ``async with`` سطح بالا منتقل کرد."

#: ../../library/functions.rst:381
msgid ""
"Convert a single string or number to a complex number, or create a complex "
"number from real and imaginary parts."
msgstr ""
"یک رشته یا عدد را به یک عدد مختلط تبدیل کنید یا یک عدد مختلط از قسمت های "
"واقعی و خیالی ایجاد کنید."

#: ../../library/functions.rst:384 ../../library/functions.rst:731
#: ../../library/functions.rst:977
msgid "Examples:"
msgstr "مثال ها:"

#: ../../library/functions.rst:386
msgid ""
">>> complex('+1.23')\n"
"(1.23+0j)\n"
">>> complex('-4.5j')\n"
"-4.5j\n"
">>> complex('-1.23+4.5j')\n"
"(-1.23+4.5j)\n"
">>> complex('\\t( -1.23+4.5J )\\n')\n"
"(-1.23+4.5j)\n"
">>> complex('-Infinity+NaNj')\n"
"(-inf+nanj)\n"
">>> complex(1.23)\n"
"(1.23+0j)\n"
">>> complex(imag=-4.5)\n"
"-4.5j\n"
">>> complex(-1.23, 4.5)\n"
"(-1.23+4.5j)"
msgstr ""
">>> complex('+1.23')\n"
"(1.23+0j)\n"
">>> complex('-4.5j')\n"
"-4.5j\n"
">>> complex('-1.23+4.5j')\n"
"(-1.23+4.5j)\n"
">>> complex('\\t( -1.23+4.5J )\\n')\n"
"(-1.23+4.5j)\n"
">>> complex('-Infinity+NaNj')\n"
"(-inf+nanj)\n"
">>> complex(1.23)\n"
"(1.23+0j)\n"
">>> complex(imag=-4.5)\n"
"-4.5j\n"
">>> complex(-1.23, 4.5)\n"
"(-1.23+4.5j)"

#: ../../library/functions.rst:405
msgid ""
"If the argument is a string, it must contain either a real part (in the same "
"format as for :func:`float`) or an imaginary part (in the same format but "
"with a ``'j'`` or ``'J'`` suffix), or both real and imaginary parts (the "
"sign of the imaginary part is mandatory in this case). The string can "
"optionally be surrounded by whitespaces and the round parentheses ``'('`` "
"and ``')'``, which are ignored. The string must not contain whitespace "
"between ``'+'``, ``'-'``, the ``'j'`` or ``'J'`` suffix, and the decimal "
"number. For example, ``complex('1+2j')`` is fine, but ``complex('1 + 2j')`` "
"raises :exc:`ValueError`. More precisely, the input must conform to the :"
"token:`~float:complexvalue` production rule in the following grammar, after "
"parentheses and leading and trailing whitespace characters are removed:"
msgstr ""
"اگر آرگومان یک رشته باشد، باید شامل یک قسمت واقعی (با همان قالب :func:"
"`float`) یا یک قسمت خیالی (در همان قالب اما با پسوند ``'j'`` یا ``'J'``) یا "
"هر دو قسمت واقعی و خیالی باشد (علامت قسمت خیالی در این مورد اجباری است). "
"رشته را می توان به صورت اختیاری با فضاهای خالی و پرانتزهای گرد ``'('`` و "
"``')'`` احاطه کرد که نادیده گرفته می شوند. رشته نباید دارای فضای خالی بین "
"``'+'``، ``'-'``، پسوند ``'j'`` یا ``'J'`` و عدد اعشاری باشد. به عنوان مثال، "
"``complex('1+2j')`` خوب است، اما ``complex('1 + 2j')`` :exc:`ValueError` را "
"افزایش می دهد. به‌طور دقیق‌تر، ورودی باید با قانون تولید :token:`~float:"
"complexvalue` در گرامر زیر مطابقت داشته باشد، پس از حذف پرانتزها و "
"کاراکترهای فضای خالی اصلی و انتهایی:"

#: ../../library/functions.rst:424
msgid ""
"If the argument is a number, the constructor serves as a numeric conversion "
"like :class:`int` and :class:`float`. For a general Python object ``x``, "
"``complex(x)`` delegates to ``x.__complex__()``. If :meth:`~object."
"__complex__` is not defined then it falls back to :meth:`~object.__float__`. "
"If :meth:`!__float__` is not defined then it falls back to :meth:`~object."
"__index__`."
msgstr ""
"اگر آرگومان یک عدد باشد، سازنده به عنوان یک تبدیل عددی مانند :class:`int` و :"
"class:`float` عمل می کند. برای یک شیء عمومی پایتون ``x``، ``complex(x)`` به "
"``x.__complex__()`` واگذار می شود. اگر :meth:`~object.__complex__` تعریف "
"نشده باشد، به :meth:`~object.__float__` برمی گردد. اگر :meth:`!__float__` "
"تعریف نشده باشد، به :meth:`~object.__index__` برمی گردد."

#: ../../library/functions.rst:433
msgid ""
"If two arguments are provided or keyword arguments are used, each argument "
"may be any numeric type (including complex). If both arguments are real "
"numbers, return a complex number with the real component *real* and the "
"imaginary component *imag*. If both arguments are complex numbers, return a "
"complex number with the real component ``real.real-imag.imag`` and the "
"imaginary component ``real.imag+imag.real``. If one of arguments is a real "
"number, only its real component is used in the above expressions."
msgstr ""
"اگر دو آرگومان ارائه شود یا از آرگومان های کلمه کلیدی استفاده شود، هر "
"آرگومان ممکن است از هر نوع عددی (از جمله مختلط) باشد. اگر هر دو آرگومان "
"اعداد واقعی هستند، یک عدد مختلط با جزء واقعی *real* و جزء خیالی *imag* "
"برگردانید. اگر هر دو آرگومان اعداد مختلط هستند، یک عدد مختلط با مؤلفه واقعی "
"``real.real-imag.imag`` و مؤلفه خیالی ``real.imag+imag.real`` برگردانید. اگر "
"یکی از آرگومان ها یک عدد واقعی باشد، فقط جزء واقعی آن در عبارات بالا استفاده "
"می شود."

#: ../../library/functions.rst:443
msgid "If all arguments are omitted, returns ``0j``."
msgstr "اگر همه آرگومان ها حذف شوند، ``0j`` را برمی گرداند."

#: ../../library/functions.rst:445
msgid "The complex type is described in :ref:`typesnumeric`."
msgstr "نوع پیچیده در :ref:`typesnumeric` توضیح داده شده است."

#: ../../library/functions.rst:447 ../../library/functions.rst:783
#: ../../library/functions.rst:1026
msgid "Grouping digits with underscores as in code literals is allowed."
msgstr "گروه بندی ارقام با زیرخط مانند حروف کد مجاز است."

#: ../../library/functions.rst:450
msgid ""
"Falls back to :meth:`~object.__index__` if :meth:`~object.__complex__` and :"
"meth:`~object.__float__` are not defined."
msgstr ""
"اگر :meth:`~object.__complex__` و :meth:`~object.__float__` تعریف نشده باشند "
"به :meth:`~object.__index__` برمی گردد."

#: ../../library/functions.rst:457
msgid ""
"This is a relative of :func:`setattr`.  The arguments are an object and a "
"string.  The string must be the name of one of the object's attributes.  The "
"function deletes the named attribute, provided the object allows it.  For "
"example, ``delattr(x, 'foobar')`` is equivalent to ``del x.foobar``. *name* "
"need not be a Python identifier (see :func:`setattr`)."
msgstr ""
"این یکی از بستگان :func:`setattr` است.  آرگومان ها یک شی و یک رشته هستند.  "
"رشته باید نام یکی از ویژگی های شی باشد.  تابع ویژگی نامگذاری شده را حذف می "
"کند، مشروط بر اینکه شیء اجازه دهد.  به عنوان مثال، ``delattr(x, 'foobar')`` "
"معادل ``del x.foobar`` است. *name* نباید یک شناسه پایتون باشد (به :func:"
"`setattr` مراجعه کنید)."

#: ../../library/functions.rst:470
msgid ""
"Create a new dictionary.  The :class:`dict` object is the dictionary class. "
"See :class:`dict` and :ref:`typesmapping` for documentation about this class."
msgstr ""
"یک فرهنگ لغت جدید ایجاد کنید.  شی :class:`dict` کلاس دیکشنری است. برای "
"مستندات مربوط به این کلاس به :class:`dict` و :ref:`typesmapping` مراجعه کنید."

#: ../../library/functions.rst:473
msgid ""
"For other containers see the built-in :class:`list`, :class:`set`, and :"
"class:`tuple` classes, as well as the :mod:`collections` module."
msgstr ""
"برای سایر کانتینرها به کلاس های داخلی :class:`list`، :class:`set` و :class:"
"`tuple` و همچنین ماژول :mod:`collections` مراجعه کنید."

#: ../../library/functions.rst:480
msgid ""
"Without arguments, return the list of names in the current local scope.  "
"With an argument, attempt to return a list of valid attributes for that "
"object."
msgstr ""
"بدون آرگومان، فهرست اسامی را در محدوده محلی فعلی برگردانید.  با یک آرگومان، "
"سعی کنید لیستی از ویژگی های معتبر برای آن شی را برگردانید."

#: ../../library/functions.rst:483
msgid ""
"If the object has a method named :meth:`~object.__dir__`, this method will "
"be called and must return the list of attributes. This allows objects that "
"implement a custom :func:`~object.__getattr__` or :func:`~object."
"__getattribute__` function to customize the way :func:`dir` reports their "
"attributes."
msgstr ""
"اگر شی دارای متدی به نام :meth:`~object.__dir__` باشد، این متد فراخوانی می "
"شود و باید لیست ویژگی ها را برگرداند. این به اشیایی که یک تابع سفارشی :func:"
"`~object.__getattr__` یا :func:`~object.__getattribute__` را پیاده سازی می "
"کنند اجازه می دهد تا نحوه گزارش :func:`dir` ویژگی های خود را سفارشی کنند."

#: ../../library/functions.rst:490
msgid ""
"If the object does not provide :meth:`~object.__dir__`, the function tries "
"its best to gather information from the object's :attr:`~object.__dict__` "
"attribute, if defined, and from its type object.  The resulting list is not "
"necessarily complete and may be inaccurate when the object has a custom :"
"func:`~object.__getattr__`."
msgstr ""
"اگر شیء :meth:`~object.__dir__` را ارائه نکند، تابع تمام تلاش خود را می کند "
"تا اطلاعات را از ویژگی :attr:`~object.__dict__` شیء، در صورت تعریف، و از شی "
"نوع آن جمع آوری کند.  لیست حاصل لزوماً کامل نیست و ممکن است زمانی که شیء "
"دارای :func:`~object.__getattr__` سفارشی باشد، نادرست باشد."

#: ../../library/functions.rst:496
msgid ""
"The default :func:`dir` mechanism behaves differently with different types "
"of objects, as it attempts to produce the most relevant, rather than "
"complete, information:"
msgstr ""
"مکانیسم پیش‌فرض :func:`dir` با انواع مختلف اشیا رفتار متفاوتی دارد، زیرا تلاش "
"می‌کند مرتبط‌ترین و نه کامل‌ترین اطلاعات را تولید کند:"

#: ../../library/functions.rst:500
msgid ""
"If the object is a module object, the list contains the names of the "
"module's attributes."
msgstr "اگر شی یک شی ماژول است، لیست شامل نام ویژگی های ماژول است."

#: ../../library/functions.rst:503
msgid ""
"If the object is a type or class object, the list contains the names of its "
"attributes, and recursively of the attributes of its bases."
msgstr ""
"اگر شی یک شی نوع یا کلاس باشد، لیست شامل نام ویژگی های آن و به صورت بازگشتی "
"از ویژگی های پایه های آن است."

#: ../../library/functions.rst:506
msgid ""
"Otherwise, the list contains the object's attributes' names, the names of "
"its class's attributes, and recursively of the attributes of its class's "
"base classes."
msgstr ""
"در غیر این صورت، لیست شامل نام ویژگی های شی، نام ویژگی های کلاس آن، و به "
"صورت بازگشتی از ویژگی های کلاس های پایه کلاس خود است."

#: ../../library/functions.rst:510
msgid "The resulting list is sorted alphabetically.  For example:"
msgstr "لیست به دست آمده بر اساس حروف الفبا مرتب شده است.  به عنوان مثال:"

#: ../../library/functions.rst:530
msgid ""
"Because :func:`dir` is supplied primarily as a convenience for use at an "
"interactive prompt, it tries to supply an interesting set of names more than "
"it tries to supply a rigorously or consistently defined set of names, and "
"its detailed behavior may change across releases.  For example, metaclass "
"attributes are not in the result list when the argument is a class."
msgstr ""
"از آنجایی که :func:`dir` عمدتاً به عنوان یک راحتی برای استفاده در یک اعلان "
"تعاملی ارائه می‌شود، سعی می‌کند مجموعه‌ای جالب از نام‌ها را بیش از تلاش برای "
"ارائه مجموعه‌ای از نام‌ها به‌طور دقیق یا به‌طور پیوسته ارائه کند، و رفتار جزئیات "
"آن ممکن است در نسخه‌ها تغییر کند.  به عنوان مثال، هنگامی که آرگومان یک کلاس "
"است، ویژگی های متاکلاس در لیست نتیجه وجود ندارد."

#: ../../library/functions.rst:540
msgid ""
"Take two (non-complex) numbers as arguments and return a pair of numbers "
"consisting of their quotient and remainder when using integer division.  "
"With mixed operand types, the rules for binary arithmetic operators apply.  "
"For integers, the result is the same as ``(a // b, a % b)``. For floating-"
"point numbers the result is ``(q, a % b)``, where *q* is usually ``math."
"floor(a / b)`` but may be 1 less than that.  In any case ``q * b + a % b`` "
"is very close to *a*, if ``a % b`` is non-zero it has the same sign as *b*, "
"and ``0 <= abs(a % b) < abs(b)``."
msgstr ""
"دو عدد (غیر مختلط) را به عنوان آرگومان در نظر بگیرید و هنگام استفاده از "
"تقسیم اعداد صحیح، یک جفت اعداد متشکل از ضریب و باقیمانده آنها را برگردانید.  "
"با انواع عملوند مختلط، قوانین عملگرهای حسابی باینری اعمال می شود.  برای "
"اعداد صحیح، نتیجه مشابه ``(a // b, a % b)`` است. برای اعداد ممیز شناور، "
"نتیجه ``(q, a % b)`` است، که در آن *q* معمولاً ``math.floor(a / b)`` است اما "
"ممکن است 1 کمتر از آن باشد.  در هر صورت ``q * b + a % b`` بسیار نزدیک به *a* "
"است، اگر ``a % b`` غیر صفر باشد همان علامت *b* و ``0 <= abs(a % b) < "
"abs(b)`` را دارد."

#: ../../library/functions.rst:552
msgid ""
"Return an enumerate object. *iterable* must be a sequence, an :term:"
"`iterator`, or some other object which supports iteration. The :meth:"
"`~iterator.__next__` method of the iterator returned by :func:`enumerate` "
"returns a tuple containing a count (from *start* which defaults to 0) and "
"the values obtained from iterating over *iterable*."
msgstr ""
"یک شئ enumerate را برگردانید. *iterable* باید یک دنباله، یک :term:`iterator` "
"یا شیء دیگری باشد که از تکرار پشتیبانی می کند. متد :meth:`~iterator."
"__next__` تکرارکننده که توسط :func:`enumerate` برگردانده شده است یک تاپل "
"حاوی یک شمارش (از *start* که به طور پیش فرض روی 0 است) و مقادیر به دست آمده "
"از تکرار بر روی *iterable* را برمی گرداند."

#: ../../library/functions.rst:564
msgid "Equivalent to::"
msgstr "معادل::"

#: ../../library/functions.rst:566
msgid ""
"def enumerate(iterable, start=0):\n"
"    n = start\n"
"    for elem in iterable:\n"
"        yield n, elem\n"
"        n += 1"
msgstr ""
"def enumerate(iterable, start=0):\n"
"    n = start\n"
"    for elem in iterable:\n"
"        yield n, elem\n"
"        n += 1"

#: ../../library/functions.rst:0
msgid "Parameters"
msgstr "پارامترها"

#: ../../library/functions.rst:576
msgid "A Python expression."
msgstr "یک عبارت پایتون"

#: ../../library/functions.rst:580
msgid "The global namespace (default: ``None``)."
msgstr "فضای نام جهانی (پیش‌فرض: ``None``)."

#: ../../library/functions.rst:584
msgid "The local namespace (default: ``None``)."
msgstr "فضای نام محلی (پیش‌فرض: ``None``)."

#: ../../library/functions.rst:0
msgid "Returns"
msgstr "برمی گرداند"

#: ../../library/functions.rst:588
msgid "The result of the evaluated expression."
msgstr "نتیجه عبارت ارزیابی شده"

#: ../../library/functions.rst:0
msgid "raises"
msgstr "را افزایش می دهد"

#: ../../library/functions.rst:589
msgid "Syntax errors are reported as exceptions."
msgstr "خطاهای نحوی به عنوان استثنا گزارش می شوند."

#: ../../library/functions.rst:593 ../../library/functions.rst:644
msgid ""
"This function executes arbitrary code. Calling it with user-supplied input "
"may lead to security vulnerabilities."
msgstr ""
"این تابع کد دلخواه را اجرا می کند. فراخوانی آن با ورودی ارائه شده توسط کاربر "
"ممکن است منجر به آسیب‌پذیری‌های امنیتی شود."

#: ../../library/functions.rst:596
msgid ""
"The *expression* argument is parsed and evaluated as a Python expression "
"(technically speaking, a condition list) using the *globals* and *locals* "
"dictionaries as global and local namespace.  If the *globals* dictionary is "
"present and does not contain a value for the key ``__builtins__``, a "
"reference to the dictionary of the built-in module :mod:`builtins` is "
"inserted under that key before *expression* is parsed.  That way you can "
"control what builtins are available to the executed code by inserting your "
"own ``__builtins__`` dictionary into *globals* before passing it to :func:"
"`eval`.  If the *locals* dictionary is omitted it defaults to the *globals* "
"dictionary.  If both dictionaries are omitted, the expression is executed "
"with the *globals* and *locals* in the environment where :func:`eval` is "
"called.  Note, *eval()* does not have access to the :term:`nested scopes "
"<nested scope>` (non-locals) in the enclosing environment."
msgstr ""

#: ../../library/functions.rst:611
msgid "Example:"
msgstr "مثال:"

#: ../../library/functions.rst:617
msgid ""
"This function can also be used to execute arbitrary code objects (such as "
"those created by :func:`compile`).  In this case, pass a code object instead "
"of a string.  If the code object has been compiled with ``'exec'`` as the "
"*mode* argument, :func:`eval`\\'s return value will be ``None``."
msgstr ""
"این تابع همچنین می تواند برای اجرای اشیاء کد دلخواه (مانند موارد ایجاد شده "
"توسط :func:`compile`) استفاده شود.  در این حالت به جای رشته، یک شی کد ارسال "
"کنید.  اگر شی کد با ``'exec'`` به عنوان آرگومان *mode* کامپایل شده باشد، "
"مقدار بازگشتی :func:`eval` ``None`` خواهد بود."

#: ../../library/functions.rst:622
msgid ""
"Hints: dynamic execution of statements is supported by the :func:`exec` "
"function.  The :func:`globals` and :func:`locals` functions return the "
"current global and local dictionary, respectively, which may be useful to "
"pass around for use by :func:`eval` or :func:`exec`."
msgstr ""
"نکات: اجرای پویا عبارات توسط تابع :func:`exec` پشتیبانی می شود.  توابع :func:"
"`globals` و :func:`locals` به ترتیب فرهنگ لغت جهانی و محلی فعلی را برمی "
"گرداند که ممکن است برای استفاده توسط :func:`eval` یا :func:`exec` مفید باشد."

#: ../../library/functions.rst:627
msgid ""
"If the given source is a string, then leading and trailing spaces and tabs "
"are stripped."
msgstr ""
"اگر منبع داده شده یک رشته باشد، فضاها و زبانه های پیشرو و انتهایی حذف می "
"شوند."

#: ../../library/functions.rst:630
msgid ""
"See :func:`ast.literal_eval` for a function that can safely evaluate strings "
"with expressions containing only literals."
msgstr ""
":func:`ast.literal_eval` را برای تابعی که می تواند به طور ایمن رشته ها را با "
"عباراتی که فقط حاوی لفظ هستند، ارزیابی کند، ببینید."

#: ../../library/functions.rst:633 ../../library/functions.rst:635
#: ../../library/functions.rst:683 ../../library/functions.rst:685
msgid ""
"Raises an :ref:`auditing event <auditing>` ``exec`` with the code object as "
"the argument. Code compilation events may also be raised."
msgstr ""
"یک :ref:`auditing event <auditing>` ``exec`` را با شی کد به عنوان آرگومان "
"افزایش می دهد. رویدادهای تدوین کد نیز ممکن است مطرح شود."

#: ../../library/functions.rst:647
msgid ""
"This function supports dynamic execution of Python code. *object* must be "
"either a string or a code object.  If it is a string, the string is parsed "
"as a suite of Python statements which is then executed (unless a syntax "
"error occurs). [#]_ If it is a code object, it is simply executed.  In all "
"cases, the code that's executed is expected to be valid as file input (see "
"the section :ref:`file-input` in the Reference Manual). Be aware that the :"
"keyword:`nonlocal`, :keyword:`yield`,  and :keyword:`return` statements may "
"not be used outside of function definitions even within the context of code "
"passed to the :func:`exec` function. The return value is ``None``."
msgstr ""

#: ../../library/functions.rst:658
msgid ""
"In all cases, if the optional parts are omitted, the code is executed in the "
"current scope.  If only *globals* is provided, it must be a dictionary (and "
"not a subclass of dictionary), which will be used for both the global and "
"the local variables.  If *globals* and *locals* are given, they are used for "
"the global and local variables, respectively.  If provided, *locals* can be "
"any mapping object.  Remember that at the module level, globals and locals "
"are the same dictionary."
msgstr ""
"در تمام موارد، اگر قسمت های اختیاری حذف شوند، کد در محدوده فعلی اجرا می "
"شود.  اگر فقط *globals* ارائه شده باشد، باید یک فرهنگ لغت باشد (و نه زیر "
"کلاس فرهنگ لغت), که هم برای متغیرهای سراسری و هم برای متغیرهای محلی استفاده "
"می شود.  اگر *globals* و *locals* داده شوند، به ترتیب برای متغیرهای سراسری و "
"محلی استفاده می شوند.  در صورت ارائه، *locals* می تواند هر شی نگاشت باشد.  "
"به یاد داشته باشید که در سطح ماژول، جهانی ها و محلی ها یک فرهنگ لغت هستند."

#: ../../library/functions.rst:668
msgid ""
"Most users should just pass a *globals* argument and never *locals*. If exec "
"gets two separate objects as *globals* and *locals*, the code will be "
"executed as if it were embedded in a class definition."
msgstr ""

#: ../../library/functions.rst:672
msgid ""
"If the *globals* dictionary does not contain a value for the key "
"``__builtins__``, a reference to the dictionary of the built-in module :mod:"
"`builtins` is inserted under that key.  That way you can control what "
"builtins are available to the executed code by inserting your own "
"``__builtins__`` dictionary into *globals* before passing it to :func:`exec`."
msgstr ""
"اگر فرهنگ لغت *globals* حاوی مقداری برای کلید ``__builtins__`` نباشد، مرجعی "
"به فرهنگ لغت ماژول داخلی :mod:`builtins` در زیر آن کلید درج می شود.  به این "
"ترتیب می توانید با وارد کردن فرهنگ لغت ``__builtins__`` خود در *globals* قبل "
"از ارسال آن به :func:`exec`، کنترل کنید که چه داخلی هایی برای کد اجرا شده در "
"دسترس هستند."

#: ../../library/functions.rst:678
msgid ""
"The *closure* argument specifies a closure--a tuple of cellvars. It's only "
"valid when the *object* is a code object containing free variables. The "
"length of the tuple must exactly match the number of free variables "
"referenced by the code object."
msgstr ""

#: ../../library/functions.rst:690
msgid ""
"The built-in functions :func:`globals` and :func:`locals` return the current "
"global and local dictionary, respectively, which may be useful to pass "
"around for use as the second and third argument to :func:`exec`."
msgstr ""

#: ../../library/functions.rst:696
msgid ""
"The default *locals* act as described for function :func:`locals` below: "
"modifications to the default *locals* dictionary should not be attempted. "
"Pass an explicit *locals* dictionary if you need to see effects of the code "
"on *locals* after function :func:`exec` returns."
msgstr ""

#: ../../library/functions.rst:701
msgid "Added the *closure* parameter."
msgstr "پارامتر *closure* اضافه شد."

#: ../../library/functions.rst:707
msgid ""
"Construct an iterator from those elements of *iterable* for which *function* "
"is true.  *iterable* may be either a sequence, a container which supports "
"iteration, or an iterator.  If *function* is ``None``, the identity function "
"is assumed, that is, all elements of *iterable* that are false are removed."
msgstr ""
"یک تکرار کننده از آن عناصر *iterable* بسازید که *function* برای آنها درست "
"است.  *iterable* ممکن است یک دنباله باشد، یک ظرف که از تکرار پشتیبانی می "
"کند، یا یک تکرار.  اگر *function* ``None`` باشد، تابع هویت فرض می شود، یعنی "
"تمام عناصر *iterable* که false هستند حذف می شوند."

#: ../../library/functions.rst:713
msgid ""
"Note that ``filter(function, iterable)`` is equivalent to the generator "
"expression ``(item for item in iterable if function(item))`` if function is "
"not ``None`` and ``(item for item in iterable if item)`` if function is "
"``None``."
msgstr ""
"توجه داشته باشید که ``filter(function, iterable)`` معادل عبارت ژنراتور "
"``(item for item in iterable if function(item))`` است اگر تابع ``None`` "
"نباشد و ``(item for item in iterable if item)`` اگر تابع ``None`` باشد."

#: ../../library/functions.rst:718
msgid ""
"See :func:`itertools.filterfalse` for the complementary function that "
"returns elements of *iterable* for which *function* is false."
msgstr ""
"برای تابع مکملی که عناصر *iterable* را که *function* نادرست است، به :func:"
"`itertools.filterfalse` برمی گرداند."

#: ../../library/functions.rst:729
msgid "Return a floating-point number constructed from a number or a string."
msgstr "یک عدد ممیز شناور ساخته شده از یک عدد یا یک رشته را برگردانید."

#: ../../library/functions.rst:733
msgid ""
">>> float('+1.23')\n"
"1.23\n"
">>> float('   -12345\\n')\n"
"-12345.0\n"
">>> float('1e-003')\n"
"0.001\n"
">>> float('+1E6')\n"
"1000000.0\n"
">>> float('-Infinity')\n"
"-inf"
msgstr ""
">>> float('+1.23')\n"
"1.23\n"
">>> float('   -12345\\n')\n"
"-12345.0\n"
">>> float('1e-003')\n"
"0.001\n"
">>> float('+1E6')\n"
"1000000.0\n"
">>> float('-Infinity')\n"
"-inf"

#: ../../library/functions.rst:746
msgid ""
"If the argument is a string, it should contain a decimal number, optionally "
"preceded by a sign, and optionally embedded in whitespace.  The optional "
"sign may be ``'+'`` or ``'-'``; a ``'+'`` sign has no effect on the value "
"produced.  The argument may also be a string representing a NaN (not-a-"
"number), or positive or negative infinity. More precisely, the input must "
"conform to the :token:`~float:floatvalue` production rule in the following "
"grammar, after leading and trailing whitespace characters are removed:"
msgstr ""
"اگر آرگومان یک رشته باشد، باید دارای یک عدد اعشاری باشد که به صورت اختیاری "
"قبل از یک علامت، و به صورت اختیاری در فضای خالی تعبیه شده است.  علامت "
"اختیاری ممکن است ``'+'`` یا ``'-'`` باشد. علامت ``'+'`` هیچ تاثیری بر مقدار "
"تولید شده ندارد.  آرگومان ممکن است رشته ای باشد که یک NaN (عدد نیست) یا بی "
"نهایت مثبت یا منفی را نشان می دهد. به‌طور دقیق‌تر، ورودی باید با قانون تولید :"
"token:`~float:floatvalue` در گرامر زیر مطابقت داشته باشد، پس از حذف "
"کاراکترهای فضای خالی اصلی و انتهایی:"

#: ../../library/functions.rst:767
msgid ""
"Case is not significant, so, for example, \"inf\", \"Inf\", \"INFINITY\", "
"and \"iNfINity\" are all acceptable spellings for positive infinity."
msgstr ""
"حروف بزرگ و کوچک معنادار نیست، بنابراین، برای مثال، «inf»، «Inf»، «INFINITY» "
"و «iNfINity» همه املای قابل قبولی برای بی‌نهایت مثبت هستند."

#: ../../library/functions.rst:770
msgid ""
"Otherwise, if the argument is an integer or a floating-point number, a "
"floating-point number with the same value (within Python's floating-point "
"precision) is returned.  If the argument is outside the range of a Python "
"float, an :exc:`OverflowError` will be raised."
msgstr ""
"در غیر این صورت، اگر آرگومان یک عدد صحیح یا یک عدد ممیز شناور باشد، یک عدد "
"ممیز شناور با همان مقدار (در محدوده دقت ممیز شناور پایتون) برگردانده می‌شود.  "
"اگر آرگومان خارج از محدوده یک شناور پایتون باشد، یک :exc:`OverflowError` "
"بالا می رود."

#: ../../library/functions.rst:775
msgid ""
"For a general Python object ``x``, ``float(x)`` delegates to ``x."
"__float__()``.  If :meth:`~object.__float__` is not defined then it falls "
"back to :meth:`~object.__index__`."
msgstr ""
"برای یک شیء عمومی پایتون ``x``، ``float(x)`` به ``x.__float__()`` واگذار می "
"شود.  اگر :meth:`~object.__float__` تعریف نشده باشد، به :meth:`~object."
"__index__` برمی گردد."

#: ../../library/functions.rst:779
msgid "If no argument is given, ``0.0`` is returned."
msgstr "اگر آرگومان داده نشود، ``0.0`` برگردانده می شود."

#: ../../library/functions.rst:781
msgid "The float type is described in :ref:`typesnumeric`."
msgstr "نوع شناور در :ref:`typesnumeric` توضیح داده شده است."

#: ../../library/functions.rst:789
msgid ""
"Falls back to :meth:`~object.__index__` if :meth:`~object.__float__` is not "
"defined."
msgstr ""
"اگر :meth:`~object.__float__` تعریف نشده باشد به :meth:`~object.__index__` "
"برمی گردد."

#: ../../library/functions.rst:799
msgid ""
"Convert a *value* to a \"formatted\" representation, as controlled by "
"*format_spec*.  The interpretation of *format_spec* will depend on the type "
"of the *value* argument; however, there is a standard formatting syntax that "
"is used by most built-in types: :ref:`formatspec`."
msgstr ""
"یک *value* را به یک نمایش \"قالب‌بندی شده\" که توسط *format_spec* کنترل "
"می‌شود، تبدیل کنید.  تفسیر *format_spec* به نوع آرگومان *value* بستگی دارد. "
"با این حال، یک نحو قالب بندی استاندارد وجود دارد که توسط اکثر انواع داخلی "
"استفاده می شود: :ref:`formatspec`."

#: ../../library/functions.rst:804
msgid ""
"The default *format_spec* is an empty string which usually gives the same "
"effect as calling :func:`str(value) <str>`."
msgstr ""
"*format_spec* پیش‌فرض یک رشته خالی است که معمولاً همان جلوه فراخوانی :func:"
"`str(value) <str>` را می‌دهد."

#: ../../library/functions.rst:807
msgid ""
"A call to ``format(value, format_spec)`` is translated to ``type(value)."
"__format__(value, format_spec)`` which bypasses the instance dictionary when "
"searching for the value's :meth:`~object.__format__` method. A :exc:"
"`TypeError` exception is raised if the method search reaches :mod:`object` "
"and the *format_spec* is non-empty, or if either the *format_spec* or the "
"return value are not strings."
msgstr ""
"تماس با ``format(value, format_spec)`` به ``type(value).__format__(value, "
"format_spec)`` ترجمه می شود که هنگام جستجوی روش :meth:`~object.__format__` "
"مقدار، فرهنگ لغت نمونه را دور می زند. اگر جستجوی روش به :mod:`object` برسد و "
"*format_spec* خالی نباشد، یا اگر *format_spec* یا مقدار بازگشتی رشته ای "
"نباشند، یک استثنا :exc:`TypeError` ایجاد می شود."

#: ../../library/functions.rst:814
msgid ""
"``object().__format__(format_spec)`` raises :exc:`TypeError` if "
"*format_spec* is not an empty string."
msgstr ""
"اگر *format_spec* یک رشته خالی نباشد، ``object().__format__(format_spec)`` :"
"exc:`TypeError` را افزایش می دهد."

#: ../../library/functions.rst:823
msgid ""
"Return a new :class:`frozenset` object, optionally with elements taken from "
"*iterable*.  ``frozenset`` is a built-in class.  See :class:`frozenset` and :"
"ref:`types-set` for documentation about this class."
msgstr ""
"یک شی :class:`frozenset` جدید، به صورت اختیاری با عناصر گرفته شده از "
"*iterable* برگردانید.  ``frozenset`` یک کلاس داخلی است.  برای مستندات مربوط "
"به این کلاس به :class:`frozenset` و :ref:`types-set` مراجعه کنید."

#: ../../library/functions.rst:827
msgid ""
"For other containers see the built-in :class:`set`, :class:`list`, :class:"
"`tuple`, and :class:`dict` classes, as well as the :mod:`collections` module."
msgstr ""
"برای سایر کانتینرها به کلاس های داخلی :class:`set`، :class:`list`، :class:"
"`tuple` و :class:`dict` و همچنین ماژول :mod:`collections` مراجعه کنید."

#: ../../library/functions.rst:835
msgid ""
"Return the value of the named attribute of *object*.  *name* must be a "
"string. If the string is the name of one of the object's attributes, the "
"result is the value of that attribute.  For example, ``getattr(x, "
"'foobar')`` is equivalent to ``x.foobar``.  If the named attribute does not "
"exist, *default* is returned if provided, otherwise :exc:`AttributeError` is "
"raised. *name* need not be a Python identifier (see :func:`setattr`)."
msgstr ""
"مقدار مشخصه نامگذاری شده *object* را برگردانید.  *name* باید یک رشته باشد. "
"اگر رشته نام یکی از ویژگی های شی باشد، نتیجه مقدار آن ویژگی است.  به عنوان "
"مثال، ``getattr(x, 'foobar')`` معادل ``x.foobar`` است.  اگر ویژگی نامگذاری "
"شده وجود نداشته باشد، در صورت ارائه *default* برگردانده می شود، در غیر این "
"صورت :exc:`AttributeError` افزایش می یابد. *name* نباید یک شناسه پایتون باشد "
"(به :func:`setattr` مراجعه کنید)."

#: ../../library/functions.rst:844
msgid ""
"Since :ref:`private name mangling <private-name-mangling>` happens at "
"compilation time, one must manually mangle a private attribute's (attributes "
"with two leading underscores) name in order to retrieve it with :func:"
"`getattr`."
msgstr ""
"از آنجایی که :ref:`private name mangling <private-name-mangling>` در زمان "
"کامپایل اتفاق می افتد، برای بازیابی آن با :func:`getattr`، باید نام یک ویژگی "
"خصوصی (ویژگی ها با دو زیرخط اصلی) را به صورت دستی مخدوش کرد."

#: ../../library/functions.rst:852
msgid ""
"Return the dictionary implementing the current module namespace. For code "
"within functions, this is set when the function is defined and remains the "
"same regardless of where the function is called."
msgstr ""
"فرهنگ لغت اجرای فضای نام ماژول فعلی را برگردانید. برای کد درون توابع، زمانی "
"که تابع تعریف می‌شود، تنظیم می‌شود و بدون توجه به اینکه تابع کجا فراخوانی "
"می‌شود، ثابت می‌ماند."

#: ../../library/functions.rst:859
msgid ""
"The arguments are an object and a string.  The result is ``True`` if the "
"string is the name of one of the object's attributes, ``False`` if not. "
"(This is implemented by calling ``getattr(object, name)`` and seeing whether "
"it raises an :exc:`AttributeError` or not.)"
msgstr ""
"آرگومان ها یک شی و یک رشته هستند.  نتیجه ``True`` اگر رشته نام یکی از ویژگی "
"های شی باشد، ``False`` اگر نه. (این کار با فراخوانی ``getattr(object, "
"name)`` و دیدن اینکه آیا :exc:`AttributeError` را افزایش می دهد یا خیر اجرا "
"می شود.)"

#: ../../library/functions.rst:867
msgid ""
"Return the hash value of the object (if it has one).  Hash values are "
"integers.  They are used to quickly compare dictionary keys during a "
"dictionary lookup.  Numeric values that compare equal have the same hash "
"value (even if they are of different types, as is the case for 1 and 1.0)."
msgstr ""
"مقدار هش شیء را برگردانید (اگر دارای یکی باشد).  مقادیر هش اعداد صحیح "
"هستند.  آنها برای مقایسه سریع کلیدهای فرهنگ لغت در طول جستجوی فرهنگ لغت "
"استفاده می شوند.  مقادیر عددی که با هم مقایسه می‌کنند، مقدار هش یکسانی دارند "
"(حتی اگر از انواع مختلف باشند, همانطور که در مورد 1 و 1.0 وجود دارد)."

#: ../../library/functions.rst:874
msgid ""
"For objects with custom :meth:`~object.__hash__` methods, note that :func:"
"`hash` truncates the return value based on the bit width of the host machine."
msgstr ""
"برای اشیا با متدهای سفارشی :meth:`~object.__hash__`، توجه داشته باشید که :"
"func:`hash` مقدار بازگشتی را بر اساس عرض بیت دستگاه میزبان کوتاه می‌کند."

#: ../../library/functions.rst:881
msgid ""
"Invoke the built-in help system.  (This function is intended for interactive "
"use.)  If no argument is given, the interactive help system starts on the "
"interpreter console.  If the argument is a string, then the string is looked "
"up as the name of a module, function, class, method, keyword, or "
"documentation topic, and a help page is printed on the console.  If the "
"argument is any other kind of object, a help page on the object is generated."
msgstr ""
"سیستم کمک داخلی را فراخوانی کنید.  (این تابع برای استفاده تعاملی در نظر "
"گرفته شده است.) اگر هیچ آرگومانی داده نشود، سیستم کمک تعاملی در کنسول مفسر "
"شروع می شود.  اگر آرگومان یک رشته باشد، رشته به عنوان نام ماژول، تابع، کلاس، "
"متد، کلمه کلیدی یا موضوع مستندسازی جستجو می‌شود و یک صفحه راهنما روی کنسول "
"چاپ می‌شود.  اگر آرگومان هر نوع شی دیگری باشد، یک صفحه راهنما روی شی ایجاد می "
"شود."

#: ../../library/functions.rst:888
msgid ""
"Note that if a slash(/) appears in the parameter list of a function when "
"invoking :func:`help`, it means that the parameters prior to the slash are "
"positional-only. For more info, see :ref:`the FAQ entry on positional-only "
"parameters <faq-positional-only-arguments>`."
msgstr ""
"توجه داشته باشید که اگر هنگام فراخوانی :func:`help` یک اسلش(/) در لیست "
"پارامترهای یک تابع ظاهر شود، به این معنی است که پارامترهای قبل از اسلش فقط "
"موقعیتی هستند. برای اطلاعات بیشتر به :ref:`the FAQ entry on positional-only "
"parameters <faq-positional-only-arguments>` مراجعه کنید."

#: ../../library/functions.rst:893
msgid ""
"This function is added to the built-in namespace by the :mod:`site` module."
msgstr "این تابع توسط ماژول :mod:`site` به فضای نام داخلی اضافه شده است."

#: ../../library/functions.rst:895
msgid ""
"Changes to :mod:`pydoc` and :mod:`inspect` mean that the reported signatures "
"for callables are now more comprehensive and consistent."
msgstr ""
"تغییرات :mod:`pydoc` و :mod:`inspect` به این معنی است که امضاهای گزارش‌شده "
"برای تماس‌پذیرها اکنون جامع‌تر و سازگارتر هستند."

#: ../../library/functions.rst:902
msgid ""
"Convert an integer number to a lowercase hexadecimal string prefixed with "
"\"0x\". If *x* is not a Python :class:`int` object, it has to define an :"
"meth:`~object.__index__` method that returns an integer. Some examples:"
msgstr ""
"یک عدد صحیح را به یک رشته هگزادسیمال با حروف کوچک با پیشوند \"0x\" تبدیل "
"کنید. اگر *x* یک شی پایتون :class:`int` نیست، باید یک متد :meth:`~object."
"__index__` تعریف کند که یک عدد صحیح برمی گرداند. چند نمونه:"

#: ../../library/functions.rst:911
msgid ""
"If you want to convert an integer number to an uppercase or lower "
"hexadecimal string with prefix or not, you can use either of the following "
"ways:"
msgstr ""
"اگر می خواهید یک عدد صحیح را با پیشوند یا نه به یک رشته هگزادسیمال بزرگ یا "
"کوچک تبدیل کنید، می توانید از یکی از راه های زیر استفاده کنید:"

#: ../../library/functions.rst:923
msgid ""
"See also :func:`int` for converting a hexadecimal string to an integer using "
"a base of 16."
msgstr ""
"همچنین :func:`int` را برای تبدیل رشته هگزا دسیمال به عدد صحیح با استفاده از "
"پایه 16 ببینید."

#: ../../library/functions.rst:928
msgid ""
"To obtain a hexadecimal string representation for a float, use the :meth:"
"`float.hex` method."
msgstr ""
"برای به دست آوردن نمایش رشته هگزادسیمال برای یک شناور، از روش :meth:`float."
"hex` استفاده کنید."

#: ../../library/functions.rst:934
msgid ""
"Return the \"identity\" of an object.  This is an integer which is "
"guaranteed to be unique and constant for this object during its lifetime. "
"Two objects with non-overlapping lifetimes may have the same :func:`id` "
"value."
msgstr ""
"\"هویت\" یک شی را برگردانید.  این یک عدد صحیح است که تضمین می شود برای این "
"شی در طول عمر خود منحصر به فرد و ثابت باشد. دو شی با طول عمر غیر همپوشانی "
"ممکن است مقدار :func:`id` یکسانی داشته باشند."

#: ../../library/functions.rst:939
msgid "This is the address of the object in memory."
msgstr "این آدرس شی در حافظه است."

#: ../../library/functions.rst:941
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.id`` with argument "
"``id``."
msgstr ""
"یک :ref:`auditing event <auditing>` ``builtins.id`` را با آرگومان ``id`` "
"افزایش می دهد."

#: ../../library/functions.rst:947
msgid ""
"If the *prompt* argument is present, it is written to standard output "
"without a trailing newline.  The function then reads a line from input, "
"converts it to a string (stripping a trailing newline), and returns that.  "
"When EOF is read, :exc:`EOFError` is raised.  Example::"
msgstr ""
"اگر آرگومان *prompt* وجود داشته باشد، بدون خط جدید در خروجی استاندارد نوشته "
"می شود.  سپس این تابع یک خط را از ورودی می‌خواند، آن را به یک رشته تبدیل "
"می‌کند (یک خط جدید دنباله‌دار را حذف می‌کند), و آن را برمی‌گرداند.  وقتی EOF "
"خوانده می شود، :exc:`EOFError` بالا می رود.  مثال::"

#: ../../library/functions.rst:952
msgid ""
">>> s = input('--> ')\n"
"--> Monty Python's Flying Circus\n"
">>> s\n"
"\"Monty Python's Flying Circus\""
msgstr ""

#: ../../library/functions.rst:957
msgid ""
"If the :mod:`readline` module was loaded, then :func:`input` will use it to "
"provide elaborate line editing and history features."
msgstr ""
"اگر ماژول :mod:`readline` بارگذاری شده باشد، :func:`input` از آن برای ارائه "
"ویژگی‌های ویرایش خط و تاریخچه دقیق استفاده می‌کند."

#: ../../library/functions.rst:960 ../../library/functions.rst:962
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input`` with argument "
"``prompt`` before reading input"
msgstr ""
"قبل از خواندن ورودی، یک :ref:`auditing event <auditing>` ``builtins.input`` "
"را با آرگومان ``prompt`` افزایش می دهد."

#: ../../library/functions.rst:965 ../../library/functions.rst:967
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input/result`` with "
"the result after successfully reading input."
msgstr ""
"پس از خواندن موفقیت آمیز ورودی، یک :ref:`auditing event <auditing>` "
"``builtins.input/result`` را با نتیجه بالا می برد."

#: ../../library/functions.rst:974
msgid ""
"Return an integer object constructed from a number or a string, or return "
"``0`` if no arguments are given."
msgstr ""
"یک شی عدد صحیح ساخته شده از یک عدد یا یک رشته را برگردانید، یا اگر آرگومان "
"داده نشد، ``0`` را برگردانید."

#: ../../library/functions.rst:979
msgid ""
">>> int(123.45)\n"
"123\n"
">>> int('123')\n"
"123\n"
">>> int('   -12_345\\n')\n"
"-12345\n"
">>> int('FACE', 16)\n"
"64206\n"
">>> int('0xface', 0)\n"
"64206\n"
">>> int('01110011', base=2)\n"
"115"
msgstr ""
">>> int(123.45)\n"
"123\n"
">>> int('123')\n"
"123\n"
">>> int('   -12_345\\n')\n"
"-12345\n"
">>> int('FACE', 16)\n"
"64206\n"
">>> int('0xface', 0)\n"
"64206\n"
">>> int('01110011', base=2)\n"
"115"

#: ../../library/functions.rst:994
msgid ""
"If the argument defines :meth:`~object.__int__`, ``int(x)`` returns ``x."
"__int__()``.  If the argument defines :meth:`~object.__index__`, it returns "
"``x.__index__()``.  If the argument defines :meth:`~object.__trunc__`, it "
"returns ``x.__trunc__()``. For floating-point numbers, this truncates "
"towards zero."
msgstr ""
"اگر آرگومان :meth:`~object.__int__` را تعریف کند، ``int(x)`` ``x.__int__()`` "
"را برمی گرداند.  اگر آرگومان :meth:`~object.__index__` را تعریف کند، ``x."
"__index__()`` را برمی گرداند.  اگر آرگومان :meth:`~object.__trunc__` را "
"تعریف کند، ``x.__trunc__()`` را برمی گرداند. برای اعداد ممیز شناور، این به "
"سمت صفر کوتاه می شود."

#: ../../library/functions.rst:1000
msgid ""
"If the argument is not a number or if *base* is given, then it must be a "
"string, :class:`bytes`, or :class:`bytearray` instance representing an "
"integer in radix *base*.  Optionally, the string can be preceded by ``+`` or "
"``-`` (with no space in between), have leading zeros, be surrounded by "
"whitespace, and have single underscores interspersed between digits."
msgstr ""
"اگر آرگومان یک عدد نیست یا اگر *base* داده شده باشد، باید یک رشته، :class:"
"`bytes` یا نمونه :class:`bytearray` باشد که یک عدد صحیح در ریشه *base* را "
"نشان می دهد.  به صورت اختیاری، رشته می تواند با ``+`` یا ``-`` (بدون فاصله "
"در میان), دارای صفرهای ابتدایی باشد، با فضای خالی احاطه شده باشد، و دارای "
"زیرخط های منفرد در میان ارقام باشد."

#: ../../library/functions.rst:1006
msgid ""
"A base-n integer string contains digits, each representing a value from 0 to "
"n-1. The values 0--9 can be represented by any Unicode decimal digit. The "
"values 10--35 can be represented by ``a`` to ``z`` (or ``A`` to ``Z``). The "
"default *base* is 10. The allowed bases are 0 and 2--36. Base-2, -8, and -16 "
"strings can be optionally prefixed with ``0b``/``0B``, ``0o``/``0O``, or "
"``0x``/``0X``, as with integer literals in code.  For base 0, the string is "
"interpreted in a similar way to an :ref:`integer literal in code "
"<integers>`, in that the actual base is 2, 8, 10, or 16 as determined by the "
"prefix. Base 0 also disallows leading zeros: ``int('010', 0)`` is not legal, "
"while ``int('010')`` and ``int('010', 8)`` are."
msgstr ""
"یک رشته اعداد صحیح مبنا-n حاوی ارقامی است که هر یک مقداری از 0 تا n-1 را "
"نشان می دهد. مقادیر 0--9 را می توان با هر رقم اعشاری یونیکد نشان داد. مقادیر "
"10--35 را می توان با ``a`` تا ``z`` (یا ``A`` تا ``Z``) نشان داد. پیش فرض "
"*base* 10 است. پایه های مجاز 0 و 2--36 هستند. رشته های Base-2، -8، و -16 را "
"می توان به صورت اختیاری با ``0b``/``0B``، ``0o``/``0O``، یا ``0x``/``0X`` "
"پیشوند، مانند حروف صحیح در کد.  برای پایه 0، رشته به روشی مشابه با :ref:"
"`integer literal in code <integers>` تفسیر می شود، به این صورت که پایه واقعی "
"2، 8، 10 یا 16 است که توسط پیشوند تعیین می شود. پایه 0 صفرهای ابتدایی را نیز "
"مجاز نمی داند: ``int('010', 0)`` قانونی نیست، در حالی که ``int('010')`` و "
"``int('010', 8)`` قانونی هستند."

#: ../../library/functions.rst:1017
msgid "The integer type is described in :ref:`typesnumeric`."
msgstr "نوع عدد صحیح در :ref:`typesnumeric` توضیح داده شده است."

#: ../../library/functions.rst:1019
msgid ""
"If *base* is not an instance of :class:`int` and the *base* object has a :"
"meth:`base.__index__ <object.__index__>` method, that method is called to "
"obtain an integer for the base.  Previous versions used :meth:`base.__int__ "
"<object.__int__>` instead of :meth:`base.__index__ <object.__index__>`."
msgstr ""
"اگر *base* نمونه ای از :class:`int` نباشد و شی *base* دارای متد :meth:`base."
"__index__ <object.__index__>` باشد، آن متد برای بدست آوردن یک عدد صحیح برای "
"پایه فراخوانی می شود.  نسخه های قبلی به جای :meth:`base.__index__ <object."
"__index__>` از :meth:`base.__int__ <object.__int__>` استفاده می کردند."

#: ../../library/functions.rst:1029
msgid "The first parameter is now positional-only."
msgstr "پارامتر اول اکنون فقط موقعیتی است."

#: ../../library/functions.rst:1032
msgid ""
"Falls back to :meth:`~object.__index__` if :meth:`~object.__int__` is not "
"defined."
msgstr ""
"اگر :meth:`~object.__int__` تعریف نشده باشد به :meth:`~object.__index__` "
"برمی گردد."

#: ../../library/functions.rst:1035
msgid "The delegation to :meth:`~object.__trunc__` is deprecated."
msgstr "تفویض اختیار به :meth:`~object.__trunc__` منسوخ شده است."

#: ../../library/functions.rst:1038
msgid ""
":class:`int` string inputs and string representations can be limited to help "
"avoid denial of service attacks. A :exc:`ValueError` is raised when the "
"limit is exceeded while converting a string to an :class:`int` or when "
"converting an :class:`int` into a string would exceed the limit. See the :"
"ref:`integer string conversion length limitation <int_max_str_digits>` "
"documentation."
msgstr ""
"ورودی های رشته :class:`int` و نمایش رشته ها می توانند برای جلوگیری از حملات "
"انکار سرویس محدود شوند. یک :exc:`ValueError` زمانی افزایش می‌یابد که در حین "
"تبدیل رشته به :class:`int` از حد مجاز فراتر رود یا زمانی که تبدیل :class:"
"`int` به رشته از حد مجاز فراتر رود. به مستندات :ref:`integer string "
"conversion length limitation <int_max_str_digits>` مراجعه کنید."

#: ../../library/functions.rst:1048
msgid ""
"Return ``True`` if the *object* argument is an instance of the *classinfo* "
"argument, or of a (direct, indirect, or :term:`virtual <abstract base "
"class>`) subclass thereof.  If *object* is not an object of the given type, "
"the function always returns ``False``. If *classinfo* is a tuple of type "
"objects (or recursively, other such tuples) or a :ref:`types-union` of "
"multiple types, return ``True`` if *object* is an instance of any of the "
"types. If *classinfo* is not a type or tuple of types and such tuples, a :"
"exc:`TypeError` exception is raised. :exc:`TypeError` may not be raised for "
"an invalid type if an earlier check succeeds."
msgstr ""
"اگر آرگومان *object* نمونه ای از آرگومان *classinfo* یا زیر کلاس (مستقیم, "
"غیر مستقیم یا :term:`virtual <abstract base class>`) آن باشد، ``True`` را "
"برگردانید.  اگر *object* یک شی از نوع داده شده نباشد، تابع همیشه ``False`` "
"را برمی گرداند. اگر *classinfo* چند شیء از نوع (یا به صورت بازگشتی, تاپل های "
"دیگر) یا یک :ref:`types-union` از چندین نوع است، اگر *object* نمونه ای از هر "
"یک از انواع است، ``True`` را برگردانید. اگر *classinfo* یک نوع یا چند تایی "
"از انواع و چند تاپل نیست، یک استثنا :exc:`TypeError` مطرح می شود. در صورت "
"موفقیت آمیز بودن بررسی قبلی، :exc:`TypeError` ممکن است برای نوع نامعتبر "
"افزایش یابد."

#: ../../library/functions.rst:1059 ../../library/functions.rst:1073
msgid "*classinfo* can be a :ref:`types-union`."
msgstr "*classinfo* می تواند :ref:`types-union` باشد."

#: ../../library/functions.rst:1065
msgid ""
"Return ``True`` if *class* is a subclass (direct, indirect, or :term:"
"`virtual <abstract base class>`) of *classinfo*.  A class is considered a "
"subclass of itself. *classinfo* may be a tuple of class objects (or "
"recursively, other such tuples) or a :ref:`types-union`, in which case "
"return ``True`` if *class* is a subclass of any entry in *classinfo*.  In "
"any other case, a :exc:`TypeError` exception is raised."
msgstr ""
"اگر *class* یک زیر کلاس (مستقیم, غیر مستقیم یا :term:`virtual <abstract base "
"class>`) از *classinfo* است، ``True`` را برگردانید.  یک کلاس یک زیر کلاس از "
"خودش در نظر گرفته می شود. *classinfo* ممکن است مجموعه ای از اشیاء کلاس (یا "
"به صورت بازگشتی, تاپل های دیگر) یا یک :ref:`types-union` باشد، در این صورت "
"اگر *class* زیر کلاس هر ورودی در *classinfo* باشد، ``True`` را برگردانید.  "
"در هر مورد دیگر، یک استثناء :exc:`TypeError` مطرح می شود."

#: ../../library/functions.rst:1080
msgid ""
"Return an :term:`iterator` object.  The first argument is interpreted very "
"differently depending on the presence of the second argument. Without a "
"second argument, *object* must be a collection object which supports the :"
"term:`iterable` protocol (the :meth:`~object.__iter__` method), or it must "
"support the sequence protocol (the :meth:`~object.__getitem__` method with "
"integer arguments starting at ``0``).  If it does not support either of "
"those protocols, :exc:`TypeError` is raised. If the second argument, "
"*sentinel*, is given, then *object* must be a callable object.  The iterator "
"created in this case will call *object* with no arguments for each call to "
"its :meth:`~iterator.__next__` method; if the value returned is equal to "
"*sentinel*, :exc:`StopIteration` will be raised, otherwise the value will be "
"returned."
msgstr ""
"یک شی :term:`iterator` را برگردانید.  استدلال اول بسته به وجود استدلال دوم "
"بسیار متفاوت تفسیر می شود. بدون آرگومان دوم، *object* باید یک شی مجموعه ای "
"باشد که از پروتکل :term:`iterable` (روش :meth:`~object.__iter__`) پشتیبانی "
"می کند، یا باید از پروتکل توالی پشتیبانی کند (روش :meth:`~object."
"__getitem__` با آرگومان های عدد صحیح که از ``0`` شروع می شود).  اگر هیچ یک "
"از این پروتکل ها را پشتیبانی نکند، :exc:`TypeError` بالا می رود. اگر آرگومان "
"دوم، *sentinel* داده شود، *object* باید یک شی قابل فراخوان باشد.  تکرار "
"کننده ایجاد شده در این مورد، *object* را بدون هیچ آرگومانی برای هر فراخوانی "
"متد :meth:`~iterator.__next__` فراخوانی می کند. اگر مقدار بازگشتی برابر با "
"*sentinel* باشد، :exc:`StopIteration` افزایش می یابد، در غیر این صورت مقدار "
"برگردانده می شود."

#: ../../library/functions.rst:1094
msgid "See also :ref:`typeiter`."
msgstr "همچنین به :ref:`typeiter` مراجعه کنید."

#: ../../library/functions.rst:1096
msgid ""
"One useful application of the second form of :func:`iter` is to build a "
"block-reader. For example, reading fixed-width blocks from a binary database "
"file until the end of file is reached::"
msgstr ""
"یکی از کاربردهای مفید فرم دوم :func:`iter` ساخت یک بلوک خوان است. به عنوان "
"مثال، خواندن بلوک های با عرض ثابت از یک فایل پایگاه داده باینری تا پایان "
"فایل:"

#: ../../library/functions.rst:1100
msgid ""
"from functools import partial\n"
"with open('mydata.db', 'rb') as f:\n"
"    for block in iter(partial(f.read, 64), b''):\n"
"        process_block(block)"
msgstr ""
"from functools import partial\n"
"with open('mydata.db', 'rb') as f:\n"
"    for block in iter(partial(f.read, 64), b''):\n"
"        process_block(block)"

#: ../../library/functions.rst:1108
msgid ""
"Return the length (the number of items) of an object.  The argument may be a "
"sequence (such as a string, bytes, tuple, list, or range) or a collection "
"(such as a dictionary, set, or frozen set)."
msgstr ""
"طول (تعداد موارد) یک شی را برگردانید.  آرگومان ممکن است یک دنباله (مانند یک "
"رشته, بایت, تاپل, لیست یا محدوده) یا یک مجموعه (مانند یک فرهنگ لغت, مجموعه, "
"یا مجموعه ثابت) باشد."

#: ../../library/functions.rst:1114
msgid ""
"``len`` raises :exc:`OverflowError` on lengths larger than :data:`sys."
"maxsize`, such as :class:`range(2 ** 100) <range>`."
msgstr ""
"``len`` :exc:`OverflowError` را در طول های بزرگتر از :data:`sys.maxsize` "
"مانند :class:`range(2 ** 100) <range>` افزایش می دهد."

#: ../../library/functions.rst:1123
msgid ""
"Rather than being a function, :class:`list` is actually a mutable sequence "
"type, as documented in :ref:`typesseq-list` and :ref:`typesseq`."
msgstr ""
":class:`list` به جای اینکه یک تابع باشد، در واقع یک نوع توالی قابل تغییر "
"است، همانطور که در :ref:`typesseq-list` و :ref:`typesseq` مستند شده است."

#: ../../library/functions.rst:1129
msgid ""
"Update and return a dictionary representing the current local symbol table. "
"Free variables are returned by :func:`locals` when it is called in function "
"blocks, but not in class blocks. Note that at the module level, :func:"
"`locals` and :func:`globals` are the same dictionary."
msgstr ""

#: ../../library/functions.rst:1135
msgid ""
"The contents of this dictionary should not be modified; changes may not "
"affect the values of local and free variables used by the interpreter."
msgstr ""

#: ../../library/functions.rst:1140
msgid ""
"Return an iterator that applies *function* to every item of *iterable*, "
"yielding the results.  If additional *iterables* arguments are passed, "
"*function* must take that many arguments and is applied to the items from "
"all iterables in parallel.  With multiple iterables, the iterator stops when "
"the shortest iterable is exhausted.  For cases where the function inputs are "
"already arranged into argument tuples, see :func:`itertools.starmap`\\."
msgstr ""
"یک تکرار کننده که *function* را برای هر مورد از *iterable* اعمال می کند، "
"برگردانید و نتایج را به دست می دهد.  اگر آرگومان های اضافی *iterables* ارسال "
"شوند، *function* باید این تعداد آرگومان را بگیرد و به صورت موازی روی آیتم "
"های همه تکرارپذیرها اعمال شود.  با تکرارهای متعدد، زمانی که کوتاه ترین تکرار "
"تمام شود، تکرار کننده متوقف می شود.  برای مواردی که ورودی‌های تابع قبلاً در "
"چند آرگومان مرتب شده‌اند، به :func:`itertools.starmap`\\ مراجعه کنید."

#: ../../library/functions.rst:1152
msgid ""
"Return the largest item in an iterable or the largest of two or more "
"arguments."
msgstr ""
"بزرگترین مورد در یک تکرارپذیر یا بزرگترین مورد از دو یا چند آرگومان را "
"برگردانید."

#: ../../library/functions.rst:1155
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The largest item in the iterable is returned.  If two or more positional "
"arguments are provided, the largest of the positional arguments is returned."
msgstr ""
"اگر یک آرگومان موقعیتی ارائه شود، باید یک :term:`iterable` باشد. بزرگترین "
"مورد در تکرار پذیر برگردانده می شود.  اگر دو یا چند آرگومان موقعیتی ارائه "
"شود، بزرگترین آرگومان موقعیتی برگردانده می شود."

#: ../../library/functions.rst:1160 ../../library/functions.rst:1198
msgid ""
"There are two optional keyword-only arguments. The *key* argument specifies "
"a one-argument ordering function like that used for :meth:`list.sort`. The "
"*default* argument specifies an object to return if the provided iterable is "
"empty. If the iterable is empty and *default* is not provided, a :exc:"
"`ValueError` is raised."
msgstr ""
"دو آرگومان اختیاری فقط برای کلمه کلیدی وجود دارد. آرگومان *key* یک تابع "
"ترتیب یک آرگومان مانند آنچه برای :meth:`list.sort` استفاده می شود را مشخص می "
"کند. آرگومان *default* یک شی را مشخص می کند که در صورت خالی بودن تکرارپذیر "
"ارائه شده، باید برگردد. اگر تکرارپذیر خالی باشد و *default* ارائه نشده باشد، "
"یک :exc:`ValueError` بلند می شود."

#: ../../library/functions.rst:1166
msgid ""
"If multiple items are maximal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc, reverse=True)[0]`` and ``heapq."
"nlargest(1, iterable, key=keyfunc)``."
msgstr ""
"اگر چندین آیتم ماکزیمم باشند، تابع اولین موردی را که با آن مواجه شده است "
"برمی گرداند.  این با سایر ابزارهای حفظ ثبات مرتب سازی مانند "
"``sorted(iterable, key=keyfunc, reverse=True)[0]`` و ``heapq.nlargest(1, "
"iterable, key=keyfunc)`` سازگار است."

#: ../../library/functions.rst:1171 ../../library/functions.rst:1209
msgid "Added the *default* keyword-only parameter."
msgstr "پارامتر فقط کلمه کلیدی *default* اضافه شد."

#: ../../library/functions.rst:1174 ../../library/functions.rst:1212
msgid "The *key* can be ``None``."
msgstr "*key* می تواند ``None`` باشد."

#: ../../library/functions.rst:1182
msgid ""
"Return a \"memory view\" object created from the given argument.  See :ref:"
"`typememoryview` for more information."
msgstr ""
"یک شی \"نمای حافظه\" ایجاد شده از آرگومان داده شده را برگردانید.  برای "
"اطلاعات بیشتر به :ref:`typememoryview` مراجعه کنید."

#: ../../library/functions.rst:1190
msgid ""
"Return the smallest item in an iterable or the smallest of two or more "
"arguments."
msgstr ""
"کوچکترین مورد در یک تکرارپذیر یا کوچکترین یک از دو یا چند آرگومان را "
"برگردانید."

#: ../../library/functions.rst:1193
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The smallest item in the iterable is returned.  If two or more positional "
"arguments are provided, the smallest of the positional arguments is returned."
msgstr ""
"اگر یک آرگومان موقعیتی ارائه شود، باید یک :term:`iterable` باشد. کوچکترین "
"مورد در تکرار پذیر برگردانده می شود.  اگر دو یا چند آرگومان موقعیتی ارائه "
"شود، کوچکترین آرگومان های موقعیتی برگردانده می شود."

#: ../../library/functions.rst:1204
msgid ""
"If multiple items are minimal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc)[0]`` and ``heapq.nsmallest(1, "
"iterable, key=keyfunc)``."
msgstr ""
"اگر چندین آیتم حداقل باشند، تابع اولین موردی را که با آن مواجه شده است برمی "
"گرداند.  این با سایر ابزارهای حفظ ثبات مرتب سازی مانند ``sorted(iterable, "
"key=keyfunc)[0]`` و ``heapq.nsmallest(1, iterable, key=keyfunc)`` سازگار است."

#: ../../library/functions.rst:1219
msgid ""
"Retrieve the next item from the :term:`iterator` by calling its :meth:"
"`~iterator.__next__` method.  If *default* is given, it is returned if the "
"iterator is exhausted, otherwise :exc:`StopIteration` is raised."
msgstr ""
"با فراخوانی روش :meth:`~iterator.__next__` مورد بعدی را از :term:`iterator` "
"بازیابی کنید.  اگر *default* داده شود، اگر تکرار کننده تمام شده باشد، "
"برگردانده می شود، در غیر این صورت :exc:`StopIteration` افزایش می یابد."

#: ../../library/functions.rst:1226
msgid ""
"This is the ultimate base class of all other classes. It has methods that "
"are common to all instances of Python classes. When the constructor is "
"called, it returns a new featureless object. The constructor does not accept "
"any arguments."
msgstr ""
"این کلاس پایه نهایی تمام کلاس‌های دیگر است. متدهایی دارد که در تمام نمونه‌های "
"کلاس‌های پایتون مشترک است. هنگامی که سازنده فراخوانی می شود، یک شیء بدون "
"ویژگی جدید را برمی گرداند. سازنده هیچ استدلالی را نمی پذیرد."

#: ../../library/functions.rst:1233
msgid ""
":class:`object` instances do *not* have :attr:`~object.__dict__` attributes, "
"so you can't assign arbitrary attributes to an instance of :class:`object`."
msgstr ""
"نمونه های :class:`object` *not* دارای ویژگی های :attr:`~object.__dict__` "
"هستند، بنابراین نمی توانید ویژگی های دلخواه را به نمونه ای از :class:"
"`object` اختصاص دهید."

#: ../../library/functions.rst:1240
msgid ""
"Convert an integer number to an octal string prefixed with \"0o\".  The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`~object.__index__` method that returns an "
"integer. For example:"
msgstr ""
"یک عدد صحیح را به یک رشته هشتی با پیشوند \"0o\" تبدیل کنید.  نتیجه یک عبارت "
"پایتون معتبر است. اگر *x* یک شی پایتون :class:`int` نیست، باید یک متد :meth:"
"`~object.__index__` تعریف کند که یک عدد صحیح برمی گرداند. به عنوان مثال:"

#: ../../library/functions.rst:1250
msgid ""
"If you want to convert an integer number to an octal string either with the "
"prefix \"0o\" or not, you can use either of the following ways."
msgstr ""
"اگر می خواهید یک عدد صحیح را با پیشوند \"0o\" یا نه به رشته هشتی تبدیل کنید، "
"می توانید از یکی از راه های زیر استفاده کنید."

#: ../../library/functions.rst:1267
msgid ""
"Open *file* and return a corresponding :term:`file object`.  If the file "
"cannot be opened, an :exc:`OSError` is raised. See :ref:`tut-files` for more "
"examples of how to use this function."
msgstr ""
"*file* را باز کنید و :term:`file object` مربوطه را برگردانید.  اگر فایل باز "
"نمی شود، یک :exc:`OSError` بالا می رود. برای مثال های بیشتر در مورد نحوه "
"استفاده از این تابع، به :ref:`tut-files` مراجعه کنید."

#: ../../library/functions.rst:1271
msgid ""
"*file* is a :term:`path-like object` giving the pathname (absolute or "
"relative to the current working directory) of the file to be opened or an "
"integer file descriptor of the file to be wrapped.  (If a file descriptor is "
"given, it is closed when the returned I/O object is closed unless *closefd* "
"is set to ``False``.)"
msgstr ""
"*file* یک :term:`path-like object` است که نام مسیر (مطلق یا نسبت به "
"دایرکتوری کاری فعلی) فایلی که باید باز شود یا یک توصیفگر فایل صحیح فایلی که "
"قرار است پیچیده شود را می دهد.  (اگر یک توصیفگر فایل داده شود, زمانی که شی I/"
"O برگشتی بسته شود بسته می شود, مگر اینکه *closefd* روی ``False`` تنظیم شود.)"

#: ../../library/functions.rst:1277
msgid ""
"*mode* is an optional string that specifies the mode in which the file is "
"opened.  It defaults to ``'r'`` which means open for reading in text mode. "
"Other common values are ``'w'`` for writing (truncating the file if it "
"already exists), ``'x'`` for exclusive creation, and ``'a'`` for appending "
"(which on *some* Unix systems, means that *all* writes append to the end of "
"the file regardless of the current seek position).  In text mode, if "
"*encoding* is not specified the encoding used is platform-dependent: :func:"
"`locale.getencoding` is called to get the current locale encoding. (For "
"reading and writing raw bytes use binary mode and leave *encoding* "
"unspecified.)  The available modes are:"
msgstr ""
"*mode* یک رشته اختیاری است که حالت باز شدن فایل را مشخص می کند.  پیش‌فرض آن "
"``'r'`` است که به معنای باز برای خواندن در حالت متن است. مقادیر رایج دیگر "
"عبارتند از ``'w'`` برای نوشتن (قطع کردن فایل در صورت وجود)، ``'x'`` برای "
"ایجاد انحصاری، و ``'a'`` برای الحاق (که در سیستم‌های یونیکس *all* به این معنی "
"است که *all* بدون توجه به موقعیت جستجوی فعلی, پیوست به انتهای فایل "
"می‌نویسد).  در حالت متنی، اگر *encoding* مشخص نشده باشد، رمزگذاری مورد "
"استفاده وابسته به پلتفرم است: :func:`locale.getencoding` برای دریافت کدگذاری "
"محلی فعلی فراخوانی می شود. (برای خواندن و نوشتن بایت های خام از حالت باینری "
"استفاده کنید و *encoding* را نامشخص بگذارید.) حالت های موجود عبارتند از:"

#: ../../library/functions.rst:1294
msgid "Character"
msgstr "شخصیت"

#: ../../library/functions.rst:1294
msgid "Meaning"
msgstr "معنی"

#: ../../library/functions.rst:1296
msgid "``'r'``"
msgstr "``'r'``"

#: ../../library/functions.rst:1296
msgid "open for reading (default)"
msgstr "باز برای خواندن (پیش فرض)"

#: ../../library/functions.rst:1297
msgid "``'w'``"
msgstr "``'w'``"

#: ../../library/functions.rst:1297
msgid "open for writing, truncating the file first"
msgstr "برای نوشتن باز کنید، ابتدا فایل را کوتاه کنید"

#: ../../library/functions.rst:1298
msgid "``'x'``"
msgstr "``'x'``"

#: ../../library/functions.rst:1298
msgid "open for exclusive creation, failing if the file already exists"
msgstr ""
"برای ایجاد انحصاری باز است، اگر فایل از قبل وجود داشته باشد، ناموفق است"

#: ../../library/functions.rst:1299
msgid "``'a'``"
msgstr "``'a'``"

#: ../../library/functions.rst:1299
msgid "open for writing, appending to the end of file if it exists"
msgstr "برای نوشتن باز است و در صورت وجود به انتهای فایل اضافه می شود"

#: ../../library/functions.rst:1300
msgid "``'b'``"
msgstr "``'b'``"

#: ../../library/functions.rst:1300 ../../library/functions.rst:1444
msgid "binary mode"
msgstr "حالت باینری"

#: ../../library/functions.rst:1301
msgid "``'t'``"
msgstr "``'t'``"

#: ../../library/functions.rst:1301
msgid "text mode (default)"
msgstr "حالت متن (پیش‌فرض)"

#: ../../library/functions.rst:1302
msgid "``'+'``"
msgstr "``'+'``"

#: ../../library/functions.rst:1302
msgid "open for updating (reading and writing)"
msgstr "باز برای به روز رسانی (خواندن و نوشتن)"

#: ../../library/functions.rst:1305
msgid ""
"The default mode is ``'r'`` (open for reading text, a synonym of ``'rt'``). "
"Modes ``'w+'`` and ``'w+b'`` open and truncate the file.  Modes ``'r+'`` and "
"``'r+b'`` open the file with no truncation."
msgstr ""
"حالت پیش فرض ``'r'`` (باز برای خواندن متن, مترادف ``'rt'``) است. حالت های "
"``'w+'`` و ``'w+b'`` فایل را باز و کوتاه می کنند.  حالت های ``'r+'`` و "
"``'r+b'`` فایل را بدون برش باز می کنند."

#: ../../library/functions.rst:1309
msgid ""
"As mentioned in the :ref:`io-overview`, Python distinguishes between binary "
"and text I/O.  Files opened in binary mode (including ``'b'`` in the *mode* "
"argument) return contents as :class:`bytes` objects without any decoding.  "
"In text mode (the default, or when ``'t'`` is included in the *mode* "
"argument), the contents of the file are returned as :class:`str`, the bytes "
"having been first decoded using a platform-dependent encoding or using the "
"specified *encoding* if given."
msgstr ""
"همانطور که در :ref:`io-overview` ذکر شد، پایتون بین I/O باینری و متنی تمایز "
"قائل می شود.  فایل هایی که در حالت باینری باز می شوند (از جمله ``'b'`` در "
"آرگومان *mode*) بدون هیچ گونه رمزگشایی، محتویات را به عنوان اشیاء :class:"
"`bytes` برمی گرداند.  در حالت متنی (پیش‌فرض, یا زمانی که ``'t'`` در آرگومان "
"*mode* گنجانده می‌شود), محتویات فایل به‌عنوان :class:`str` برگردانده می‌شود، "
"بایت‌ها ابتدا با استفاده از یک رمزگذاری وابسته به پلتفرم رمزگشایی شده‌اند یا "
"در صورت ارائه، با استفاده از *encoding* مشخص‌شده رمزگشایی شده‌اند."

#: ../../library/functions.rst:1319
msgid ""
"Python doesn't depend on the underlying operating system's notion of text "
"files; all the processing is done by Python itself, and is therefore "
"platform-independent."
msgstr ""
"پایتون به مفهوم فایل های متنی سیستم عامل اساسی وابسته نیست. تمام پردازش ها "
"توسط خود پایتون انجام می شود و بنابراین مستقل از پلتفرم است."

#: ../../library/functions.rst:1323
msgid ""
"*buffering* is an optional integer used to set the buffering policy.  Pass 0 "
"to switch buffering off (only allowed in binary mode), 1 to select line "
"buffering (only usable when writing in text mode), and an integer > 1 to "
"indicate the size in bytes of a fixed-size chunk buffer. Note that "
"specifying a buffer size this way applies for binary buffered I/O, but "
"``TextIOWrapper`` (i.e., files opened with ``mode='r+'``) would have another "
"buffering. To disable buffering in ``TextIOWrapper``, consider using the "
"``write_through`` flag for :func:`io.TextIOWrapper.reconfigure`. When no "
"*buffering* argument is given, the default buffering policy works as follows:"
msgstr ""
"*buffering* یک عدد صحیح اختیاری است که برای تنظیم خط مشی بافر استفاده می "
"شود.  0 را برای خاموش کردن بافر (فقط در حالت باینری مجاز است), 1 برای انتخاب "
"بافر خط (فقط هنگام نوشتن در حالت متنی قابل استفاده است) و یک عدد صحیح > 1 "
"برای نشان دادن اندازه یک بافر تکه با اندازه ثابت بر حسب بایت. توجه داشته "
"باشید که تعیین اندازه بافر از این طریق برای I/O بافر باینری اعمال می‌شود، اما "
"``TextIOWrapper`` (یعنی فایل‌هایی که با ``mode='r+'`` باز می‌شوند) بافر دیگری "
"دارند. برای غیرفعال کردن بافر در ``TextIOWrapper``، از پرچم "
"``write_through`` برای :func:`io.TextIOWrapper.reconfigure` استفاده کنید. "
"هنگامی که هیچ آرگومان *buffering* داده نمی شود، سیاست بافر پیش فرض به صورت "
"زیر عمل می کند:"

#: ../../library/functions.rst:1333
msgid ""
"Binary files are buffered in fixed-size chunks; the size of the buffer is "
"chosen using a heuristic trying to determine the underlying device's \"block "
"size\" and falling back on :const:`io.DEFAULT_BUFFER_SIZE`.  On many "
"systems, the buffer will typically be 4096 or 8192 bytes long."
msgstr ""
"فایل های باینری در تکه هایی با اندازه ثابت بافر می شوند. اندازه بافر با "
"استفاده از یک روش اکتشافی برای تعیین \"اندازه بلوک\" دستگاه زیربنایی و "
"بازگشت به :const:`io.DEFAULT_BUFFER_SIZE` انتخاب می شود.  در بسیاری از سیستم "
"ها، بافر معمولاً 4096 یا 8192 بایت طول خواهد داشت."

#: ../../library/functions.rst:1338
msgid ""
"\"Interactive\" text files (files for which :meth:`~io.IOBase.isatty` "
"returns ``True``) use line buffering.  Other text files use the policy "
"described above for binary files."
msgstr ""
"فایل های متنی \"تعاملی\" (فایل هایی که :meth:`~io.IOBase.isatty` برای آنها "
"``True`` برمی گرداند) از بافر خط استفاده می کنند.  سایر فایل های متنی از خط "
"مشی توضیح داده شده در بالا برای فایل های باینری استفاده می کنند."

#: ../../library/functions.rst:1342
msgid ""
"*encoding* is the name of the encoding used to decode or encode the file. "
"This should only be used in text mode.  The default encoding is platform "
"dependent (whatever :func:`locale.getencoding` returns), but any :term:`text "
"encoding` supported by Python can be used. See the :mod:`codecs` module for "
"the list of supported encodings."
msgstr ""
"*encoding* نام رمزگذاری مورد استفاده برای رمزگشایی یا رمزگذاری فایل است. این "
"فقط باید در حالت متن استفاده شود.  کدگذاری پیش‌فرض وابسته به پلتفرم است (هر "
"چیزی که :func:`locale.getencoding` برمی‌گرداند), اما هر :term:`text encoding` "
"پشتیبانی شده توسط پایتون قابل استفاده است. ماژول :mod:`codecs` را برای لیست "
"کدگذاری های پشتیبانی شده ببینید."

#: ../../library/functions.rst:1348
msgid ""
"*errors* is an optional string that specifies how encoding and decoding "
"errors are to be handled—this cannot be used in binary mode. A variety of "
"standard error handlers are available (listed under :ref:`error-handlers`), "
"though any error handling name that has been registered with :func:`codecs."
"register_error` is also valid.  The standard names include:"
msgstr ""
"*errors* یک رشته اختیاری است که نحوه رسیدگی به خطاهای رمزگذاری و رمزگشایی را "
"مشخص می کند - این در حالت باینری قابل استفاده نیست. انواع کنترل کننده خطای "
"استاندارد موجود است (در زیر :ref:`error-handlers` ذکر شده است), اگرچه هر نام "
"رسیدگی به خطا که با :func:`codecs.register_error` ثبت شده باشد نیز معتبر "
"است.  نام های استاندارد عبارتند از:"

#: ../../library/functions.rst:1356
msgid ""
"``'strict'`` to raise a :exc:`ValueError` exception if there is an encoding "
"error.  The default value of ``None`` has the same effect."
msgstr ""
"``'strict'`` برای ایجاد یک استثنا :exc:`ValueError` در صورت وجود خطا در "
"کدگذاری.  مقدار پیش فرض ``None`` نیز همین اثر را دارد."

#: ../../library/functions.rst:1360
msgid ""
"``'ignore'`` ignores errors.  Note that ignoring encoding errors can lead to "
"data loss."
msgstr ""
"``'ignore'`` خطاها را نادیده می گیرد.  توجه داشته باشید که نادیده گرفتن "
"خطاهای رمزگذاری می تواند منجر به از دست رفتن اطلاعات شود."

#: ../../library/functions.rst:1363
msgid ""
"``'replace'`` causes a replacement marker (such as ``'?'``) to be inserted "
"where there is malformed data."
msgstr ""
"``'replace'`` باعث می شود که یک نشانگر جایگزین (مانند ``'?'``) در جایی که "
"داده های نادرست وجود دارد درج شود."

#: ../../library/functions.rst:1366
msgid ""
"``'surrogateescape'`` will represent any incorrect bytes as low surrogate "
"code units ranging from U+DC80 to U+DCFF. These surrogate code units will "
"then be turned back into the same bytes when the ``surrogateescape`` error "
"handler is used when writing data.  This is useful for processing files in "
"an unknown encoding."
msgstr ""
"``'surrogateescape'`` هر بایت نادرستی را به عنوان واحدهای کد جانشین کم از "
"U+DC80 تا U+DCFF نشان خواهد داد. هنگامی که از کنترل کننده خطای "
"``surrogateescape`` هنگام نوشتن داده استفاده می شود، این واحدهای کد جایگزین "
"دوباره به همان بایت ها تبدیل می شوند.  این برای پردازش فایل ها در یک "
"رمزگذاری ناشناخته مفید است."

#: ../../library/functions.rst:1373
msgid ""
"``'xmlcharrefreplace'`` is only supported when writing to a file. Characters "
"not supported by the encoding are replaced with the appropriate XML "
"character reference :samp:`&#{nnn};`."
msgstr ""
"``'xmlcharrefreplace'`` فقط هنگام نوشتن روی یک فایل پشتیبانی می شود. "
"نویسه‌هایی که توسط رمزگذاری پشتیبانی نمی‌شوند، با مرجع کاراکتر XML مناسب "
"جایگزین می‌شوند:samp:`&#{nnn};`."

#: ../../library/functions.rst:1377
msgid ""
"``'backslashreplace'`` replaces malformed data by Python's backslashed "
"escape sequences."
msgstr ""
"``'backslashreplace'`` داده‌های بدشکل را با توالی‌های فرار بک اسلش شده پایتون "
"جایگزین می‌کند."

#: ../../library/functions.rst:1380
msgid ""
"``'namereplace'`` (also only supported when writing) replaces unsupported "
"characters with ``\\N{...}`` escape sequences."
msgstr ""
"``'namereplace'`` (همچنین فقط هنگام نوشتن پشتیبانی می شود) نویسه های "
"پشتیبانی نشده را با دنباله های فرار ``\\N{...}`` جایگزین می کند."

#: ../../library/functions.rst:1388
msgid ""
"*newline* determines how to parse newline characters from the stream. It can "
"be ``None``, ``''``, ``'\\n'``, ``'\\r'``, and ``'\\r\\n'``.  It works as "
"follows:"
msgstr ""
"*newline* نحوه تجزیه کاراکترهای خط جدید از جریان را تعیین می کند. این می "
"تواند ``None``، ``''``، ``'\\n'``، ``'\\r'`` و ``'\\r\\n'`` باشد.  به صورت "
"زیر عمل می کند:"

#: ../../library/functions.rst:1392
msgid ""
"When reading input from the stream, if *newline* is ``None``, universal "
"newlines mode is enabled.  Lines in the input can end in ``'\\n'``, "
"``'\\r'``, or ``'\\r\\n'``, and these are translated into ``'\\n'`` before "
"being returned to the caller.  If it is ``''``, universal newlines mode is "
"enabled, but line endings are returned to the caller untranslated.  If it "
"has any of the other legal values, input lines are only terminated by the "
"given string, and the line ending is returned to the caller untranslated."
msgstr ""
"هنگام خواندن ورودی از جریان، اگر *newline* ``None`` باشد، حالت خطوط جدید "
"جهانی فعال است.  خطوط در ورودی می توانند به ``'\\n'``، ``'\\r'`` یا "
"``'\\r\\n'`` ختم شوند و این خطوط قبل از بازگرداندن به تماس گیرنده به "
"``'\\n'`` ترجمه می شوند.  اگر ``''`` باشد، حالت خطوط جدید جهانی فعال است، "
"اما انتهای خط بدون ترجمه به تماس‌گیرنده برگردانده می‌شود.  اگر هر یک از مقادیر "
"قانونی دیگر را داشته باشد، خطوط ورودی فقط با رشته داده شده خاتمه می‌یابند و "
"پایان خط بدون ترجمه به تماس‌گیرنده بازگردانده می‌شود."

#: ../../library/functions.rst:1400
msgid ""
"When writing output to the stream, if *newline* is ``None``, any ``'\\n'`` "
"characters written are translated to the system default line separator, :"
"data:`os.linesep`.  If *newline* is ``''`` or ``'\\n'``, no translation "
"takes place.  If *newline* is any of the other legal values, any ``'\\n'`` "
"characters written are translated to the given string."
msgstr ""
"هنگام نوشتن خروجی در جریان، اگر *newline* ``None`` باشد، هر کاراکتر "
"``'\\n'`` نوشته شده به جداکننده خط پیش‌فرض سیستم، :data:`os.linesep` ترجمه "
"می‌شود.  اگر *newline* ``''`` یا ``'\\n'`` باشد، هیچ ترجمه ای انجام نمی شود.  "
"اگر *newline* هر یک از مقادیر قانونی دیگر باشد، هر کاراکتر ``'\\n'`` نوشته "
"شده به رشته داده شده ترجمه می شود."

#: ../../library/functions.rst:1406
msgid ""
"If *closefd* is ``False`` and a file descriptor rather than a filename was "
"given, the underlying file descriptor will be kept open when the file is "
"closed.  If a filename is given *closefd* must be ``True`` (the default); "
"otherwise, an error will be raised."
msgstr ""
"اگر *closefd* ``False`` باشد و به جای نام فایل، توصیف‌گر فایل داده شده باشد، "
"وقتی فایل بسته شود، توصیف‌گر فایل زیرین باز نگه داشته می‌شود.  اگر نام فایلی "
"داده شود *closefd* باید ``True`` (پیش فرض) باشد. در غیر این صورت یک خطا مطرح "
"می شود."

#: ../../library/functions.rst:1411
msgid ""
"A custom opener can be used by passing a callable as *opener*. The "
"underlying file descriptor for the file object is then obtained by calling "
"*opener* with (*file*, *flags*). *opener* must return an open file "
"descriptor (passing :mod:`os.open` as *opener* results in functionality "
"similar to passing ``None``)."
msgstr ""
"یک بازکننده سفارشی را می توان با عبور از یک قابل فراخوانی به عنوان *opener* "
"استفاده کرد. سپس با فراخوانی *opener* با (*file*, *flags*) توصیفگر فایل "
"زیربنایی برای شی فایل به دست می آید. *opener* باید یک توصیفگر فایل باز "
"برگرداند (گذراندن :mod:`os.open` به عنوان *opener* عملکردی شبیه به پاس کردن "
"``None`` دارد)."

#: ../../library/functions.rst:1417
msgid "The newly created file is :ref:`non-inheritable <fd_inheritance>`."
msgstr "فایل جدید ایجاد شده :ref:`non-inheritable <fd_inheritance>` است."

#: ../../library/functions.rst:1419
msgid ""
"The following example uses the :ref:`dir_fd <dir_fd>` parameter of the :func:"
"`os.open` function to open a file relative to a given directory::"
msgstr ""
"مثال زیر از پارامتر :ref:`dir_fd <dir_fd>` تابع :func:`os.open` برای باز "
"کردن یک فایل نسبت به دایرکتوری معین استفاده می کند:"

#: ../../library/functions.rst:1422
msgid ""
">>> import os\n"
">>> dir_fd = os.open('somedir', os.O_RDONLY)\n"
">>> def opener(path, flags):\n"
"...     return os.open(path, flags, dir_fd=dir_fd)\n"
"...\n"
">>> with open('spamspam.txt', 'w', opener=opener) as f:\n"
"...     print('This will be written to somedir/spamspam.txt', file=f)\n"
"...\n"
">>> os.close(dir_fd)  # don't leak a file descriptor"
msgstr ""
">>> import os\n"
">>> dir_fd = os.open('somedir', os.O_RDONLY)\n"
">>> def opener(path, flags):\n"
"...     return os.open(path, flags, dir_fd=dir_fd)\n"
"...\n"
">>> with open('spamspam.txt', 'w', opener=opener) as f:\n"
"...     print('This will be written to somedir/spamspam.txt', file=f)\n"
"...\n"
">>> os.close(dir_fd)  # don't leak a file descriptor"

#: ../../library/functions.rst:1432
msgid ""
"The type of :term:`file object` returned by the :func:`open` function "
"depends on the mode.  When :func:`open` is used to open a file in a text "
"mode (``'w'``, ``'r'``, ``'wt'``, ``'rt'``, etc.), it returns a subclass of :"
"class:`io.TextIOBase` (specifically :class:`io.TextIOWrapper`).  When used "
"to open a file in a binary mode with buffering, the returned class is a "
"subclass of :class:`io.BufferedIOBase`.  The exact class varies: in read "
"binary mode, it returns an :class:`io.BufferedReader`; in write binary and "
"append binary modes, it returns an :class:`io.BufferedWriter`, and in read/"
"write mode, it returns an :class:`io.BufferedRandom`.  When buffering is "
"disabled, the raw stream, a subclass of :class:`io.RawIOBase`, :class:`io."
"FileIO`, is returned."
msgstr ""
"نوع :term:`file object` برگردانده شده توسط تابع :func:`open` به حالت بستگی "
"دارد.  هنگامی که از :func:`open` برای باز کردن یک فایل در حالت متنی "
"(``'w'``, ``'r'``, ``'wt'``, ``'rt'``, و غیره) استفاده می شود، زیر کلاس :"
"class:`io.TextIOBase` (مخصوصا :class:`io.TextIOWrapper`) را برمی گرداند.  "
"وقتی برای باز کردن یک فایل در حالت باینری با بافر استفاده می شود، کلاس "
"برگشتی زیر کلاس :class:`io.BufferedIOBase` است.  کلاس دقیق متفاوت است: در "
"حالت خواندن باینری، یک :class:`io.BufferedReader` برمی گرداند. در حالت نوشتن "
"باینری و اضافه کردن، یک :class:`io.BufferedWriter` و در حالت خواندن/نوشتن، "
"یک :class:`io.BufferedRandom` برمی‌گرداند.  هنگامی که بافر غیرفعال است، جریان "
"خام، یک زیر کلاس از :class:`io.RawIOBase`، :class:`io.FileIO`، برگردانده می "
"شود."

#: ../../library/functions.rst:1453
msgid ""
"See also the file handling modules, such as :mod:`fileinput`, :mod:`io` "
"(where :func:`open` is declared), :mod:`os`, :mod:`os.path`, :mod:"
"`tempfile`, and :mod:`shutil`."
msgstr ""
"همچنین به ماژول های مدیریت فایل مانند :mod:`fileinput`، :mod:`io` (جایی که :"
"func:`open` اعلام شده است)، :mod:`os`، :mod:`os.path`، :mod:`tempfile` و :"
"mod:`shutil` مراجعه کنید."

#: ../../library/functions.rst:1457
msgid ""
"Raises an :ref:`auditing event <auditing>` ``open`` with arguments ``path``, "
"``mode``, ``flags``."
msgstr ""
"یک :ref:`auditing event <auditing>` ``open`` را با آرگومان های ``path``، "
"``mode``، ``flags`` افزایش می دهد."

#: ../../library/functions.rst:1459
msgid ""
"The ``mode`` and ``flags`` arguments may have been modified or inferred from "
"the original call."
msgstr ""
"آرگومان‌های ``mode`` و ``flags`` ممکن است از فراخوان اصلی تغییر یافته یا "
"استنتاج شده باشند."

#: ../../library/functions.rst:1464
msgid "The *opener* parameter was added."
msgstr "پارامتر *opener* اضافه شد."

#: ../../library/functions.rst:1465
msgid "The ``'x'`` mode was added."
msgstr "حالت ``'x'`` اضافه شد."

#: ../../library/functions.rst:1466
msgid ":exc:`IOError` used to be raised, it is now an alias of :exc:`OSError`."
msgstr ":exc:`IOError` قبلاً مطرح می شد، اکنون نام مستعار :exc:`OSError` است."

#: ../../library/functions.rst:1467
msgid ""
":exc:`FileExistsError` is now raised if the file opened in exclusive "
"creation mode (``'x'``) already exists."
msgstr ""
"اگر فایل باز شده در حالت ایجاد انحصاری (``'x'``) از قبل وجود داشته باشد، "
"اکنون :exc:`FileExistsError` افزایش می یابد."

#: ../../library/functions.rst:1472
msgid "The file is now non-inheritable."
msgstr "فایل در حال حاضر غیر قابل ارث است."

#: ../../library/functions.rst:1476
msgid ""
"If the system call is interrupted and the signal handler does not raise an "
"exception, the function now retries the system call instead of raising an :"
"exc:`InterruptedError` exception (see :pep:`475` for the rationale)."
msgstr ""
"اگر تماس سیستم قطع شود و کنترل کننده سیگنال استثنایی را مطرح نکند، تابع "
"اکنون به جای افزایش استثنای :exc:`InterruptedError`، فراخوانی سیستم را مجدداً "
"انجام می دهد (برای دلیل منطقی به :pep:`475` مراجعه کنید)."

#: ../../library/functions.rst:1479
msgid "The ``'namereplace'`` error handler was added."
msgstr "کنترل کننده خطای ``'namereplace'`` اضافه شد."

#: ../../library/functions.rst:1483
msgid "Support added to accept objects implementing :class:`os.PathLike`."
msgstr ""
"پشتیبانی برای پذیرش اشیاء در حال اجرای :class:`os.PathLike` اضافه شده است."

#: ../../library/functions.rst:1484
msgid ""
"On Windows, opening a console buffer may return a subclass of :class:`io."
"RawIOBase` other than :class:`io.FileIO`."
msgstr ""
"در ویندوز، باز کردن بافر کنسول ممکن است زیر کلاس :class:`io.RawIOBase` غیر "
"از :class:`io.FileIO` را بازگرداند."

#: ../../library/functions.rst:1487
msgid "The ``'U'`` mode has been removed."
msgstr "حالت ``'U'`` حذف شده است."

#: ../../library/functions.rst:1492
msgid ""
"Given a string representing one Unicode character, return an integer "
"representing the Unicode code point of that character.  For example, "
"``ord('a')`` returns the integer ``97`` and ``ord('€')`` (Euro sign) returns "
"``8364``.  This is the inverse of :func:`chr`."
msgstr ""
"با توجه به رشته ای که یک کاراکتر یونیکد را نشان می دهد، یک عدد صحیح نشان "
"دهنده نقطه کد یونیکد آن کاراکتر را برگردانید.  برای مثال، ``ord('a')`` عدد "
"صحیح ``97`` و ``ord('€')`` (نشانه یورو) ``8364`` را برمی گرداند.  این برعکس :"
"func:`chr` است."

#: ../../library/functions.rst:1500
msgid ""
"Return *base* to the power *exp*; if *mod* is present, return *base* to the "
"power *exp*, modulo *mod* (computed more efficiently than ``pow(base, exp) % "
"mod``). The two-argument form ``pow(base, exp)`` is equivalent to using the "
"power operator: ``base**exp``."
msgstr ""
"*base* را به قدرت *exp* برگردانید. اگر *mod* وجود دارد، *base* را به توان "
"*exp*، مدول *mod* برگردانید (محاسبه شده کارآمدتر از ``pow(base, exp) % "
"mod``). فرم دو استدلالی ``pow(base, exp)`` معادل استفاده از عملگر قدرت است: "
"``base**exp``."

#: ../../library/functions.rst:1505
msgid ""
"The arguments must have numeric types.  With mixed operand types, the "
"coercion rules for binary arithmetic operators apply.  For :class:`int` "
"operands, the result has the same type as the operands (after coercion) "
"unless the second argument is negative; in that case, all arguments are "
"converted to float and a float result is delivered.  For example, ``pow(10, "
"2)`` returns ``100``, but ``pow(10, -2)`` returns ``0.01``.  For a negative "
"base of type :class:`int` or :class:`float` and a non-integral exponent, a "
"complex result is delivered.  For example, ``pow(-9, 0.5)`` returns a value "
"close to ``3j``. Whereas, for a negative base of type :class:`int` or :class:"
"`float` with an integral exponent, a float result is delivered. For example, "
"``pow(-9, 2.0)`` returns ``81.0``."
msgstr ""
"آرگومان ها باید دارای انواع عددی باشند.  با انواع عملوند مختلط، قوانین "
"اجباری برای عملگرهای حسابی باینری اعمال می شود.  برای عملوندهای :class:"
"`int`، نتیجه همان نوع عملوندها است (بعد از اجبار) مگر اینکه آرگومان دوم منفی "
"باشد. در آن صورت، همه آرگومان ها به float تبدیل می شوند و یک نتیجه float "
"تحویل داده می شود.  برای مثال، ``pow(10, 2)`` ``100`` را برمی گرداند، اما "
"``pow(10, -2)`` ``0.01`` را برمی گرداند.  برای یک پایه منفی از نوع :class:"
"`int` یا :class:`float` و یک توان غیرانتگرال، یک نتیجه پیچیده ارائه می شود.  "
"برای مثال، ``pow(-9, 0.5)`` مقداری نزدیک به ``3j`` برمی‌گرداند. در حالی که، "
"برای یک پایه منفی از نوع :class:`int` یا :class:`float` با یک توان انتگرال، "
"یک نتیجه شناور ارائه می شود. به عنوان مثال، ``pow(-9, 2.0)`` ``81.0`` را "
"برمی گرداند."

#: ../../library/functions.rst:1517
msgid ""
"For :class:`int` operands *base* and *exp*, if *mod* is present, *mod* must "
"also be of integer type and *mod* must be nonzero. If *mod* is present and "
"*exp* is negative, *base* must be relatively prime to *mod*. In that case, "
"``pow(inv_base, -exp, mod)`` is returned, where *inv_base* is an inverse to "
"*base* modulo *mod*."
msgstr ""
"برای عملوندهای :class:`int` *base* و *exp*، اگر *mod* وجود داشته باشد، *mod* "
"نیز باید از نوع صحیح باشد و *mod* باید غیر صفر باشد. اگر *mod* وجود داشته "
"باشد و *exp* منفی باشد، *base* باید نسبتاً اول به *mod* باشد. در آن صورت، "
"``pow(inv_base, -exp, mod)`` برگردانده می شود، که در آن *inv_base* معکوس "
"مدول *base* *mod* است."

#: ../../library/functions.rst:1523
msgid "Here's an example of computing an inverse for ``38`` modulo ``97``::"
msgstr "در اینجا مثالی از محاسبه معکوس برای مدول ``38`` ``97`` آورده شده است:"

#: ../../library/functions.rst:1525
msgid ""
">>> pow(38, -1, mod=97)\n"
"23\n"
">>> 23 * 38 % 97 == 1\n"
"True"
msgstr ""
">>> pow(38, -1, mod=97)\n"
"23\n"
">>> 23 * 38 % 97 == 1\n"
"True"

#: ../../library/functions.rst:1530
msgid ""
"For :class:`int` operands, the three-argument form of ``pow`` now allows the "
"second argument to be negative, permitting computation of modular inverses."
msgstr ""
"برای عملوندهای :class:`int`، فرم سه آرگومان ``pow`` اکنون اجازه می‌دهد "
"آرگومان دوم منفی باشد و امکان محاسبه معکوس‌های مدولار را فراهم می‌کند."

#: ../../library/functions.rst:1535
msgid ""
"Allow keyword arguments.  Formerly, only positional arguments were supported."
msgstr ""
"آرگومان های کلمه کلیدی را مجاز کنید.  قبلاً فقط استدلال های موضعی پشتیبانی می "
"شد."

#: ../../library/functions.rst:1542
msgid ""
"Print *objects* to the text stream *file*, separated by *sep* and followed "
"by *end*.  *sep*, *end*, *file*, and *flush*, if present, must be given as "
"keyword arguments."
msgstr ""
"*objects* را در جریان متنی *file* چاپ کنید که با *sep* جدا شده و به دنبال آن "
"*end* است.  *sep*، *end*، *file*، و *flush*، در صورت وجود، باید به عنوان "
"آرگومان های کلمه کلیدی ارائه شوند."

#: ../../library/functions.rst:1546
msgid ""
"All non-keyword arguments are converted to strings like :func:`str` does and "
"written to the stream, separated by *sep* and followed by *end*.  Both *sep* "
"and *end* must be strings; they can also be ``None``, which means to use the "
"default values.  If no *objects* are given, :func:`print` will just write "
"*end*."
msgstr ""
"همه آرگومان‌های غیرکلیدی به رشته‌هایی مانند :func:`str` تبدیل می‌شوند و در "
"جریان نوشته می‌شوند، با *sep* از هم جدا می‌شوند و به دنبال آن *end* می‌شوند.  "
"هر دو *sep* و *end* باید رشته باشند. آنها همچنین می توانند ``None`` باشند که "
"به معنای استفاده از مقادیر پیش فرض است.  اگر *objects* داده نشود، :func:"
"`print` فقط *end* را می نویسد."

#: ../../library/functions.rst:1552
msgid ""
"The *file* argument must be an object with a ``write(string)`` method; if it "
"is not present or ``None``, :data:`sys.stdout` will be used.  Since printed "
"arguments are converted to text strings, :func:`print` cannot be used with "
"binary mode file objects.  For these, use ``file.write(...)`` instead."
msgstr ""
"آرگومان *file* باید یک شی با متد ``write(string)`` باشد. اگر ``None`` وجود "
"نداشته باشد، از :data:`sys.stdout` استفاده خواهد شد.  از آنجایی که آرگومان "
"های چاپ شده به رشته های متنی تبدیل می شوند، :func:`print` را نمی توان با "
"اشیاء فایل حالت باینری استفاده کرد.  برای این موارد، به جای آن از ``file."
"write(...)`` استفاده کنید."

#: ../../library/functions.rst:1557
msgid ""
"Output buffering is usually determined by *file*. However, if *flush* is "
"true, the stream is forcibly flushed."
msgstr ""
"بافر خروجی معمولاً توسط *file* تعیین می شود. با این حال، اگر *flush* درست "
"باشد، جریان به اجبار فلاش می شود."

#: ../../library/functions.rst:1561
msgid "Added the *flush* keyword argument."
msgstr "آرگومان کلمه کلیدی *flush* اضافه شد."

#: ../../library/functions.rst:1567
msgid "Return a property attribute."
msgstr "یک ویژگی ویژگی را برگردانید."

#: ../../library/functions.rst:1569
msgid ""
"*fget* is a function for getting an attribute value.  *fset* is a function "
"for setting an attribute value. *fdel* is a function for deleting an "
"attribute value.  And *doc* creates a docstring for the attribute."
msgstr ""
"*fget* تابعی برای دریافت مقدار مشخصه است.  *fset* تابعی برای تنظیم مقدار "
"مشخصه است. *fdel* تابعی برای حذف یک مقدار مشخصه است.  و *doc* یک Docstring "
"برای ویژگی ایجاد می کند."

#: ../../library/functions.rst:1573
msgid "A typical use is to define a managed attribute ``x``::"
msgstr "یک استفاده معمولی برای تعریف یک ویژگی مدیریت شده ``x`` است::"

#: ../../library/functions.rst:1575
msgid ""
"class C:\n"
"    def __init__(self):\n"
"        self._x = None\n"
"\n"
"    def getx(self):\n"
"        return self._x\n"
"\n"
"    def setx(self, value):\n"
"        self._x = value\n"
"\n"
"    def delx(self):\n"
"        del self._x\n"
"\n"
"    x = property(getx, setx, delx, \"I'm the 'x' property.\")"
msgstr ""
"class C:\n"
"    def __init__(self):\n"
"        self._x = None\n"
"\n"
"    def getx(self):\n"
"        return self._x\n"
"\n"
"    def setx(self, value):\n"
"        self._x = value\n"
"\n"
"    def delx(self):\n"
"        del self._x\n"
"\n"
"    x = property(getx, setx, delx, \"I'm the 'x' property.\")"

#: ../../library/functions.rst:1590
msgid ""
"If *c* is an instance of *C*, ``c.x`` will invoke the getter, ``c.x = "
"value`` will invoke the setter, and ``del c.x`` the deleter."
msgstr ""
"اگر *c* نمونه ای از *C* باشد، ``c.x`` گیرنده، ``c.x = value`` تنظیم کننده و "
"``del c.x`` حذف کننده را فراخوانی می کند."

#: ../../library/functions.rst:1593
msgid ""
"If given, *doc* will be the docstring of the property attribute. Otherwise, "
"the property will copy *fget*'s docstring (if it exists).  This makes it "
"possible to create read-only properties easily using :func:`property` as a :"
"term:`decorator`::"
msgstr ""
"اگر داده شود، *doc* مدارک ویژگی ویژگی خواهد بود. در غیر این صورت، این ویژگی "
"رشته مستند *fget* را کپی می کند (در صورت وجود).  این امکان ایجاد ویژگی های "
"فقط خواندنی را با استفاده از :func:`property` به عنوان :term:`decorator` به "
"راحتی امکان پذیر می کند:"

#: ../../library/functions.rst:1597
msgid ""
"class Parrot:\n"
"    def __init__(self):\n"
"        self._voltage = 100000\n"
"\n"
"    @property\n"
"    def voltage(self):\n"
"        \"\"\"Get the current voltage.\"\"\"\n"
"        return self._voltage"
msgstr ""
"class Parrot:\n"
"    def __init__(self):\n"
"        self._voltage = 100000\n"
"\n"
"    @property\n"
"    def voltage(self):\n"
"        \"\"\"Get the current voltage.\"\"\"\n"
"        return self._voltage"

#: ../../library/functions.rst:1606
msgid ""
"The ``@property`` decorator turns the :meth:`!voltage` method into a "
"\"getter\" for a read-only attribute with the same name, and it sets the "
"docstring for *voltage* to \"Get the current voltage.\""
msgstr ""
"دکوراتور ``@property`` روش :meth:`!voltage` را به یک \"گیرنده\" برای یک "
"ویژگی فقط خواندنی با همین نام تبدیل می کند و رشته docstring را برای "
"*voltage* روی \"Get the current voltage\" تنظیم می کند."

#: ../../library/functions.rst:1614
msgid ""
"A property object has ``getter``, ``setter``, and ``deleter`` methods usable "
"as decorators that create a copy of the property with the corresponding "
"accessor function set to the decorated function.  This is best explained "
"with an example:"
msgstr ""
"یک شیء دارای متدهای ``getter``، ``setter``، و ``deleter`` است که می‌توانند "
"به‌عنوان دکوراتور استفاده شوند که یک کپی از ویژگی را با تابع دسترسی مربوطه به "
"تابع تزئین شده ایجاد می‌کنند.  این به بهترین شکل با یک مثال توضیح داده می شود:"

#: ../../library/functions.rst:1619
msgid ""
"class C:\n"
"    def __init__(self):\n"
"        self._x = None\n"
"\n"
"    @property\n"
"    def x(self):\n"
"        \"\"\"I'm the 'x' property.\"\"\"\n"
"        return self._x\n"
"\n"
"    @x.setter\n"
"    def x(self, value):\n"
"        self._x = value\n"
"\n"
"    @x.deleter\n"
"    def x(self):\n"
"        del self._x"
msgstr ""
"class C:\n"
"    def __init__(self):\n"
"        self._x = None\n"
"\n"
"    @property\n"
"    def x(self):\n"
"        \"\"\"I'm the 'x' property.\"\"\"\n"
"        return self._x\n"
"\n"
"    @x.setter\n"
"    def x(self, value):\n"
"        self._x = value\n"
"\n"
"    @x.deleter\n"
"    def x(self):\n"
"        del self._x"

#: ../../library/functions.rst:1638
msgid ""
"This code is exactly equivalent to the first example.  Be sure to give the "
"additional functions the same name as the original property (``x`` in this "
"case.)"
msgstr ""
"این کد دقیقاً معادل مثال اول است.  مطمئن شوید که نام توابع اضافی را با ویژگی "
"اصلی (در این مورد ``x``) قرار دهید."

#: ../../library/functions.rst:1642
msgid ""
"The returned property object also has the attributes ``fget``, ``fset``, and "
"``fdel`` corresponding to the constructor arguments."
msgstr ""
"شیء ویژگی برگردانده شده نیز دارای ویژگی های ``fget``، ``fset`` و ``fdel`` "
"مربوط به آرگومان های سازنده است."

#: ../../library/functions.rst:1645
msgid "The docstrings of property objects are now writeable."
msgstr "رشته های اسناد اشیاء ویژگی اکنون قابل نوشتن هستند."

#: ../../library/functions.rst:1654
msgid ""
"Rather than being a function, :class:`range` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-range` and :ref:`typesseq`."
msgstr ""
":class:`range` به جای اینکه یک تابع باشد، در واقع یک نوع دنباله تغییر ناپذیر "
"است، همانطور که در :ref:`typesseq-range` و :ref:`typesseq` مستند شده است."

#: ../../library/functions.rst:1660
msgid ""
"Return a string containing a printable representation of an object.  For "
"many types, this function makes an attempt to return a string that would "
"yield an object with the same value when passed to :func:`eval`; otherwise, "
"the representation is a string enclosed in angle brackets that contains the "
"name of the type of the object together with additional information often "
"including the name and address of the object.  A class can control what this "
"function returns for its instances by defining a :meth:`~object.__repr__` "
"method. If :func:`sys.displayhook` is not accessible, this function will "
"raise :exc:`RuntimeError`."
msgstr ""
"یک رشته حاوی نمایش قابل چاپ یک شی را برگردانید.  برای بسیاری از انواع، این "
"تابع تلاش می‌کند تا رشته‌ای را برگرداند که وقتی به :func:`eval` ارسال می‌شود، "
"یک شی با همان مقدار را به دست می‌دهد. در غیر این صورت، نمایش رشته ای است "
"محصور در پرانتزهای زاویه ای که حاوی نام نوع شیء همراه با اطلاعات اضافی اغلب "
"شامل نام و آدرس شیء است.  یک کلاس می تواند آنچه را که این تابع برای نمونه "
"هایش برمی گرداند، با تعریف یک متد :meth:`~object.__repr__` کنترل کند. اگر :"
"func:`sys.displayhook` در دسترس نباشد، این تابع :exc:`RuntimeError` را "
"افزایش می دهد."

#: ../../library/functions.rst:1671
msgid "This class has a custom representation that can be evaluated::"
msgstr "این کلاس یک نمایش سفارشی دارد که می توان آن را ارزیابی کرد:"

#: ../../library/functions.rst:1673
msgid ""
"class Person:\n"
"   def __init__(self, name, age):\n"
"      self.name = name\n"
"      self.age = age\n"
"\n"
"   def __repr__(self):\n"
"      return f\"Person('{self.name}', {self.age})\""
msgstr ""
"class Person:\n"
"   def __init__(self, name, age):\n"
"      self.name = name\n"
"      self.age = age\n"
"\n"
"   def __repr__(self):\n"
"      return f\"Person('{self.name}', {self.age})\""

#: ../../library/functions.rst:1684
msgid ""
"Return a reverse :term:`iterator`.  *seq* must be an object which has a :"
"meth:`~object.__reversed__` method or supports the sequence protocol (the :"
"meth:`~object.__len__` method and the :meth:`~object.__getitem__` method "
"with integer arguments starting at ``0``)."
msgstr ""
"یک :term:`iterator` معکوس را برگردانید.  *seq* باید شیئی باشد که دارای متد :"
"meth:`~object.__reversed__` باشد یا از پروتکل توالی پشتیبانی کند (روش :meth:"
"`~object.__len__` و روش :meth:`~object.__getitem__` با آرگومانهای عدد صحیح "
"که از ``0`` شروع می شوند)."

#: ../../library/functions.rst:1692
msgid ""
"Return *number* rounded to *ndigits* precision after the decimal point.  If "
"*ndigits* is omitted or is ``None``, it returns the nearest integer to its "
"input."
msgstr ""
"پس از نقطه اعشار، *number* را به دقت *ndigits* گرد کنید.  اگر *ndigits* حذف "
"شود یا ``None`` باشد، نزدیکترین عدد صحیح را به ورودی خود برمی گرداند."

#: ../../library/functions.rst:1696
msgid ""
"For the built-in types supporting :func:`round`, values are rounded to the "
"closest multiple of 10 to the power minus *ndigits*; if two multiples are "
"equally close, rounding is done toward the even choice (so, for example, "
"both ``round(0.5)`` and ``round(-0.5)`` are ``0``, and ``round(1.5)`` is "
"``2``).  Any integer value is valid for *ndigits* (positive, zero, or "
"negative).  The return value is an integer if *ndigits* is omitted or "
"``None``. Otherwise, the return value has the same type as *number*."
msgstr ""
"برای انواع داخلی که از :func:`round` پشتیبانی می کنند، مقادیر به نزدیکترین "
"مضرب 10 به توان منهای *ndigits* گرد می شوند. اگر دو مضرب به یک اندازه نزدیک "
"باشند، گرد کردن به سمت گزینه زوج انجام می شود (به عنوان مثال, هر دو "
"``round(0.5)`` و ``round(-0.5)`` ``0`` هستند و ``round(1.5)`` ``2`` هستند).  "
"هر مقدار صحیح برای *ndigits* معتبر است (مثبت, صفر یا منفی).  مقدار برگشتی یک "
"عدد صحیح است اگر *ndigits* حذف شود یا ``None``. در غیر این صورت، مقدار "
"بازگشتی همان نوع *number* است."

#: ../../library/functions.rst:1705
msgid ""
"For a general Python object ``number``, ``round`` delegates to ``number."
"__round__``."
msgstr ""
"برای یک شیء عمومی پایتون ``number``، ``round`` به ``number.__round__`` "
"واگذار می شود."

#: ../../library/functions.rst:1710
msgid ""
"The behavior of :func:`round` for floats can be surprising: for example, "
"``round(2.675, 2)`` gives ``2.67`` instead of the expected ``2.68``. This is "
"not a bug: it's a result of the fact that most decimal fractions can't be "
"represented exactly as a float.  See :ref:`tut-fp-issues` for more "
"information."
msgstr ""
"رفتار :func:`round` برای شناورها می تواند تعجب آور باشد: به عنوان مثال، "
"``round(2.675, 2)`` به جای ``2.68`` مورد انتظار، ``2.67`` را می دهد. این یک "
"اشکال نیست: نتیجه این واقعیت است که اکثر کسرهای اعشاری نمی توانند دقیقاً به "
"عنوان یک شناور نمایش داده شوند.  برای اطلاعات بیشتر به :ref:`tut-fp-issues` "
"مراجعه کنید."

#: ../../library/functions.rst:1722
msgid ""
"Return a new :class:`set` object, optionally with elements taken from "
"*iterable*.  ``set`` is a built-in class.  See :class:`set` and :ref:`types-"
"set` for documentation about this class."
msgstr ""
"یک شی :class:`set` جدید، به صورت اختیاری با عناصر گرفته شده از *iterable* "
"برگردانید.  ``set`` یک کلاس داخلی است.  برای مستندات مربوط به این کلاس به :"
"class:`set` و :ref:`types-set` مراجعه کنید."

#: ../../library/functions.rst:1726
msgid ""
"For other containers see the built-in :class:`frozenset`, :class:`list`, :"
"class:`tuple`, and :class:`dict` classes, as well as the :mod:`collections` "
"module."
msgstr ""
"برای سایر کانتینرها به کلاس های داخلی :class:`frozenset`، :class:`list`، :"
"class:`tuple` و :class:`dict` و همچنین ماژول :mod:`collections` مراجعه کنید."

#: ../../library/functions.rst:1733
msgid ""
"This is the counterpart of :func:`getattr`.  The arguments are an object, a "
"string, and an arbitrary value.  The string may name an existing attribute "
"or a new attribute.  The function assigns the value to the attribute, "
"provided the object allows it.  For example, ``setattr(x, 'foobar', 123)`` "
"is equivalent to ``x.foobar = 123``."
msgstr ""
"این همتای :func:`getattr` است.  آرگومان ها یک شی، یک رشته و یک مقدار دلخواه "
"هستند.  رشته ممکن است یک ویژگی موجود یا یک ویژگی جدید را نامگذاری کند.  تابع "
"مقدار را به ویژگی اختصاص می دهد، مشروط بر اینکه شی اجازه دهد.  به عنوان "
"مثال، ``setattr(x, 'foobar', 123)`` معادل ``x.foobar = 123`` است."

#: ../../library/functions.rst:1739
msgid ""
"*name* need not be a Python identifier as defined in :ref:`identifiers` "
"unless the object chooses to enforce that, for example in a custom :meth:"
"`~object.__getattribute__` or via :attr:`~object.__slots__`. An attribute "
"whose name is not an identifier will not be accessible using the dot "
"notation, but is accessible through :func:`getattr` etc.."
msgstr ""
"*name* لازم نیست یک شناسه پایتون همانطور که در :ref:`identifiers` تعریف شده "
"است باشد، مگر اینکه شیء بخواهد آن را اعمال کند، برای مثال در یک :meth:"
"`~object.__getattribute__` سفارشی یا از طریق :attr:`~object.__slots__`. "
"مشخصه ای که نام آن شناسه نیست با استفاده از علامت نقطه قابل دسترسی نخواهد "
"بود، اما از طریق :func:`getattr` و غیره قابل دسترسی است."

#: ../../library/functions.rst:1747
msgid ""
"Since :ref:`private name mangling <private-name-mangling>` happens at "
"compilation time, one must manually mangle a private attribute's (attributes "
"with two leading underscores) name in order to set it with :func:`setattr`."
msgstr ""
"از آنجایی که :ref:`private name mangling <private-name-mangling>` در زمان "
"کامپایل اتفاق می افتد، باید به صورت دستی نام یک ویژگی خصوصی (ویژگی ها با دو "
"خط زیر خط اصلی) را به منظور تنظیم آن با :func:`setattr` تغییر دهید."

#: ../../library/functions.rst:1756
msgid ""
"Return a :term:`slice` object representing the set of indices specified by "
"``range(start, stop, step)``.  The *start* and *step* arguments default to "
"``None``."
msgstr ""
"یک شی :term:`slice` که مجموعه ای از شاخص های مشخص شده توسط ``range(start, "
"stop, step)`` را نشان می دهد، برگردانید.  آرگومان های *start* و *step* به "
"طور پیش فرض ``None`` هستند."

#: ../../library/functions.rst:1764
msgid ""
"Slice objects have read-only data attributes :attr:`!start`, :attr:`!stop`, "
"and :attr:`!step` which merely return the argument values (or their "
"default).  They have no other explicit functionality; however, they are used "
"by NumPy and other third-party packages."
msgstr ""
"اشیاء Slice دارای ویژگی های داده فقط خواندنی :attr:`!start`، :attr:`!stop` "
"و :attr:`!step` هستند که صرفاً مقادیر آرگومان (یا پیش فرض آنها) را برمی "
"گرداند.  آنها هیچ عملکرد صریح دیگری ندارند. با این حال، آنها توسط NumPy و "
"سایر بسته های شخص ثالث استفاده می شوند."

#: ../../library/functions.rst:1769
msgid ""
"Slice objects are also generated when extended indexing syntax is used.  For "
"example: ``a[start:stop:step]`` or ``a[start:stop, i]``.  See :func:"
"`itertools.islice` for an alternate version that returns an :term:`iterator`."
msgstr ""
"هنگامی که از نحو نمایه سازی توسعه یافته استفاده می شود، اشیاء برش نیز تولید "
"می شوند.  به عنوان مثال: ``a[start:stop:step]`` یا ``a[start:stop, i]``.  "
"برای نسخه جایگزینی که :term:`iterator` را برمی گرداند به :func:`itertools."
"islice` مراجعه کنید."

#: ../../library/functions.rst:1774
msgid ""
"Slice objects are now :term:`hashable` (provided :attr:`~slice.start`, :attr:"
"`~slice.stop`, and :attr:`~slice.step` are hashable)."
msgstr ""
"اشیاء Slice اکنون :term:`hashable` هستند (به شرطی که :attr:`~slice.start`, :"
"attr:`~slice.stop` و :attr:`~slice.step` قابل هش باشند)."

#: ../../library/functions.rst:1780
msgid "Return a new sorted list from the items in *iterable*."
msgstr "یک لیست مرتب شده جدید از موارد موجود در *iterable* برگردانید."

#: ../../library/functions.rst:1782
msgid ""
"Has two optional arguments which must be specified as keyword arguments."
msgstr ""
"دارای دو آرگومان اختیاری است که باید به عنوان آرگومان کلمه کلیدی مشخص شوند."

#: ../../library/functions.rst:1784
msgid ""
"*key* specifies a function of one argument that is used to extract a "
"comparison key from each element in *iterable* (for example, ``key=str."
"lower``).  The default value is ``None`` (compare the elements directly)."
msgstr ""
"*key* تابعی از یک آرگومان را مشخص می کند که برای استخراج یک کلید مقایسه از "
"هر عنصر در *iterable* (مثلا ``key=str.lower``) استفاده می شود.  مقدار پیش "
"فرض ``None`` است (عناصر را مستقیماً مقایسه کنید)."

#: ../../library/functions.rst:1788
msgid ""
"*reverse* is a boolean value.  If set to ``True``, then the list elements "
"are sorted as if each comparison were reversed."
msgstr ""
"*reverse* یک مقدار بولی است.  اگر روی ``True`` تنظیم شود، عناصر لیست طوری "
"مرتب می شوند که گویی هر مقایسه معکوس شده است."

#: ../../library/functions.rst:1791
msgid ""
"Use :func:`functools.cmp_to_key` to convert an old-style *cmp* function to a "
"*key* function."
msgstr ""
"از :func:`functools.cmp_to_key` برای تبدیل تابع قدیمی *cmp* به تابع *key* "
"استفاده کنید."

#: ../../library/functions.rst:1794
msgid ""
"The built-in :func:`sorted` function is guaranteed to be stable. A sort is "
"stable if it guarantees not to change the relative order of elements that "
"compare equal --- this is helpful for sorting in multiple passes (for "
"example, sort by department, then by salary grade)."
msgstr ""
"عملکرد داخلی :func:`sorted` تضمین شده است که پایدار است. مرتب‌سازی پایدار است "
"اگر تضمین کند که ترتیب نسبی عناصری که با هم مقایسه می‌شوند تغییر نمی‌کند --- "
"این برای مرتب‌سازی در چند پاس مفید است (مثلاً مرتب‌سازی بر اساس بخش, سپس بر "
"اساس درجه حقوق)."

#: ../../library/functions.rst:1799
msgid ""
"The sort algorithm uses only ``<`` comparisons between items.  While "
"defining an :meth:`~object.__lt__` method will suffice for sorting, :PEP:`8` "
"recommends that all six :ref:`rich comparisons <comparisons>` be "
"implemented.  This will help avoid bugs when using the same data with other "
"ordering tools such as :func:`max` that rely on a different underlying "
"method.  Implementing all six comparisons also helps avoid confusion for "
"mixed type comparisons which can call reflected the :meth:`~object.__gt__` "
"method."
msgstr ""
"الگوریتم مرتب سازی فقط از مقایسه ``<`` بین موارد استفاده می کند.  در حالی که "
"تعریف یک روش :meth:`~object.__lt__` برای مرتب سازی کافی است، :PEP:`8` توصیه "
"می کند که هر شش :ref:`rich comparisons <comparisons>` پیاده سازی شود.  این "
"به جلوگیری از اشکالات هنگام استفاده از داده های مشابه با سایر ابزارهای سفارش "
"مانند :func:`max` کمک می کند که به روش اساسی متفاوتی متکی هستند.  اجرای هر "
"شش مقایسه همچنین به جلوگیری از سردرگمی برای مقایسه‌های نوع مختلط کمک می‌کند که "
"می‌تواند روش :meth:`~object.__gt__` را منعکس کند."

#: ../../library/functions.rst:1808
msgid ""
"For sorting examples and a brief sorting tutorial, see :ref:`sortinghowto`."
msgstr ""
"برای نمونه‌های مرتب‌سازی و یک آموزش مختصر مرتب‌سازی، به :ref:`sortinghowto` "
"مراجعه کنید."

#: ../../library/functions.rst:1812
msgid "Transform a method into a static method."
msgstr "تبدیل یک روش به روش ایستا"

#: ../../library/functions.rst:1814
msgid ""
"A static method does not receive an implicit first argument. To declare a "
"static method, use this idiom::"
msgstr ""
"یک روش استاتیک یک آرگومان اولیه ضمنی را دریافت نمی کند. برای اعلام یک متد "
"استاتیک، از این اصطلاح استفاده کنید:"

#: ../../library/functions.rst:1817
msgid ""
"class C:\n"
"    @staticmethod\n"
"    def f(arg1, arg2, argN): ..."
msgstr ""
"class C:\n"
"    @staticmethod\n"
"    def f(arg1, arg2, argN): ..."

#: ../../library/functions.rst:1821
msgid ""
"The ``@staticmethod`` form is a function :term:`decorator` -- see :ref:"
"`function` for details."
msgstr ""
"فرم ``@staticmethod`` یک تابع :term:`decorator` است -- برای جزئیات به :ref:"
"`function` مراجعه کنید."

#: ../../library/functions.rst:1824
msgid ""
"A static method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``). Moreover, the static method :term:"
"`descriptor` is also callable, so it can be used in the class definition "
"(such as ``f()``)."
msgstr ""
"یک متد استاتیک را می توان بر روی کلاس (مانند ``C.f()``) یا بر روی یک نمونه "
"(مانند ``C().f()``) فراخوانی کرد. علاوه بر این، روش استاتیک :term:"
"`descriptor` نیز قابل فراخوانی است، بنابراین می توان از آن در تعریف کلاس "
"(مانند ``f()``) استفاده کرد."

#: ../../library/functions.rst:1829
msgid ""
"Static methods in Python are similar to those found in Java or C++. Also, "
"see :func:`classmethod` for a variant that is useful for creating alternate "
"class constructors."
msgstr ""
"روش‌های استاتیک در پایتون شبیه به روش‌های موجود در جاوا یا سی پلاس پلاس است. "
"همچنین، :func:`classmethod` را برای گونه‌ای که برای ایجاد سازنده‌های کلاس "
"جایگزین مفید است، ببینید."

#: ../../library/functions.rst:1833
msgid ""
"Like all decorators, it is also possible to call ``staticmethod`` as a "
"regular function and do something with its result.  This is needed in some "
"cases where you need a reference to a function from a class body and you "
"want to avoid the automatic transformation to instance method.  For these "
"cases, use this idiom::"
msgstr ""
"مانند تمام دکوراتورها، می توان ``staticmethod`` را به عنوان یک عملکرد معمولی "
"فراخوانی کرد و با نتیجه آن کاری انجام داد.  این در برخی موارد مورد نیاز است "
"که در آن به یک تابع از بدنه کلاس نیاز دارید و می خواهید از تبدیل خودکار به "
"روش نمونه اجتناب کنید.  برای این موارد از این اصطلاح استفاده کنید::"

#: ../../library/functions.rst:1839
msgid ""
"def regular_function():\n"
"    ...\n"
"\n"
"class C:\n"
"    method = staticmethod(regular_function)"
msgstr ""
"def regular_function():\n"
"    ...\n"
"\n"
"class C:\n"
"    method = staticmethod(regular_function)"

#: ../../library/functions.rst:1845
msgid "For more information on static methods, see :ref:`types`."
msgstr ""
"برای اطلاعات بیشتر در مورد روش های استاتیک، به :ref:`types` مراجعه کنید."

#: ../../library/functions.rst:1847
msgid ""
"Static methods now inherit the method attributes (:attr:`~function."
"__module__`, :attr:`~function.__name__`, :attr:`~function.__qualname__`, :"
"attr:`~function.__doc__` and :attr:`~function.__annotations__`), have a new "
"``__wrapped__`` attribute, and are now callable as regular functions."
msgstr ""
"روش‌های استاتیک اکنون ویژگی‌های متد (:attr:`~function.__module__`, :attr:"
"`~function.__name__`, :attr:`~function.__qualname__`, :attr:`~function."
"__doc__` و :attr:`~function.__annotations__`) را به ارث می‌برند، یک ویژگی "
"``__wrapped__`` جدید دارند و اکنون به عنوان توابع معمولی قابل فراخوانی هستند."

#: ../../library/functions.rst:1863
msgid ""
"Return a :class:`str` version of *object*.  See :func:`str` for details."
msgstr ""
"یک نسخه :class:`str` از *object* را برگردانید.  برای جزئیات بیشتر به :func:"
"`str` مراجعه کنید."

#: ../../library/functions.rst:1865
msgid ""
"``str`` is the built-in string :term:`class`.  For general information about "
"strings, see :ref:`textseq`."
msgstr ""
"``str`` رشته داخلی :term:`class` است.  برای اطلاعات کلی در مورد رشته ها، به :"
"ref:`textseq` مراجعه کنید."

#: ../../library/functions.rst:1871
msgid ""
"Sums *start* and the items of an *iterable* from left to right and returns "
"the total.  The *iterable*'s items are normally numbers, and the start value "
"is not allowed to be a string."
msgstr ""
"*start* و موارد یک *iterable* را از چپ به راست جمع می کند و کل را برمی "
"گرداند.  موارد *iterable* معمولاً اعداد هستند و مقدار شروع مجاز نیست که یک "
"رشته باشد."

#: ../../library/functions.rst:1875
msgid ""
"For some use cases, there are good alternatives to :func:`sum`. The "
"preferred, fast way to concatenate a sequence of strings is by calling ``''."
"join(sequence)``.  To add floating-point values with extended precision, "
"see :func:`math.fsum`\\.  To concatenate a series of iterables, consider "
"using :func:`itertools.chain`."
msgstr ""
"برای برخی موارد استفاده، جایگزین های خوبی برای :func:`sum` وجود دارد. راه "
"سریع و ترجیحی برای الحاق یک دنباله از رشته ها، فراخوانی ``''."
"join(sequence)`` است.  برای افزودن مقادیر ممیز شناور با دقت بیشتر، به :func:"
"`math.fsum`\\ مراجعه کنید.  برای الحاق یک سری تکرارپذیر، از :func:`itertools."
"chain` استفاده کنید."

#: ../../library/functions.rst:1881
msgid "The *start* parameter can be specified as a keyword argument."
msgstr "پارامتر *start* را می توان به عنوان آرگومان کلمه کلیدی تعیین کرد."

#: ../../library/functions.rst:1884
msgid ""
"Summation of floats switched to an algorithm that gives higher accuracy on "
"most builds."
msgstr ""

#: ../../library/functions.rst:1891
msgid ""
"Return a proxy object that delegates method calls to a parent or sibling "
"class of *type*.  This is useful for accessing inherited methods that have "
"been overridden in a class."
msgstr ""
"یک شیء پراکسی را که فراخوانی های متد را به کلاس والد یا خواهر و برادر *type* "
"واگذار می کند، برگردانید.  این برای دسترسی به متدهای ارثی که در یک کلاس رد "
"شده اند مفید است."

#: ../../library/functions.rst:1895
msgid ""
"The *object_or_type* determines the :term:`method resolution order` to be "
"searched.  The search starts from the class right after the *type*."
msgstr ""
"*object_or_type* :term:`method resolution order` مورد جستجو را تعیین می "
"کند.  جستجو از کلاس درست بعد از *type* شروع می شود."

#: ../../library/functions.rst:1899
msgid ""
"For example, if :attr:`~type.__mro__` of *object_or_type* is ``D -> B -> C -"
"> A -> object`` and the value of *type* is ``B``, then :func:`super` "
"searches ``C -> A -> object``."
msgstr ""
"به عنوان مثال، اگر :attr:`~type.__mro__` از *object_or_type* ``D -> B -> C -"
"> A -> object`` و مقدار *type* ``B`` باشد، :func:`super` ``C -> A -> "
"object`` را جستجو می کند."

#: ../../library/functions.rst:1903
msgid ""
"The :attr:`~type.__mro__` attribute of the class corresponding to "
"*object_or_type* lists the method resolution search order used by both :func:"
"`getattr` and :func:`super`.  The attribute is dynamic and can change "
"whenever the inheritance hierarchy is updated."
msgstr ""
"ویژگی :attr:`~type.__mro__` کلاس مربوط به *object_or_type* ترتیب جستجوی وضوح "
"روش مورد استفاده توسط :func:`getattr` و :func:`super` را فهرست می کند.  "
"ویژگی پویا است و هر زمان که سلسله مراتب وراثت به روز شود می تواند تغییر کند."

#: ../../library/functions.rst:1908
msgid ""
"If the second argument is omitted, the super object returned is unbound.  If "
"the second argument is an object, ``isinstance(obj, type)`` must be true.  "
"If the second argument is a type, ``issubclass(type2, type)`` must be true "
"(this is useful for classmethods)."
msgstr ""
"اگر آرگومان دوم حذف شود، شی فوق العاده بازگردانده شده بدون محدودیت است.  اگر "
"آرگومان دوم یک شی باشد، ``isinstance(obj, type)`` باید درست باشد.  اگر "
"آرگومان دوم یک نوع باشد، ``issubclass(type2, type)`` باید درست باشد (این "
"برای متدهای کلاس مفید است)."

#: ../../library/functions.rst:1913
msgid ""
"There are two typical use cases for *super*.  In a class hierarchy with "
"single inheritance, *super* can be used to refer to parent classes without "
"naming them explicitly, thus making the code more maintainable.  This use "
"closely parallels the use of *super* in other programming languages."
msgstr ""
"دو مورد استفاده معمولی برای *super* وجود دارد.  در یک سلسله مراتب کلاس با "
"وراثت تک، *super* می تواند برای ارجاع به کلاس های والد بدون نامگذاری صریح "
"استفاده شود، بنابراین کد قابل نگهداری تر می شود.  این استفاده با استفاده از "
"*super* در سایر زبان های برنامه نویسی مشابه است."

#: ../../library/functions.rst:1918
msgid ""
"The second use case is to support cooperative multiple inheritance in a "
"dynamic execution environment.  This use case is unique to Python and is not "
"found in statically compiled languages or languages that only support single "
"inheritance.  This makes it possible to implement \"diamond diagrams\" where "
"multiple base classes implement the same method.  Good design dictates that "
"such implementations have the same calling signature in every case (because "
"the order of calls is determined at runtime, because that order adapts to "
"changes in the class hierarchy, and because that order can include sibling "
"classes that are unknown prior to runtime)."
msgstr ""
"دومین مورد استفاده، پشتیبانی از وراثت چندگانه تعاونی در یک محیط اجرای پویا "
"است.  این مورد استفاده مختص پایتون است و در زبان‌های کامپایل‌شده یا زبان‌هایی "
"که فقط از وراثت تک پشتیبانی می‌کنند، یافت نمی‌شود.  این امکان پیاده سازی "
"\"نمودارهای الماس\" را فراهم می کند که در آن چندین کلاس پایه یک روش را اجرا "
"می کنند.  طراحی خوب حکم می‌کند که چنین پیاده‌سازی‌هایی دارای امضای فراخوانی "
"یکسانی در هر مورد باشند (زیرا ترتیب تماس‌ها در زمان اجرا تعیین می‌شود, زیرا "
"این ترتیب با تغییرات سلسله مراتب کلاس سازگار می‌شود, و چون این ترتیب می‌تواند "
"شامل کلاس‌های خواهر و برادری باشد که قبل از اجرا ناشناخته هستند)."

#: ../../library/functions.rst:1928
msgid "For both use cases, a typical superclass call looks like this::"
msgstr "برای هر دو مورد استفاده، یک فراخوانی معمولی سوپرکلاس به صورت زیر است:"

#: ../../library/functions.rst:1930
msgid ""
"class C(B):\n"
"    def method(self, arg):\n"
"        super().method(arg)    # This does the same thing as:\n"
"                               # super(C, self).method(arg)"
msgstr ""
"class C(B):\n"
"    def method(self, arg):\n"
"        super().method(arg)    # This does the same thing as:\n"
"                               # super(C, self).method(arg)"

#: ../../library/functions.rst:1935
msgid ""
"In addition to method lookups, :func:`super` also works for attribute "
"lookups.  One possible use case for this is calling :term:`descriptors "
"<descriptor>` in a parent or sibling class."
msgstr ""
"علاوه بر جستجوی روش، :func:`super` برای جستجوی ویژگی ها نیز کار می کند.  یکی "
"از موارد استفاده ممکن برای این، فراخوانی :term:`descriptors <descriptor>` در "
"کلاس والدین یا خواهر و برادر است."

#: ../../library/functions.rst:1939
msgid ""
"Note that :func:`super` is implemented as part of the binding process for "
"explicit dotted attribute lookups such as ``super().__getitem__(name)``. It "
"does so by implementing its own :meth:`~object.__getattribute__` method for "
"searching classes in a predictable order that supports cooperative multiple "
"inheritance. Accordingly, :func:`super` is undefined for implicit lookups "
"using statements or operators such as ``super()[name]``."
msgstr ""
"توجه داشته باشید که :func:`super` به عنوان بخشی از فرآیند binding برای "
"جستجوی مشخصه های نقطه گذاری صریح مانند ``super().__getitem__(name)`` پیاده "
"سازی می شود. این کار را با پیاده‌سازی روش :meth:`~object.__getattribute__` "
"خود برای جستجوی کلاس‌ها با ترتیبی قابل پیش‌بینی انجام می‌دهد که از وراثت "
"چندگانه تعاونی پشتیبانی می‌کند. بر این اساس، :func:`super` برای جستجوهای ضمنی "
"با استفاده از عبارات یا عملگرهایی مانند ``super()[name]`` تعریف نشده است."

#: ../../library/functions.rst:1947
msgid ""
"Also note that, aside from the zero argument form, :func:`super` is not "
"limited to use inside methods.  The two argument form specifies the "
"arguments exactly and makes the appropriate references.  The zero argument "
"form only works inside a class definition, as the compiler fills in the "
"necessary details to correctly retrieve the class being defined, as well as "
"accessing the current instance for ordinary methods."
msgstr ""
"همچنین توجه داشته باشید که به غیر از فرم آرگومان صفر، :func:`super` محدود به "
"استفاده از متدهای داخلی نیست.  فرم دو آرگومان آرگومان ها را دقیقا مشخص می "
"کند و ارجاعات مناسب را ایجاد می کند.  فرم آرگومان صفر فقط در داخل تعریف کلاس "
"کار می کند، زیرا کامپایلر جزئیات لازم را برای بازیابی صحیح کلاس تعریف شده و "
"همچنین دسترسی به نمونه فعلی برای متدهای معمولی پر می کند."

#: ../../library/functions.rst:1954
msgid ""
"For practical suggestions on how to design cooperative classes using :func:"
"`super`, see `guide to using super() <https://rhettinger.wordpress."
"com/2011/05/26/super-considered-super/>`_."
msgstr ""
"برای پیشنهادات عملی در مورد نحوه طراحی کلاس های تعاونی با استفاده از :func:"
"`super`، به `guide to using super() <https://rhettinger.wordpress."
"com/2011/05/26/super-considered-super/>`_ مراجعه کنید."

#: ../../library/functions.rst:1964
msgid ""
"Rather than being a function, :class:`tuple` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-tuple` and :ref:`typesseq`."
msgstr ""
":class:`tuple` به جای اینکه یک تابع باشد، در واقع یک نوع دنباله تغییر ناپذیر "
"است، همانطور که در :ref:`typesseq-tuple` و :ref:`typesseq` مستند شده است."

#: ../../library/functions.rst:1973
msgid ""
"With one argument, return the type of an *object*.  The return value is a "
"type object and generally the same object as returned by :attr:`object."
"__class__`."
msgstr ""
"با یک آرگومان، نوع *object* را برگردانید.  مقدار بازگشتی یک شی نوع و عموماً "
"همان شیء است که توسط :attr:`object.__class__` برگردانده شده است."

#: ../../library/functions.rst:1977
msgid ""
"The :func:`isinstance` built-in function is recommended for testing the type "
"of an object, because it takes subclasses into account."
msgstr ""
"تابع داخلی :func:`isinstance` برای آزمایش نوع یک شی توصیه می شود، زیرا زیر "
"کلاس ها را در نظر می گیرد."

#: ../../library/functions.rst:1980
msgid ""
"With three arguments, return a new type object.  This is essentially a "
"dynamic form of the :keyword:`class` statement. The *name* string is the "
"class name and becomes the :attr:`~type.__name__` attribute. The *bases* "
"tuple contains the base classes and becomes the :attr:`~type.__bases__` "
"attribute; if empty, :class:`object`, the ultimate base of all classes, is "
"added.  The *dict* dictionary contains attribute and method definitions for "
"the class body; it may be copied or wrapped before becoming the :attr:`~type."
"__dict__` attribute. The following two statements create identical :class:`!"
"type` objects:"
msgstr ""
"با سه آرگومان، یک شی از نوع جدید برگردانید.  این در اصل یک شکل پویا از "
"دستور :keyword:`class` است. رشته *name* نام کلاس است و به ویژگی :attr:`~type."
"__name__` تبدیل می شود. تاپل *bases* شامل کلاس های پایه است و به ویژگی :attr:"
"`~type.__bases__` تبدیل می شود. اگر خالی باشد، :class:`object`، پایه نهایی "
"همه کلاس ها، اضافه می شود.  فرهنگ لغت *dict* شامل تعاریف ویژگی و متد برای "
"بدنه کلاس است. ممکن است قبل از تبدیل شدن به ویژگی :attr:`~type.__dict__` کپی "
"یا بسته بندی شود. دو عبارت زیر اشیاء :class:`!type` یکسان ایجاد می کنند:"

#: ../../library/functions.rst:1995
msgid "See also:"
msgstr "همچنین ببینید:"

#: ../../library/functions.rst:1997
msgid ""
":ref:`Documentation on attributes and methods on classes <class-attrs-and-"
"methods>`."
msgstr ""
":ref:`Documentation on attributes and methods on classes <class-attrs-and-"
"methods>`."

#: ../../library/functions.rst:1998
msgid ":ref:`bltin-type-objects`"
msgstr ":ref:`bltin-type-objects`"

#: ../../library/functions.rst:2000
msgid ""
"Keyword arguments provided to the three argument form are passed to the "
"appropriate metaclass machinery (usually :meth:`~object.__init_subclass__`) "
"in the same way that keywords in a class definition (besides *metaclass*) "
"would."
msgstr ""
"آرگومان های کلیدواژه ارائه شده به فرم سه آرگومان به ماشین های متاکلاس مناسب "
"(معمولاً :meth:`~object.__init_subclass__`) به همان روشی که کلمات کلیدی در "
"تعریف کلاس (علاوه بر *metaclass*) ارائه می شوند، ارسال می شود."

#: ../../library/functions.rst:2005
msgid "See also :ref:`class-customization`."
msgstr "همچنین به :ref:`class-customization` مراجعه کنید."

#: ../../library/functions.rst:2007
msgid ""
"Subclasses of :class:`!type` which don't override ``type.__new__`` may no "
"longer use the one-argument form to get the type of an object."
msgstr ""
"زیر کلاس‌های :class:`!type` که ``type.__new__`` را لغو نمی‌کنند، دیگر "
"نمی‌توانند از فرم تک آرگومان برای دریافت نوع یک شی استفاده کنند."

#: ../../library/functions.rst:2014
msgid ""
"Return the :attr:`~object.__dict__` attribute for a module, class, instance, "
"or any other object with a :attr:`!__dict__` attribute."
msgstr ""
"ویژگی :attr:`~object.__dict__` را برای یک ماژول، کلاس، نمونه یا هر شی دیگری "
"با ویژگی :attr:`!__dict__` برگردانید."

#: ../../library/functions.rst:2017
msgid ""
"Objects such as modules and instances have an updateable :attr:`~object."
"__dict__` attribute; however, other objects may have write restrictions on "
"their :attr:`!__dict__` attributes (for example, classes use a :class:`types."
"MappingProxyType` to prevent direct dictionary updates)."
msgstr ""
"اشیایی مانند ماژول ها و نمونه ها دارای ویژگی :attr:`~object.__dict__` قابل "
"به روز رسانی هستند. با این حال، اشیاء دیگر ممکن است محدودیت های نوشتن در "
"ویژگی های :attr:`!__dict__` خود داشته باشند (به عنوان مثال, کلاس ها از :"
"class:`types.MappingProxyType` برای جلوگیری از به روز رسانی مستقیم فرهنگ لغت "
"استفاده می کنند)."

#: ../../library/functions.rst:2022
msgid ""
"Without an argument, :func:`vars` acts like :func:`locals`.  Note, the "
"locals dictionary is only useful for reads since updates to the locals "
"dictionary are ignored."
msgstr ""

#: ../../library/functions.rst:2026
msgid ""
"A :exc:`TypeError` exception is raised if an object is specified but it "
"doesn't have a :attr:`~object.__dict__` attribute (for example, if its class "
"defines the :attr:`~object.__slots__` attribute)."
msgstr ""
"یک استثنا :exc:`TypeError` در صورتی مطرح می شود که یک شی مشخص شده باشد اما "
"ویژگی :attr:`~object.__dict__` نداشته باشد (به عنوان مثال, اگر کلاس آن "
"ویژگی :attr:`~object.__slots__` را تعریف کند)."

#: ../../library/functions.rst:2032
msgid ""
"Iterate over several iterables in parallel, producing tuples with an item "
"from each one."
msgstr ""
"بر روی چندین تکرار به صورت موازی تکرار کنید، تاپل هایی با یک آیتم از هر یک "
"تولید کنید."

#: ../../library/functions.rst:2035
msgid "Example::"
msgstr "مثال::"

#: ../../library/functions.rst:2037
msgid ""
">>> for item in zip([1, 2, 3], ['sugar', 'spice', 'everything nice']):\n"
"...     print(item)\n"
"...\n"
"(1, 'sugar')\n"
"(2, 'spice')\n"
"(3, 'everything nice')"
msgstr ""
">>> for item in zip([1, 2, 3], ['sugar', 'spice', 'everything nice']):\n"
"...     print(item)\n"
"...\n"
"(1, 'sugar')\n"
"(2, 'spice')\n"
"(3, 'everything nice')"

#: ../../library/functions.rst:2044
msgid ""
"More formally: :func:`zip` returns an iterator of tuples, where the *i*-th "
"tuple contains the *i*-th element from each of the argument iterables."
msgstr ""
"به طور رسمی تر: :func:`zip` یک تکرار از تاپل ها را برمی گرداند، که در آن "
"تاپل *i*-امین عنصر *i*-امین هر یک از تکرارپذیرهای آرگومان است."

#: ../../library/functions.rst:2047
msgid ""
"Another way to think of :func:`zip` is that it turns rows into columns, and "
"columns into rows.  This is similar to `transposing a matrix <https://en."
"wikipedia.org/wiki/Transpose>`_."
msgstr ""
"راه دیگری برای فکر کردن به :func:`zip` این است که ردیف ها را به ستون و ستون "
"ها را به ردیف تبدیل می کند.  این شبیه به `transposing a matrix <https://en."
"wikipedia.org/wiki/Transpose>`_ است."

#: ../../library/functions.rst:2051
msgid ""
":func:`zip` is lazy: The elements won't be processed until the iterable is "
"iterated on, e.g. by a :keyword:`!for` loop or by wrapping in a :class:"
"`list`."
msgstr ""
":func:`zip` تنبل است: عناصر پردازش نمی شوند تا زمانی که تکرار شونده روی آن "
"تکرار شود، به عنوان مثال. توسط یک حلقه :keyword:`!for` یا با پیچیدن در یک :"
"class:`list`."

#: ../../library/functions.rst:2055
msgid ""
"One thing to consider is that the iterables passed to :func:`zip` could have "
"different lengths; sometimes by design, and sometimes because of a bug in "
"the code that prepared these iterables.  Python offers three different "
"approaches to dealing with this issue:"
msgstr ""
"نکته ای که باید در نظر گرفت این است که تکرارهای ارسال شده به :func:`zip` می "
"توانند طول های متفاوتی داشته باشند. گاهی بر اساس طراحی، و گاهی به دلیل وجود "
"اشکال در کدی که این تکرارپذیرها را آماده کرده است.  پایتون سه رویکرد مختلف "
"برای مقابله با این موضوع ارائه می دهد:"

#: ../../library/functions.rst:2060
msgid ""
"By default, :func:`zip` stops when the shortest iterable is exhausted. It "
"will ignore the remaining items in the longer iterables, cutting off the "
"result to the length of the shortest iterable::"
msgstr ""
"به‌طور پیش‌فرض، :func:`zip` زمانی متوقف می‌شود که کوتاه‌ترین قابل تکرار تمام "
"شود. موارد باقیمانده در تکرارپذیرهای طولانی‌تر را نادیده می‌گیرد و نتیجه را به "
"طول کوتاه‌ترین تکرارپذیر کاهش می‌دهد::"

#: ../../library/functions.rst:2064
msgid ""
">>> list(zip(range(3), ['fee', 'fi', 'fo', 'fum']))\n"
"[(0, 'fee'), (1, 'fi'), (2, 'fo')]"
msgstr ""
">>> list(zip(range(3), ['fee', 'fi', 'fo', 'fum']))\n"
"[(0, 'fee'), (1, 'fi'), (2, 'fo')]"

#: ../../library/functions.rst:2067
msgid ""
":func:`zip` is often used in cases where the iterables are assumed to be of "
"equal length.  In such cases, it's recommended to use the ``strict=True`` "
"option. Its output is the same as regular :func:`zip`::"
msgstr ""
":func:`zip` اغلب در مواردی استفاده می شود که طول تکرارپذیرها برابر فرض می "
"شود.  در چنین مواردی، توصیه می شود از گزینه ``strict=True`` استفاده کنید. "
"خروجی آن مانند :func:`zip` معمولی است::"

#: ../../library/functions.rst:2071
msgid ""
">>> list(zip(('a', 'b', 'c'), (1, 2, 3), strict=True))\n"
"[('a', 1), ('b', 2), ('c', 3)]"
msgstr ""
">>> list(zip(('a', 'b', 'c'), (1, 2, 3), strict=True))\n"
"[('a', 1), ('b', 2), ('c', 3)]"

#: ../../library/functions.rst:2074
msgid ""
"Unlike the default behavior, it raises a :exc:`ValueError` if one iterable "
"is exhausted before the others:"
msgstr ""
"برخلاف رفتار پیش‌فرض، اگر یک تکرار قبل از بقیه تمام شود، یک :exc:`ValueError` "
"را افزایش می‌دهد:"

#: ../../library/functions.rst:2092
msgid ""
"Without the ``strict=True`` argument, any bug that results in iterables of "
"different lengths will be silenced, possibly manifesting as a hard-to-find "
"bug in another part of the program."
msgstr ""
"بدون آرگومان ``strict=True``، هر اشکالی که منجر به تکرارپذیری با طول های "
"مختلف شود، خاموش می شود و احتمالاً به عنوان یک اشکال به سختی یافتن در قسمت "
"دیگری از برنامه ظاهر می شود."

#: ../../library/functions.rst:2096
msgid ""
"Shorter iterables can be padded with a constant value to make all the "
"iterables have the same length.  This is done by :func:`itertools."
"zip_longest`."
msgstr ""
"تکرارهای کوتاه‌تر را می‌توان با یک مقدار ثابت اضافه کرد تا طول همه تکرار "
"شونده‌ها یکسان باشد.  این کار توسط :func:`itertools.zip_longest` انجام می شود."

#: ../../library/functions.rst:2100
msgid ""
"Edge cases: With a single iterable argument, :func:`zip` returns an iterator "
"of 1-tuples.  With no arguments, it returns an empty iterator."
msgstr ""
"موارد لبه: با یک آرگومان تکرارپذیر، :func:`zip` تکرار کننده 1-tuples را برمی "
"گرداند.  بدون هیچ آرگومان، یک تکرار کننده خالی برمی گرداند."

#: ../../library/functions.rst:2103
msgid "Tips and tricks:"
msgstr "نکات و ترفندها:"

#: ../../library/functions.rst:2105
msgid ""
"The left-to-right evaluation order of the iterables is guaranteed. This "
"makes possible an idiom for clustering a data series into n-length groups "
"using ``zip(*[iter(s)]*n, strict=True)``.  This repeats the *same* iterator "
"``n`` times so that each output tuple has the result of ``n`` calls to the "
"iterator. This has the effect of dividing the input into n-length chunks."
msgstr ""
"ترتیب ارزیابی از چپ به راست تکرارپذیرها تضمین شده است. این یک اصطلاح را برای "
"خوشه‌بندی یک سری داده در گروه‌های طول n با استفاده از ``zip(*[iter(s)]*n, "
"strict=True)`` ممکن می‌سازد.  این کار تکرار *same* ``n`` را بارها تکرار می "
"کند تا هر تاپل خروجی نتیجه فراخوانی ``n`` را به تکرار کننده داشته باشد. این "
"اثر تقسیم ورودی به تکه های n طول دارد."

#: ../../library/functions.rst:2111
msgid ""
":func:`zip` in conjunction with the ``*`` operator can be used to unzip a "
"list::"
msgstr ""
":func:`zip` در ارتباط با اپراتور ``*`` می تواند برای باز کردن یک لیست "
"استفاده شود::"

#: ../../library/functions.rst:2114
msgid ""
">>> x = [1, 2, 3]\n"
">>> y = [4, 5, 6]\n"
">>> list(zip(x, y))\n"
"[(1, 4), (2, 5), (3, 6)]\n"
">>> x2, y2 = zip(*zip(x, y))\n"
">>> x == list(x2) and y == list(y2)\n"
"True"
msgstr ""
">>> x = [1, 2, 3]\n"
">>> y = [4, 5, 6]\n"
">>> list(zip(x, y))\n"
"[(1, 4), (2, 5), (3, 6)]\n"
">>> x2, y2 = zip(*zip(x, y))\n"
">>> x == list(x2) and y == list(y2)\n"
"True"

#: ../../library/functions.rst:2122
msgid "Added the ``strict`` argument."
msgstr "آرگومان ``strict`` اضافه شد."

#: ../../library/functions.rst:2134
msgid ""
"This is an advanced function that is not needed in everyday Python "
"programming, unlike :func:`importlib.import_module`."
msgstr ""
"این یک تابع پیشرفته است که برخلاف :func:`importlib.import_module` در برنامه "
"نویسی روزمره پایتون مورد نیاز نیست."

#: ../../library/functions.rst:2137
msgid ""
"This function is invoked by the :keyword:`import` statement.  It can be "
"replaced (by importing the :mod:`builtins` module and assigning to "
"``builtins.__import__``) in order to change semantics of the :keyword:`!"
"import` statement, but doing so is **strongly** discouraged as it is usually "
"simpler to use import hooks (see :pep:`302`) to attain the same goals and "
"does not cause issues with code which assumes the default import "
"implementation is in use.  Direct use of :func:`__import__` is also "
"discouraged in favor of :func:`importlib.import_module`."
msgstr ""
"این تابع توسط دستور :keyword:`import` فراخوانی می شود.  می توان آن را "
"جایگزین کرد (با وارد کردن ماژول :mod:`builtins` و تخصیص به ``builtins."
"__import__``) به منظور تغییر معنایی دستور :keyword:`!import`، اما انجام این "
"کار **strongly** منع می شود زیرا معمولاً استفاده از قلاب های واردات ساده تر "
"است (به :pep:`302` مراجعه کنید) برای دستیابی به اهداف مشابه و باعث ایجاد "
"مشکلاتی در پیاده سازی پیش فرض نمی شود.  استفاده مستقیم از :func:`__import__` "
"نیز به نفع :func:`importlib.import_module` منع شده است."

#: ../../library/functions.rst:2146
msgid ""
"The function imports the module *name*, potentially using the given "
"*globals* and *locals* to determine how to interpret the name in a package "
"context. The *fromlist* gives the names of objects or submodules that should "
"be imported from the module given by *name*.  The standard implementation "
"does not use its *locals* argument at all and uses its *globals* only to "
"determine the package context of the :keyword:`import` statement."
msgstr ""
"این تابع، ماژول *name* را وارد می کند، به طور بالقوه از *globals* و *locals* "
"داده شده برای تعیین نحوه تفسیر نام در زمینه بسته استفاده می کند. *fromlist* "
"نام اشیا یا زیر ماژول هایی را می دهد که باید از ماژول ارائه شده توسط *name* "
"وارد شوند.  پیاده سازی استاندارد به هیچ وجه از آرگومان *locals* خود استفاده "
"نمی کند و از *globals* خود فقط برای تعیین بافت بسته دستور :keyword:`import` "
"استفاده می کند."

#: ../../library/functions.rst:2153
msgid ""
"*level* specifies whether to use absolute or relative imports. ``0`` (the "
"default) means only perform absolute imports.  Positive values for *level* "
"indicate the number of parent directories to search relative to the "
"directory of the module calling :func:`__import__` (see :pep:`328` for the "
"details)."
msgstr ""
"*level* مشخص می کند که آیا از واردات مطلق یا نسبی استفاده شود. ``0`` "
"(پیش‌فرض) به این معنی است که فقط واردات مطلق را انجام دهید.  مقادیر مثبت "
"*level* تعداد دایرکتوری‌های والد را نشان می‌دهد که نسبت به دایرکتوری ماژول "
"فراخوانی :func:`__import__` هستند (برای جزئیات به :pep:`328` مراجعه کنید)."

#: ../../library/functions.rst:2159
msgid ""
"When the *name* variable is of the form ``package.module``, normally, the "
"top-level package (the name up till the first dot) is returned, *not* the "
"module named by *name*.  However, when a non-empty *fromlist* argument is "
"given, the module named by *name* is returned."
msgstr ""
"هنگامی که متغیر *name* به شکل ``package.module`` باشد، معمولاً بسته سطح بالا "
"(نام تا اولین نقطه) برگردانده می شود، ماژول *not* که توسط *name* نامگذاری "
"شده است.  با این حال، هنگامی که یک آرگومان غیر خالی *fromlist* داده می شود، "
"ماژول نام گذاری شده توسط *name* برگردانده می شود."

#: ../../library/functions.rst:2164
msgid ""
"For example, the statement ``import spam`` results in bytecode resembling "
"the following code::"
msgstr ""
"به عنوان مثال، عبارت ``import spam`` منجر به بایت کد مشابه کد زیر می شود:"

#: ../../library/functions.rst:2167
msgid "spam = __import__('spam', globals(), locals(), [], 0)"
msgstr "spam = __import__('spam', globals(), locals(), [], 0)"

#: ../../library/functions.rst:2169
msgid "The statement ``import spam.ham`` results in this call::"
msgstr "عبارت ``import spam.ham`` در این فراخوانی نتیجه می گیرد:"

#: ../../library/functions.rst:2171
msgid "spam = __import__('spam.ham', globals(), locals(), [], 0)"
msgstr "spam = __import__('spam.ham', globals(), locals(), [], 0)"

#: ../../library/functions.rst:2173
msgid ""
"Note how :func:`__import__` returns the toplevel module here because this is "
"the object that is bound to a name by the :keyword:`import` statement."
msgstr ""
"توجه داشته باشید که چگونه :func:`__import__` ماژول سطح بالا را در اینجا برمی "
"گرداند زیرا این شیئی است که توسط دستور :keyword:`import` به یک نام محدود می "
"شود."

#: ../../library/functions.rst:2176
msgid ""
"On the other hand, the statement ``from spam.ham import eggs, sausage as "
"saus`` results in ::"
msgstr ""
"از سوی دیگر، عبارت ``from spam.ham import eggs, sausage as saus`` به صورت "
"زیر است:"

#: ../../library/functions.rst:2179
msgid ""
"_temp = __import__('spam.ham', globals(), locals(), ['eggs', 'sausage'], 0)\n"
"eggs = _temp.eggs\n"
"saus = _temp.sausage"
msgstr ""
"_temp = __import__('spam.ham', globals(), locals(), ['eggs', 'sausage'], 0)\n"
"eggs = _temp.eggs\n"
"saus = _temp.sausage"

#: ../../library/functions.rst:2183
msgid ""
"Here, the ``spam.ham`` module is returned from :func:`__import__`.  From "
"this object, the names to import are retrieved and assigned to their "
"respective names."
msgstr ""
"در اینجا، ماژول ``spam.ham`` از :func:`__import__` برگردانده می شود.  از این "
"شی، نام‌هایی که وارد می‌شوند بازیابی می‌شوند و به نام‌های مربوطه تخصیص می‌یابند."

#: ../../library/functions.rst:2187
msgid ""
"If you simply want to import a module (potentially within a package) by "
"name, use :func:`importlib.import_module`."
msgstr ""
"اگر به سادگی می خواهید یک ماژول (به طور بالقوه در یک بسته) را با نام وارد "
"کنید، از :func:`importlib.import_module` استفاده کنید."

#: ../../library/functions.rst:2190
msgid ""
"Negative values for *level* are no longer supported (which also changes the "
"default value to 0)."
msgstr ""
"مقادیر منفی برای *level* دیگر پشتیبانی نمی شود (که همچنین مقدار پیش فرض را "
"به 0 تغییر می دهد)."

#: ../../library/functions.rst:2194
msgid ""
"When the command line options :option:`-E` or :option:`-I` are being used, "
"the environment variable :envvar:`PYTHONCASEOK` is now ignored."
msgstr ""
"هنگامی که از گزینه های خط فرمان :option:`-E` یا :option:`-I` استفاده می شود، "
"متغیر محیطی :envvar:`PYTHONCASEOK` اکنون نادیده گرفته می شود."

#: ../../library/functions.rst:2199
msgid "Footnotes"
msgstr "پاورقی ها"

#: ../../library/functions.rst:2200
msgid ""
"Note that the parser only accepts the Unix-style end of line convention. If "
"you are reading the code from a file, make sure to use newline conversion "
"mode to convert Windows or Mac-style newlines."
msgstr ""
"توجه داشته باشید که تجزیه کننده فقط قرارداد پایان خط به سبک یونیکس را می "
"پذیرد. اگر در حال خواندن کد از یک فایل هستید، مطمئن شوید که از حالت تبدیل خط "
"جدید برای تبدیل خطوط جدید به سبک ویندوز یا مک استفاده کنید."

#: ../../library/functions.rst:154
msgid "Boolean"
msgstr "بولی"

#: ../../library/functions.rst:154 ../../library/functions.rst:1971
msgid "type"
msgstr "نوع"

#: ../../library/functions.rst:638
msgid "built-in function"
msgstr "عملکرد داخلی"

#: ../../library/functions.rst:638
msgid "exec"
msgstr "اجرایی"

#: ../../library/functions.rst:725
msgid "NaN"
msgstr "NaN"

#: ../../library/functions.rst:725
msgid "Infinity"
msgstr "بی نهایت"

#: ../../library/functions.rst:793
msgid "__format__"
msgstr "__format__"

#: ../../library/functions.rst:793 ../../library/functions.rst:1855
msgid "string"
msgstr "رشته"

#: ../../library/functions.rst:793
msgid "format() (built-in function)"
msgstr "format() (تابع داخلی)"

#: ../../library/functions.rst:1262
msgid "file object"
msgstr "شی فایل"

#: ../../library/functions.rst:1262 ../../library/functions.rst:1383
msgid "open() built-in function"
msgstr "تابع داخلی open()."

#: ../../library/functions.rst:1290
msgid "file"
msgstr "فایل"

#: ../../library/functions.rst:1290
msgid "modes"
msgstr "حالت ها"

#: ../../library/functions.rst:1383
msgid "universal newlines"
msgstr "خطوط جدید جهانی"

#: ../../library/functions.rst:1444
msgid "line-buffered I/O"
msgstr "ورودی/خروجی بافر خطی"

#: ../../library/functions.rst:1444
msgid "unbuffered I/O"
msgstr "ورودی/خروجی بافر نشده"

#: ../../library/functions.rst:1444
msgid "buffer size, I/O"
msgstr "اندازه بافر، ورودی/خروجی"

#: ../../library/functions.rst:1444
msgid "I/O control"
msgstr "کنترل I/O"

#: ../../library/functions.rst:1444
msgid "buffering"
msgstr "بافر کردن"

#: ../../library/functions.rst:1444
msgid "text mode"
msgstr "حالت متنی"

#: ../../library/functions.rst:1444 ../../library/functions.rst:2128
msgid "module"
msgstr "ماژول"

#: ../../library/functions.rst:1444
msgid "sys"
msgstr "سیستم"

#: ../../library/functions.rst:1855
msgid "str() (built-in function)"
msgstr "str() (تابع داخلی)"

#: ../../library/functions.rst:1971
msgid "object"
msgstr "شی"

#: ../../library/functions.rst:2128
msgid "statement"
msgstr "بیانیه"

#: ../../library/functions.rst:2128
msgid "import"
msgstr "واردات"

#: ../../library/functions.rst:2128
msgid "builtins"
msgstr "سازه ها"
