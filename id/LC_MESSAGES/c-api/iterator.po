# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# LIQRGV <septianhari@gmail.com>, 2019
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-16 16:41+0000\n"
"PO-Revision-Date: 2019-09-01 03:38+0000\n"
"Last-Translator: LIQRGV <septianhari@gmail.com>, 2019\n"
"Language-Team: Indonesian (https://app.transifex.com/python-doc/teams/5390/"
"id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:6
msgid "Iterator Objects"
msgstr "Objek Iterator "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:8
msgid ""
"Python provides two general-purpose iterator objects.  The first, a sequence "
"iterator, works with an arbitrary sequence supporting the :meth:"
"`__getitem__` method.  The second works with a callable object and a "
"sentinel value, calling the callable for each item in the sequence, and "
"ending the iteration when the sentinel value is returned."
msgstr ""
"Python menyediakan dua objek iterator untuk tujuan umum. Yang pertama, "
"iterator urutan, bekerja dengan objek yang mendukung metode :meth:"
"`__getitem__`. Yang kedua bekerja dengan objek yang bisa dipanggil dan nilai "
"penjaga (sentinel), memanggil callable untuk setiap item dalam urutan, dan "
"mengakhiri iterasi ketika nilai penjaga dikembalikan."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:17
msgid ""
"Type object for iterator objects returned by :c:func:`PySeqIter_New` and the "
"one-argument form of the :func:`iter` built-in function for built-in "
"sequence types."
msgstr ""
"Tipe objek untuk objek iterator yang dikembalikan oleh :c:func:"
"`PySeqIter_New` dan bentuk satu argumen dari fungsi bawaan :func:`iter` "
"untuk tipe urutan bawaan."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:24
msgid "Return true if the type of *op* is :c:data:`PySeqIter_Type`."
msgstr ""
"Mengembalikan nilai true jika tipe *op* adalah :c:data:`PySeqIter_Type`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:29
msgid ""
"Return an iterator that works with a general sequence object, *seq*.  The "
"iteration ends when the sequence raises :exc:`IndexError` for the "
"subscripting operation."
msgstr ""
"Mengembalikan iterator yang bekerja dengan objek urutan umum, *seq*. Iterasi "
"berakhir ketika urutan memunculkan :exc:`IndexError` untuk operasi "
"berlangganan (subscripting)."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:36
msgid ""
"Type object for iterator objects returned by :c:func:`PyCallIter_New` and "
"the two-argument form of the :func:`iter` built-in function."
msgstr ""
"Tipe objek untuk objek iterator yang dikembalikan oleh :c:func:"
"`PyCallIter_New` dan bentuk dua argumen dari fungsi bawaan :func:`iter` ."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:42
msgid "Return true if the type of *op* is :c:data:`PyCallIter_Type`."
msgstr ""
"Mengembalikan nilai true jika tipe *op* adalah :c:data:`PyCallIter_Type`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:47
msgid ""
"Return a new iterator.  The first parameter, *callable*, can be any Python "
"callable object that can be called with no parameters; each call to it "
"should return the next item in the iteration.  When *callable* returns a "
"value equal to *sentinel*, the iteration will be terminated."
msgstr ""
"Mengembalikan iterator baru. Parameter pertama, *callable*, dapat berupa "
"objek Python callable apa saja yang bisa dipanggil tanpa parameter; setiap "
"pemanggilan harus mengembalikan butir (item) berikutnya pada iterator. "
"Ketika *callable* mengembalikan nilai sama dengan *sentinel*, perulangan "
"akan dihentikan."
