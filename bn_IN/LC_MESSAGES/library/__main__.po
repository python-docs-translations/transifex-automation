# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-10 23:57+0000\n"
"PO-Revision-Date: 2020-05-30 11:55+0000\n"
"Language-Team: Bengali (India) (https://app.transifex.com/python-doc/teams/5390/bn_IN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: bn_IN\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../library/__main__.rst:3
msgid ":mod:`__main__` --- Top-level script environment"
msgstr ""

#: ../../library/__main__.rst:10
msgid ""
"``'__main__'`` is the name of the scope in which top-level code executes. A "
"module's __name__ is set equal to ``'__main__'`` when read from standard "
"input, a script, or from an interactive prompt."
msgstr ""

#: ../../library/__main__.rst:14
msgid ""
"A module can discover whether or not it is running in the main scope by "
"checking its own ``__name__``, which allows a common idiom for conditionally"
" executing code in a module when it is run as a script or with ``python -m``"
" but not when it is imported::"
msgstr ""

#: ../../library/__main__.rst:23
msgid ""
"For a package, the same effect can be achieved by including a "
"``__main__.py`` module, the contents of which will be executed when the "
"module is run with ``-m``."
msgstr ""
