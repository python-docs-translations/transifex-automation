name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      push:
        description: "Push source strings to Transifex"
        type: boolean
      pull:
        description: "Pull translations from Transifex"
        type: boolean
  schedule:
    - cron: '0 14 * * 5'

env:
  TX_CLI_VERSION: '1.6.7'
  PYTHON_NEWEST: '3.12'      # Latest Python version being translated
  TX_PROJECT: python-newest  # Project name for the latest python version

jobs:
  trigger:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.version.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3.5.2
      - id: version
        run: echo "matrix=$(cat .github/versions.txt)" >> $GITHUB_OUTPUT

  update:
    runs-on: ubuntu-latest
    needs: trigger
    permissions:
      contents: write
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        cpython_version: ${{fromJson(needs.trigger.outputs.matrix)}}
        # must match existent projects in Transifex

    steps:
      - name: Check out ${{ github.repository }}
        uses: actions/checkout@v3.5.2

      - name: Check out ${{ matrix.cpython_version }} branch of CPython
        uses: actions/checkout@v3.5.2
        with:
          repository: python/cpython
          persist-credentials: false
          ref: ${{ matrix.cpython_version }}
          path: cpython

      - name: Check out ${{ matrix.cpython_version }} branch of ${{ github.repository }}
        uses: actions/checkout@v3.5.2
        with:
          ref: ${{ matrix.cpython_version }}
          path: cpython/Doc/locales

      - name: Set up Python 3
        uses: actions/setup-python@v4.6.1
        with:
          python-version: '3'
          cache: 'pip'
          cache-dependency-path: |
            'requirements.txt'
            'cpython/Doc/requirements.txt'

      - name: Install Transifex CLI
        working-directory: /usr/local/bin
        run: |
          curl -o- https://raw.githubusercontent.com/transifex/cli/master/install.sh | bash -s -- v${{ env.TX_CLI_VERSION }}

      - name: Install dependencies
        run: |
          sudo apt update -y && sudo apt install gettext -y
          pip3 install --upgrade pip
          pip3 install -r requirements.txt -r cpython/Doc/requirements.txt

      - name: Change Transifex project name if Python version != python-newest
        if: ${{ matrix.cpython_version != env.PYTHON_NEWEST }}
        shell: bash
        run: |
          ver=$(echo ${{ matrix.cpython_version }} | sed 's|\.||')
          echo "TX_PROJECT=python-$ver" >> $GITHUB_ENV
          echo ${{ env.TX_PROJECT }}

        # required for generating .tx/config
      - name: Generate POT files
        working-directory: cpython/Doc
        run: |
          sphinx-build -E -b gettext -D gettext_compact=0 -d build/.doctrees . locales/pot

        # See issue #15
      - name: Patch POT files
        working-directory: cpython/Doc/locales/pot
        run: |
          $GITHUB_WORKSPACE/scripts/remove-ilegal-strings.sh library/{codecs,re}.pot reference/lexical_analysis.pot

      - name: Generate Transifex configuration file (.tx/config)
        working-directory: cpython/Doc/locales
        run: |
          sphinx-intl create-txconfig
          sphinx-intl update-txconfig-resources --pot-dir pot --locale-dir . --transifex-organization-name python-doc --transifex-project-name ${{ env.TX_PROJECT }}
          sed -i '/^minimum_perc = 0$/s/0/1/' .tx/config

      - name: Push source strings to Transifex
        if: ${{ github.event_name == 'schedule' ||
               (github.event_name == 'workflow_dispatch' && github.event.inputs.push == 'true') }}
        working-directory: cpython/Doc/locales
        id: tx_push
        run: |
          tx push --source --skip
        env:
          TX_TOKEN: ${{ secrets.TX_TOKEN }}

      - name: Lock unused translations
        if: steps.tx_push.outcome == 'success'
        run: |
          python3 scripts/lock-translations.py cpython/Doc/locales/.tx/config ${{ env.TX_PROJECT }}
        env:
          TX_TOKEN: ${{ secrets.TX_TOKEN }}

      - name: Pull translations for all languages
        if: ${{ github.event_name == 'schedule' ||
               (github.event_name == 'workflow_dispatch' && github.event.inputs.pull == 'true') }}
        working-directory: cpython/Doc/locales
        run: |
          tx pull --all --translations --force
        env:
          TX_TOKEN: ${{ secrets.TX_TOKEN }}

      - name: Powrap POT files and modified PO files
        working-directory: cpython/Doc/locales
        run: |
          powrap --modified
          powrap pot/{**/,}*.pot

      # tx pull takes some time and have big chances of connection error,
      # so make to to commit downloaded PO successfully downloads on
      # failure or success.
      - name: Commit and push changes
        working-directory: cpython/Doc/locales
        if: always()
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git status
          shopt -s globstar
          git diff -I'^"POT-Creation-Date: ' --numstat **/*.po **/*.pot | cut -f3 | xargs -r git add
          git add $(git ls-files -o --exclude-standard *.po *.pot) .tx/config
          git diff-index --cached --quiet HEAD || { git commit -m "Update translations from ${{ env.BRANCH }}" && git push; }
